
/**
 * Client
**/

import * as runtime from './runtime/library.js';
import $Types = runtime.Types // general types
import $Public = runtime.Types.Public
import $Utils = runtime.Types.Utils
import $Extensions = runtime.Types.Extensions
import $Result = runtime.Types.Result

export type PrismaPromise<T> = $Public.PrismaPromise<T>


/**
 * Model alert_event
 * This table contains check constraints and requires additional setup for migrations. Visit https://pris.ly/d/check-constraints for more info.
 */
export type alert_event = $Result.DefaultSelection<Prisma.$alert_eventPayload>
/**
 * Model daily_route
 * 
 */
export type daily_route = $Result.DefaultSelection<Prisma.$daily_routePayload>
/**
 * Model device
 * 
 */
export type device = $Result.DefaultSelection<Prisma.$devicePayload>
/**
 * Model device_status_event
 * 
 */
export type device_status_event = $Result.DefaultSelection<Prisma.$device_status_eventPayload>
/**
 * Model device_truck_assignment
 * 
 */
export type device_truck_assignment = $Result.DefaultSelection<Prisma.$device_truck_assignmentPayload>
/**
 * Model fleet_group
 * 
 */
export type fleet_group = $Result.DefaultSelection<Prisma.$fleet_groupPayload>
/**
 * Model fuel_level_event
 * This table contains check constraints and requires additional setup for migrations. Visit https://pris.ly/d/check-constraints for more info.
 */
export type fuel_level_event = $Result.DefaultSelection<Prisma.$fuel_level_eventPayload>
/**
 * Model geofence
 * 
 */
export type geofence = $Result.DefaultSelection<Prisma.$geofencePayload>
/**
 * Model gps_position
 * This table is a partition table and requires additional setup for migrations. Visit https://pris.ly/d/partition-tables for more info.
 */
export type gps_position = $Result.DefaultSelection<Prisma.$gps_positionPayload>
/**
 * Model hub_temperature_event
 * 
 */
export type hub_temperature_event = $Result.DefaultSelection<Prisma.$hub_temperature_eventPayload>
/**
 * Model lock_event
 * 
 */
export type lock_event = $Result.DefaultSelection<Prisma.$lock_eventPayload>
/**
 * Model sensor
 * This table contains check constraints and requires additional setup for migrations. Visit https://pris.ly/d/check-constraints for more info.
 */
export type sensor = $Result.DefaultSelection<Prisma.$sensorPayload>
/**
 * Model sensor_data_raw
 * 
 */
export type sensor_data_raw = $Result.DefaultSelection<Prisma.$sensor_data_rawPayload>
/**
 * Model sensor_processing_queue
 * 
 */
export type sensor_processing_queue = $Result.DefaultSelection<Prisma.$sensor_processing_queuePayload>
/**
 * Model spatial_ref_sys
 * This table contains check constraints and requires additional setup for migrations. Visit https://pris.ly/d/check-constraints for more info.
 */
export type spatial_ref_sys = $Result.DefaultSelection<Prisma.$spatial_ref_sysPayload>
/**
 * Model speed_event
 * 
 */
export type speed_event = $Result.DefaultSelection<Prisma.$speed_eventPayload>
/**
 * Model tire_error_code
 * 
 */
export type tire_error_code = $Result.DefaultSelection<Prisma.$tire_error_codePayload>
/**
 * Model tire_position_config
 * This table contains check constraints and requires additional setup for migrations. Visit https://pris.ly/d/check-constraints for more info.
 */
export type tire_position_config = $Result.DefaultSelection<Prisma.$tire_position_configPayload>
/**
 * Model tire_pressure_event
 * 
 */
export type tire_pressure_event = $Result.DefaultSelection<Prisma.$tire_pressure_eventPayload>
/**
 * Model trip
 * 
 */
export type trip = $Result.DefaultSelection<Prisma.$tripPayload>
/**
 * Model truck
 * 
 */
export type truck = $Result.DefaultSelection<Prisma.$truckPayload>
/**
 * Model truck_status_event
 * 
 */
export type truck_status_event = $Result.DefaultSelection<Prisma.$truck_status_eventPayload>
/**
 * Model users
 * This table contains check constraints and requires additional setup for migrations. Visit https://pris.ly/d/check-constraints for more info.
 */
export type users = $Result.DefaultSelection<Prisma.$usersPayload>

/**
 * Enums
 */
export namespace $Enums {
  export const alert_type: {
  LOW_TIRE: 'LOW_TIRE',
  SPEEDING: 'SPEEDING',
  IDLE: 'IDLE',
  GEOFENCE_IN: 'GEOFENCE_IN',
  GEOFENCE_OUT: 'GEOFENCE_OUT',
  FUEL_DROP: 'FUEL_DROP',
  HIGH_TEMP: 'HIGH_TEMP',
  DEVICE_LOST: 'DEVICE_LOST'
};

export type alert_type = (typeof alert_type)[keyof typeof alert_type]


export const truck_status: {
  active: 'active',
  inactive: 'inactive',
  maintenance: 'maintenance'
};

export type truck_status = (typeof truck_status)[keyof typeof truck_status]

}

export type alert_type = $Enums.alert_type

export const alert_type: typeof $Enums.alert_type

export type truck_status = $Enums.truck_status

export const truck_status: typeof $Enums.truck_status

/**
 * ##  Prisma Client ʲˢ
 * 
 * Type-safe database client for TypeScript & Node.js
 * @example
 * ```
 * const prisma = new PrismaClient()
 * // Fetch zero or more Alert_events
 * const alert_events = await prisma.alert_event.findMany()
 * ```
 *
 * 
 * Read more in our [docs](https://www.prisma.io/docs/reference/tools-and-interfaces/prisma-client).
 */
export class PrismaClient<
  ClientOptions extends Prisma.PrismaClientOptions = Prisma.PrismaClientOptions,
  U = 'log' extends keyof ClientOptions ? ClientOptions['log'] extends Array<Prisma.LogLevel | Prisma.LogDefinition> ? Prisma.GetEvents<ClientOptions['log']> : never : never,
  ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs
> {
  [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['other'] }

    /**
   * ##  Prisma Client ʲˢ
   * 
   * Type-safe database client for TypeScript & Node.js
   * @example
   * ```
   * const prisma = new PrismaClient()
   * // Fetch zero or more Alert_events
   * const alert_events = await prisma.alert_event.findMany()
   * ```
   *
   * 
   * Read more in our [docs](https://www.prisma.io/docs/reference/tools-and-interfaces/prisma-client).
   */

  constructor(optionsArg ?: Prisma.Subset<ClientOptions, Prisma.PrismaClientOptions>);
  $on<V extends U>(eventType: V, callback: (event: V extends 'query' ? Prisma.QueryEvent : Prisma.LogEvent) => void): void;

  /**
   * Connect with the database
   */
  $connect(): $Utils.JsPromise<void>;

  /**
   * Disconnect from the database
   */
  $disconnect(): $Utils.JsPromise<void>;

  /**
   * Add a middleware
   * @deprecated since 4.16.0. For new code, prefer client extensions instead.
   * @see https://pris.ly/d/extensions
   */
  $use(cb: Prisma.Middleware): void

/**
   * Executes a prepared raw query and returns the number of affected rows.
   * @example
   * ```
   * const result = await prisma.$executeRaw`UPDATE User SET cool = ${true} WHERE email = ${'user@email.com'};`
   * ```
   * 
   * Read more in our [docs](https://www.prisma.io/docs/reference/tools-and-interfaces/prisma-client/raw-database-access).
   */
  $executeRaw<T = unknown>(query: TemplateStringsArray | Prisma.Sql, ...values: any[]): Prisma.PrismaPromise<number>;

  /**
   * Executes a raw query and returns the number of affected rows.
   * Susceptible to SQL injections, see documentation.
   * @example
   * ```
   * const result = await prisma.$executeRawUnsafe('UPDATE User SET cool = $1 WHERE email = $2 ;', true, 'user@email.com')
   * ```
   * 
   * Read more in our [docs](https://www.prisma.io/docs/reference/tools-and-interfaces/prisma-client/raw-database-access).
   */
  $executeRawUnsafe<T = unknown>(query: string, ...values: any[]): Prisma.PrismaPromise<number>;

  /**
   * Performs a prepared raw query and returns the `SELECT` data.
   * @example
   * ```
   * const result = await prisma.$queryRaw`SELECT * FROM User WHERE id = ${1} OR email = ${'user@email.com'};`
   * ```
   * 
   * Read more in our [docs](https://www.prisma.io/docs/reference/tools-and-interfaces/prisma-client/raw-database-access).
   */
  $queryRaw<T = unknown>(query: TemplateStringsArray | Prisma.Sql, ...values: any[]): Prisma.PrismaPromise<T>;

  /**
   * Performs a raw query and returns the `SELECT` data.
   * Susceptible to SQL injections, see documentation.
   * @example
   * ```
   * const result = await prisma.$queryRawUnsafe('SELECT * FROM User WHERE id = $1 OR email = $2;', 1, 'user@email.com')
   * ```
   * 
   * Read more in our [docs](https://www.prisma.io/docs/reference/tools-and-interfaces/prisma-client/raw-database-access).
   */
  $queryRawUnsafe<T = unknown>(query: string, ...values: any[]): Prisma.PrismaPromise<T>;


  /**
   * Allows the running of a sequence of read/write operations that are guaranteed to either succeed or fail as a whole.
   * @example
   * ```
   * const [george, bob, alice] = await prisma.$transaction([
   *   prisma.user.create({ data: { name: 'George' } }),
   *   prisma.user.create({ data: { name: 'Bob' } }),
   *   prisma.user.create({ data: { name: 'Alice' } }),
   * ])
   * ```
   * 
   * Read more in our [docs](https://www.prisma.io/docs/concepts/components/prisma-client/transactions).
   */
  $transaction<P extends Prisma.PrismaPromise<any>[]>(arg: [...P], options?: { isolationLevel?: Prisma.TransactionIsolationLevel }): $Utils.JsPromise<runtime.Types.Utils.UnwrapTuple<P>>

  $transaction<R>(fn: (prisma: Omit<PrismaClient, runtime.ITXClientDenyList>) => $Utils.JsPromise<R>, options?: { maxWait?: number, timeout?: number, isolationLevel?: Prisma.TransactionIsolationLevel }): $Utils.JsPromise<R>


  $extends: $Extensions.ExtendsHook<"extends", Prisma.TypeMapCb, ExtArgs>

      /**
   * `prisma.alert_event`: Exposes CRUD operations for the **alert_event** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more Alert_events
    * const alert_events = await prisma.alert_event.findMany()
    * ```
    */
  get alert_event(): Prisma.alert_eventDelegate<ExtArgs>;

  /**
   * `prisma.daily_route`: Exposes CRUD operations for the **daily_route** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more Daily_routes
    * const daily_routes = await prisma.daily_route.findMany()
    * ```
    */
  get daily_route(): Prisma.daily_routeDelegate<ExtArgs>;

  /**
   * `prisma.device`: Exposes CRUD operations for the **device** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more Devices
    * const devices = await prisma.device.findMany()
    * ```
    */
  get device(): Prisma.deviceDelegate<ExtArgs>;

  /**
   * `prisma.device_status_event`: Exposes CRUD operations for the **device_status_event** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more Device_status_events
    * const device_status_events = await prisma.device_status_event.findMany()
    * ```
    */
  get device_status_event(): Prisma.device_status_eventDelegate<ExtArgs>;

  /**
   * `prisma.device_truck_assignment`: Exposes CRUD operations for the **device_truck_assignment** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more Device_truck_assignments
    * const device_truck_assignments = await prisma.device_truck_assignment.findMany()
    * ```
    */
  get device_truck_assignment(): Prisma.device_truck_assignmentDelegate<ExtArgs>;

  /**
   * `prisma.fleet_group`: Exposes CRUD operations for the **fleet_group** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more Fleet_groups
    * const fleet_groups = await prisma.fleet_group.findMany()
    * ```
    */
  get fleet_group(): Prisma.fleet_groupDelegate<ExtArgs>;

  /**
   * `prisma.fuel_level_event`: Exposes CRUD operations for the **fuel_level_event** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more Fuel_level_events
    * const fuel_level_events = await prisma.fuel_level_event.findMany()
    * ```
    */
  get fuel_level_event(): Prisma.fuel_level_eventDelegate<ExtArgs>;

  /**
   * `prisma.geofence`: Exposes CRUD operations for the **geofence** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more Geofences
    * const geofences = await prisma.geofence.findMany()
    * ```
    */
  get geofence(): Prisma.geofenceDelegate<ExtArgs>;

  /**
   * `prisma.gps_position`: Exposes CRUD operations for the **gps_position** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more Gps_positions
    * const gps_positions = await prisma.gps_position.findMany()
    * ```
    */
  get gps_position(): Prisma.gps_positionDelegate<ExtArgs>;

  /**
   * `prisma.hub_temperature_event`: Exposes CRUD operations for the **hub_temperature_event** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more Hub_temperature_events
    * const hub_temperature_events = await prisma.hub_temperature_event.findMany()
    * ```
    */
  get hub_temperature_event(): Prisma.hub_temperature_eventDelegate<ExtArgs>;

  /**
   * `prisma.lock_event`: Exposes CRUD operations for the **lock_event** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more Lock_events
    * const lock_events = await prisma.lock_event.findMany()
    * ```
    */
  get lock_event(): Prisma.lock_eventDelegate<ExtArgs>;

  /**
   * `prisma.sensor`: Exposes CRUD operations for the **sensor** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more Sensors
    * const sensors = await prisma.sensor.findMany()
    * ```
    */
  get sensor(): Prisma.sensorDelegate<ExtArgs>;

  /**
   * `prisma.sensor_data_raw`: Exposes CRUD operations for the **sensor_data_raw** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more Sensor_data_raws
    * const sensor_data_raws = await prisma.sensor_data_raw.findMany()
    * ```
    */
  get sensor_data_raw(): Prisma.sensor_data_rawDelegate<ExtArgs>;

  /**
   * `prisma.sensor_processing_queue`: Exposes CRUD operations for the **sensor_processing_queue** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more Sensor_processing_queues
    * const sensor_processing_queues = await prisma.sensor_processing_queue.findMany()
    * ```
    */
  get sensor_processing_queue(): Prisma.sensor_processing_queueDelegate<ExtArgs>;

  /**
   * `prisma.spatial_ref_sys`: Exposes CRUD operations for the **spatial_ref_sys** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more Spatial_ref_sys
    * const spatial_ref_sys = await prisma.spatial_ref_sys.findMany()
    * ```
    */
  get spatial_ref_sys(): Prisma.spatial_ref_sysDelegate<ExtArgs>;

  /**
   * `prisma.speed_event`: Exposes CRUD operations for the **speed_event** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more Speed_events
    * const speed_events = await prisma.speed_event.findMany()
    * ```
    */
  get speed_event(): Prisma.speed_eventDelegate<ExtArgs>;

  /**
   * `prisma.tire_error_code`: Exposes CRUD operations for the **tire_error_code** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more Tire_error_codes
    * const tire_error_codes = await prisma.tire_error_code.findMany()
    * ```
    */
  get tire_error_code(): Prisma.tire_error_codeDelegate<ExtArgs>;

  /**
   * `prisma.tire_position_config`: Exposes CRUD operations for the **tire_position_config** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more Tire_position_configs
    * const tire_position_configs = await prisma.tire_position_config.findMany()
    * ```
    */
  get tire_position_config(): Prisma.tire_position_configDelegate<ExtArgs>;

  /**
   * `prisma.tire_pressure_event`: Exposes CRUD operations for the **tire_pressure_event** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more Tire_pressure_events
    * const tire_pressure_events = await prisma.tire_pressure_event.findMany()
    * ```
    */
  get tire_pressure_event(): Prisma.tire_pressure_eventDelegate<ExtArgs>;

  /**
   * `prisma.trip`: Exposes CRUD operations for the **trip** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more Trips
    * const trips = await prisma.trip.findMany()
    * ```
    */
  get trip(): Prisma.tripDelegate<ExtArgs>;

  /**
   * `prisma.truck`: Exposes CRUD operations for the **truck** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more Trucks
    * const trucks = await prisma.truck.findMany()
    * ```
    */
  get truck(): Prisma.truckDelegate<ExtArgs>;

  /**
   * `prisma.truck_status_event`: Exposes CRUD operations for the **truck_status_event** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more Truck_status_events
    * const truck_status_events = await prisma.truck_status_event.findMany()
    * ```
    */
  get truck_status_event(): Prisma.truck_status_eventDelegate<ExtArgs>;

  /**
   * `prisma.users`: Exposes CRUD operations for the **users** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more Users
    * const users = await prisma.users.findMany()
    * ```
    */
  get users(): Prisma.usersDelegate<ExtArgs>;
}

export namespace Prisma {
  export import DMMF = runtime.DMMF

  export type PrismaPromise<T> = $Public.PrismaPromise<T>

  /**
   * Validator
   */
  export import validator = runtime.Public.validator

  /**
   * Prisma Errors
   */
  export import PrismaClientKnownRequestError = runtime.PrismaClientKnownRequestError
  export import PrismaClientUnknownRequestError = runtime.PrismaClientUnknownRequestError
  export import PrismaClientRustPanicError = runtime.PrismaClientRustPanicError
  export import PrismaClientInitializationError = runtime.PrismaClientInitializationError
  export import PrismaClientValidationError = runtime.PrismaClientValidationError
  export import NotFoundError = runtime.NotFoundError

  /**
   * Re-export of sql-template-tag
   */
  export import sql = runtime.sqltag
  export import empty = runtime.empty
  export import join = runtime.join
  export import raw = runtime.raw
  export import Sql = runtime.Sql



  /**
   * Decimal.js
   */
  export import Decimal = runtime.Decimal

  export type DecimalJsLike = runtime.DecimalJsLike

  /**
   * Metrics 
   */
  export type Metrics = runtime.Metrics
  export type Metric<T> = runtime.Metric<T>
  export type MetricHistogram = runtime.MetricHistogram
  export type MetricHistogramBucket = runtime.MetricHistogramBucket

  /**
  * Extensions
  */
  export import Extension = $Extensions.UserArgs
  export import getExtensionContext = runtime.Extensions.getExtensionContext
  export import Args = $Public.Args
  export import Payload = $Public.Payload
  export import Result = $Public.Result
  export import Exact = $Public.Exact

  /**
   * Prisma Client JS version: 5.22.0
   * Query Engine version: 605197351a3c8bdd595af2d2a9bc3025bca48ea2
   */
  export type PrismaVersion = {
    client: string
  }

  export const prismaVersion: PrismaVersion 

  /**
   * Utility Types
   */


  export import JsonObject = runtime.JsonObject
  export import JsonArray = runtime.JsonArray
  export import JsonValue = runtime.JsonValue
  export import InputJsonObject = runtime.InputJsonObject
  export import InputJsonArray = runtime.InputJsonArray
  export import InputJsonValue = runtime.InputJsonValue

  /**
   * Types of the values used to represent different kinds of `null` values when working with JSON fields.
   * 
   * @see https://www.prisma.io/docs/concepts/components/prisma-client/working-with-fields/working-with-json-fields#filtering-on-a-json-field
   */
  namespace NullTypes {
    /**
    * Type of `Prisma.DbNull`.
    * 
    * You cannot use other instances of this class. Please use the `Prisma.DbNull` value.
    * 
    * @see https://www.prisma.io/docs/concepts/components/prisma-client/working-with-fields/working-with-json-fields#filtering-on-a-json-field
    */
    class DbNull {
      private DbNull: never
      private constructor()
    }

    /**
    * Type of `Prisma.JsonNull`.
    * 
    * You cannot use other instances of this class. Please use the `Prisma.JsonNull` value.
    * 
    * @see https://www.prisma.io/docs/concepts/components/prisma-client/working-with-fields/working-with-json-fields#filtering-on-a-json-field
    */
    class JsonNull {
      private JsonNull: never
      private constructor()
    }

    /**
    * Type of `Prisma.AnyNull`.
    * 
    * You cannot use other instances of this class. Please use the `Prisma.AnyNull` value.
    * 
    * @see https://www.prisma.io/docs/concepts/components/prisma-client/working-with-fields/working-with-json-fields#filtering-on-a-json-field
    */
    class AnyNull {
      private AnyNull: never
      private constructor()
    }
  }

  /**
   * Helper for filtering JSON entries that have `null` on the database (empty on the db)
   * 
   * @see https://www.prisma.io/docs/concepts/components/prisma-client/working-with-fields/working-with-json-fields#filtering-on-a-json-field
   */
  export const DbNull: NullTypes.DbNull

  /**
   * Helper for filtering JSON entries that have JSON `null` values (not empty on the db)
   * 
   * @see https://www.prisma.io/docs/concepts/components/prisma-client/working-with-fields/working-with-json-fields#filtering-on-a-json-field
   */
  export const JsonNull: NullTypes.JsonNull

  /**
   * Helper for filtering JSON entries that are `Prisma.DbNull` or `Prisma.JsonNull`
   * 
   * @see https://www.prisma.io/docs/concepts/components/prisma-client/working-with-fields/working-with-json-fields#filtering-on-a-json-field
   */
  export const AnyNull: NullTypes.AnyNull

  type SelectAndInclude = {
    select: any
    include: any
  }

  type SelectAndOmit = {
    select: any
    omit: any
  }

  /**
   * Get the type of the value, that the Promise holds.
   */
  export type PromiseType<T extends PromiseLike<any>> = T extends PromiseLike<infer U> ? U : T;

  /**
   * Get the return type of a function which returns a Promise.
   */
  export type PromiseReturnType<T extends (...args: any) => $Utils.JsPromise<any>> = PromiseType<ReturnType<T>>

  /**
   * From T, pick a set of properties whose keys are in the union K
   */
  type Prisma__Pick<T, K extends keyof T> = {
      [P in K]: T[P];
  };


  export type Enumerable<T> = T | Array<T>;

  export type RequiredKeys<T> = {
    [K in keyof T]-?: {} extends Prisma__Pick<T, K> ? never : K
  }[keyof T]

  export type TruthyKeys<T> = keyof {
    [K in keyof T as T[K] extends false | undefined | null ? never : K]: K
  }

  export type TrueKeys<T> = TruthyKeys<Prisma__Pick<T, RequiredKeys<T>>>

  /**
   * Subset
   * @desc From `T` pick properties that exist in `U`. Simple version of Intersection
   */
  export type Subset<T, U> = {
    [key in keyof T]: key extends keyof U ? T[key] : never;
  };

  /**
   * SelectSubset
   * @desc From `T` pick properties that exist in `U`. Simple version of Intersection.
   * Additionally, it validates, if both select and include are present. If the case, it errors.
   */
  export type SelectSubset<T, U> = {
    [key in keyof T]: key extends keyof U ? T[key] : never
  } &
    (T extends SelectAndInclude
      ? 'Please either choose `select` or `include`.'
      : T extends SelectAndOmit
        ? 'Please either choose `select` or `omit`.'
        : {})

  /**
   * Subset + Intersection
   * @desc From `T` pick properties that exist in `U` and intersect `K`
   */
  export type SubsetIntersection<T, U, K> = {
    [key in keyof T]: key extends keyof U ? T[key] : never
  } &
    K

  type Without<T, U> = { [P in Exclude<keyof T, keyof U>]?: never };

  /**
   * XOR is needed to have a real mutually exclusive union type
   * https://stackoverflow.com/questions/42123407/does-typescript-support-mutually-exclusive-types
   */
  type XOR<T, U> =
    T extends object ?
    U extends object ?
      (Without<T, U> & U) | (Without<U, T> & T)
    : U : T


  /**
   * Is T a Record?
   */
  type IsObject<T extends any> = T extends Array<any>
  ? False
  : T extends Date
  ? False
  : T extends Uint8Array
  ? False
  : T extends BigInt
  ? False
  : T extends object
  ? True
  : False


  /**
   * If it's T[], return T
   */
  export type UnEnumerate<T extends unknown> = T extends Array<infer U> ? U : T

  /**
   * From ts-toolbelt
   */

  type __Either<O extends object, K extends Key> = Omit<O, K> &
    {
      // Merge all but K
      [P in K]: Prisma__Pick<O, P & keyof O> // With K possibilities
    }[K]

  type EitherStrict<O extends object, K extends Key> = Strict<__Either<O, K>>

  type EitherLoose<O extends object, K extends Key> = ComputeRaw<__Either<O, K>>

  type _Either<
    O extends object,
    K extends Key,
    strict extends Boolean
  > = {
    1: EitherStrict<O, K>
    0: EitherLoose<O, K>
  }[strict]

  type Either<
    O extends object,
    K extends Key,
    strict extends Boolean = 1
  > = O extends unknown ? _Either<O, K, strict> : never

  export type Union = any

  type PatchUndefined<O extends object, O1 extends object> = {
    [K in keyof O]: O[K] extends undefined ? At<O1, K> : O[K]
  } & {}

  /** Helper Types for "Merge" **/
  export type IntersectOf<U extends Union> = (
    U extends unknown ? (k: U) => void : never
  ) extends (k: infer I) => void
    ? I
    : never

  export type Overwrite<O extends object, O1 extends object> = {
      [K in keyof O]: K extends keyof O1 ? O1[K] : O[K];
  } & {};

  type _Merge<U extends object> = IntersectOf<Overwrite<U, {
      [K in keyof U]-?: At<U, K>;
  }>>;

  type Key = string | number | symbol;
  type AtBasic<O extends object, K extends Key> = K extends keyof O ? O[K] : never;
  type AtStrict<O extends object, K extends Key> = O[K & keyof O];
  type AtLoose<O extends object, K extends Key> = O extends unknown ? AtStrict<O, K> : never;
  export type At<O extends object, K extends Key, strict extends Boolean = 1> = {
      1: AtStrict<O, K>;
      0: AtLoose<O, K>;
  }[strict];

  export type ComputeRaw<A extends any> = A extends Function ? A : {
    [K in keyof A]: A[K];
  } & {};

  export type OptionalFlat<O> = {
    [K in keyof O]?: O[K];
  } & {};

  type _Record<K extends keyof any, T> = {
    [P in K]: T;
  };

  // cause typescript not to expand types and preserve names
  type NoExpand<T> = T extends unknown ? T : never;

  // this type assumes the passed object is entirely optional
  type AtLeast<O extends object, K extends string> = NoExpand<
    O extends unknown
    ? | (K extends keyof O ? { [P in K]: O[P] } & O : O)
      | {[P in keyof O as P extends K ? K : never]-?: O[P]} & O
    : never>;

  type _Strict<U, _U = U> = U extends unknown ? U & OptionalFlat<_Record<Exclude<Keys<_U>, keyof U>, never>> : never;

  export type Strict<U extends object> = ComputeRaw<_Strict<U>>;
  /** End Helper Types for "Merge" **/

  export type Merge<U extends object> = ComputeRaw<_Merge<Strict<U>>>;

  /**
  A [[Boolean]]
  */
  export type Boolean = True | False

  // /**
  // 1
  // */
  export type True = 1

  /**
  0
  */
  export type False = 0

  export type Not<B extends Boolean> = {
    0: 1
    1: 0
  }[B]

  export type Extends<A1 extends any, A2 extends any> = [A1] extends [never]
    ? 0 // anything `never` is false
    : A1 extends A2
    ? 1
    : 0

  export type Has<U extends Union, U1 extends Union> = Not<
    Extends<Exclude<U1, U>, U1>
  >

  export type Or<B1 extends Boolean, B2 extends Boolean> = {
    0: {
      0: 0
      1: 1
    }
    1: {
      0: 1
      1: 1
    }
  }[B1][B2]

  export type Keys<U extends Union> = U extends unknown ? keyof U : never

  type Cast<A, B> = A extends B ? A : B;

  export const type: unique symbol;



  /**
   * Used by group by
   */

  export type GetScalarType<T, O> = O extends object ? {
    [P in keyof T]: P extends keyof O
      ? O[P]
      : never
  } : never

  type FieldPaths<
    T,
    U = Omit<T, '_avg' | '_sum' | '_count' | '_min' | '_max'>
  > = IsObject<T> extends True ? U : T

  type GetHavingFields<T> = {
    [K in keyof T]: Or<
      Or<Extends<'OR', K>, Extends<'AND', K>>,
      Extends<'NOT', K>
    > extends True
      ? // infer is only needed to not hit TS limit
        // based on the brilliant idea of Pierre-Antoine Mills
        // https://github.com/microsoft/TypeScript/issues/30188#issuecomment-478938437
        T[K] extends infer TK
        ? GetHavingFields<UnEnumerate<TK> extends object ? Merge<UnEnumerate<TK>> : never>
        : never
      : {} extends FieldPaths<T[K]>
      ? never
      : K
  }[keyof T]

  /**
   * Convert tuple to union
   */
  type _TupleToUnion<T> = T extends (infer E)[] ? E : never
  type TupleToUnion<K extends readonly any[]> = _TupleToUnion<K>
  type MaybeTupleToUnion<T> = T extends any[] ? TupleToUnion<T> : T

  /**
   * Like `Pick`, but additionally can also accept an array of keys
   */
  type PickEnumerable<T, K extends Enumerable<keyof T> | keyof T> = Prisma__Pick<T, MaybeTupleToUnion<K>>

  /**
   * Exclude all keys with underscores
   */
  type ExcludeUnderscoreKeys<T extends string> = T extends `_${string}` ? never : T


  export type FieldRef<Model, FieldType> = runtime.FieldRef<Model, FieldType>

  type FieldRefInputType<Model, FieldType> = Model extends never ? never : FieldRef<Model, FieldType>


  export const ModelName: {
    alert_event: 'alert_event',
    daily_route: 'daily_route',
    device: 'device',
    device_status_event: 'device_status_event',
    device_truck_assignment: 'device_truck_assignment',
    fleet_group: 'fleet_group',
    fuel_level_event: 'fuel_level_event',
    geofence: 'geofence',
    gps_position: 'gps_position',
    hub_temperature_event: 'hub_temperature_event',
    lock_event: 'lock_event',
    sensor: 'sensor',
    sensor_data_raw: 'sensor_data_raw',
    sensor_processing_queue: 'sensor_processing_queue',
    spatial_ref_sys: 'spatial_ref_sys',
    speed_event: 'speed_event',
    tire_error_code: 'tire_error_code',
    tire_position_config: 'tire_position_config',
    tire_pressure_event: 'tire_pressure_event',
    trip: 'trip',
    truck: 'truck',
    truck_status_event: 'truck_status_event',
    users: 'users'
  };

  export type ModelName = (typeof ModelName)[keyof typeof ModelName]


  export type Datasources = {
    db?: Datasource
  }

  interface TypeMapCb extends $Utils.Fn<{extArgs: $Extensions.InternalArgs, clientOptions: PrismaClientOptions }, $Utils.Record<string, any>> {
    returns: Prisma.TypeMap<this['params']['extArgs'], this['params']['clientOptions']>
  }

  export type TypeMap<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, ClientOptions = {}> = {
    meta: {
      modelProps: "alert_event" | "daily_route" | "device" | "device_status_event" | "device_truck_assignment" | "fleet_group" | "fuel_level_event" | "geofence" | "gps_position" | "hub_temperature_event" | "lock_event" | "sensor" | "sensor_data_raw" | "sensor_processing_queue" | "spatial_ref_sys" | "speed_event" | "tire_error_code" | "tire_position_config" | "tire_pressure_event" | "trip" | "truck" | "truck_status_event" | "users"
      txIsolationLevel: Prisma.TransactionIsolationLevel
    }
    model: {
      alert_event: {
        payload: Prisma.$alert_eventPayload<ExtArgs>
        fields: Prisma.alert_eventFieldRefs
        operations: {
          findUnique: {
            args: Prisma.alert_eventFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$alert_eventPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.alert_eventFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$alert_eventPayload>
          }
          findFirst: {
            args: Prisma.alert_eventFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$alert_eventPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.alert_eventFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$alert_eventPayload>
          }
          findMany: {
            args: Prisma.alert_eventFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$alert_eventPayload>[]
          }
          create: {
            args: Prisma.alert_eventCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$alert_eventPayload>
          }
          createMany: {
            args: Prisma.alert_eventCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          createManyAndReturn: {
            args: Prisma.alert_eventCreateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$alert_eventPayload>[]
          }
          delete: {
            args: Prisma.alert_eventDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$alert_eventPayload>
          }
          update: {
            args: Prisma.alert_eventUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$alert_eventPayload>
          }
          deleteMany: {
            args: Prisma.alert_eventDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.alert_eventUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          upsert: {
            args: Prisma.alert_eventUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$alert_eventPayload>
          }
          aggregate: {
            args: Prisma.Alert_eventAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateAlert_event>
          }
          groupBy: {
            args: Prisma.alert_eventGroupByArgs<ExtArgs>
            result: $Utils.Optional<Alert_eventGroupByOutputType>[]
          }
          count: {
            args: Prisma.alert_eventCountArgs<ExtArgs>
            result: $Utils.Optional<Alert_eventCountAggregateOutputType> | number
          }
        }
      }
      daily_route: {
        payload: Prisma.$daily_routePayload<ExtArgs>
        fields: Prisma.daily_routeFieldRefs
        operations: {
          findUnique: {
            args: Prisma.daily_routeFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$daily_routePayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.daily_routeFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$daily_routePayload>
          }
          findFirst: {
            args: Prisma.daily_routeFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$daily_routePayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.daily_routeFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$daily_routePayload>
          }
          findMany: {
            args: Prisma.daily_routeFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$daily_routePayload>[]
          }
          delete: {
            args: Prisma.daily_routeDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$daily_routePayload>
          }
          update: {
            args: Prisma.daily_routeUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$daily_routePayload>
          }
          deleteMany: {
            args: Prisma.daily_routeDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.daily_routeUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          aggregate: {
            args: Prisma.Daily_routeAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateDaily_route>
          }
          groupBy: {
            args: Prisma.daily_routeGroupByArgs<ExtArgs>
            result: $Utils.Optional<Daily_routeGroupByOutputType>[]
          }
          count: {
            args: Prisma.daily_routeCountArgs<ExtArgs>
            result: $Utils.Optional<Daily_routeCountAggregateOutputType> | number
          }
        }
      }
      device: {
        payload: Prisma.$devicePayload<ExtArgs>
        fields: Prisma.deviceFieldRefs
        operations: {
          findUnique: {
            args: Prisma.deviceFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$devicePayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.deviceFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$devicePayload>
          }
          findFirst: {
            args: Prisma.deviceFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$devicePayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.deviceFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$devicePayload>
          }
          findMany: {
            args: Prisma.deviceFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$devicePayload>[]
          }
          create: {
            args: Prisma.deviceCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$devicePayload>
          }
          createMany: {
            args: Prisma.deviceCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          createManyAndReturn: {
            args: Prisma.deviceCreateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$devicePayload>[]
          }
          delete: {
            args: Prisma.deviceDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$devicePayload>
          }
          update: {
            args: Prisma.deviceUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$devicePayload>
          }
          deleteMany: {
            args: Prisma.deviceDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.deviceUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          upsert: {
            args: Prisma.deviceUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$devicePayload>
          }
          aggregate: {
            args: Prisma.DeviceAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateDevice>
          }
          groupBy: {
            args: Prisma.deviceGroupByArgs<ExtArgs>
            result: $Utils.Optional<DeviceGroupByOutputType>[]
          }
          count: {
            args: Prisma.deviceCountArgs<ExtArgs>
            result: $Utils.Optional<DeviceCountAggregateOutputType> | number
          }
        }
      }
      device_status_event: {
        payload: Prisma.$device_status_eventPayload<ExtArgs>
        fields: Prisma.device_status_eventFieldRefs
        operations: {
          findUnique: {
            args: Prisma.device_status_eventFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$device_status_eventPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.device_status_eventFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$device_status_eventPayload>
          }
          findFirst: {
            args: Prisma.device_status_eventFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$device_status_eventPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.device_status_eventFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$device_status_eventPayload>
          }
          findMany: {
            args: Prisma.device_status_eventFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$device_status_eventPayload>[]
          }
          create: {
            args: Prisma.device_status_eventCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$device_status_eventPayload>
          }
          createMany: {
            args: Prisma.device_status_eventCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          createManyAndReturn: {
            args: Prisma.device_status_eventCreateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$device_status_eventPayload>[]
          }
          delete: {
            args: Prisma.device_status_eventDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$device_status_eventPayload>
          }
          update: {
            args: Prisma.device_status_eventUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$device_status_eventPayload>
          }
          deleteMany: {
            args: Prisma.device_status_eventDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.device_status_eventUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          upsert: {
            args: Prisma.device_status_eventUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$device_status_eventPayload>
          }
          aggregate: {
            args: Prisma.Device_status_eventAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateDevice_status_event>
          }
          groupBy: {
            args: Prisma.device_status_eventGroupByArgs<ExtArgs>
            result: $Utils.Optional<Device_status_eventGroupByOutputType>[]
          }
          count: {
            args: Prisma.device_status_eventCountArgs<ExtArgs>
            result: $Utils.Optional<Device_status_eventCountAggregateOutputType> | number
          }
        }
      }
      device_truck_assignment: {
        payload: Prisma.$device_truck_assignmentPayload<ExtArgs>
        fields: Prisma.device_truck_assignmentFieldRefs
        operations: {
          findUnique: {
            args: Prisma.device_truck_assignmentFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$device_truck_assignmentPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.device_truck_assignmentFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$device_truck_assignmentPayload>
          }
          findFirst: {
            args: Prisma.device_truck_assignmentFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$device_truck_assignmentPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.device_truck_assignmentFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$device_truck_assignmentPayload>
          }
          findMany: {
            args: Prisma.device_truck_assignmentFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$device_truck_assignmentPayload>[]
          }
          create: {
            args: Prisma.device_truck_assignmentCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$device_truck_assignmentPayload>
          }
          createMany: {
            args: Prisma.device_truck_assignmentCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          createManyAndReturn: {
            args: Prisma.device_truck_assignmentCreateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$device_truck_assignmentPayload>[]
          }
          delete: {
            args: Prisma.device_truck_assignmentDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$device_truck_assignmentPayload>
          }
          update: {
            args: Prisma.device_truck_assignmentUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$device_truck_assignmentPayload>
          }
          deleteMany: {
            args: Prisma.device_truck_assignmentDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.device_truck_assignmentUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          upsert: {
            args: Prisma.device_truck_assignmentUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$device_truck_assignmentPayload>
          }
          aggregate: {
            args: Prisma.Device_truck_assignmentAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateDevice_truck_assignment>
          }
          groupBy: {
            args: Prisma.device_truck_assignmentGroupByArgs<ExtArgs>
            result: $Utils.Optional<Device_truck_assignmentGroupByOutputType>[]
          }
          count: {
            args: Prisma.device_truck_assignmentCountArgs<ExtArgs>
            result: $Utils.Optional<Device_truck_assignmentCountAggregateOutputType> | number
          }
        }
      }
      fleet_group: {
        payload: Prisma.$fleet_groupPayload<ExtArgs>
        fields: Prisma.fleet_groupFieldRefs
        operations: {
          findUnique: {
            args: Prisma.fleet_groupFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$fleet_groupPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.fleet_groupFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$fleet_groupPayload>
          }
          findFirst: {
            args: Prisma.fleet_groupFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$fleet_groupPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.fleet_groupFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$fleet_groupPayload>
          }
          findMany: {
            args: Prisma.fleet_groupFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$fleet_groupPayload>[]
          }
          create: {
            args: Prisma.fleet_groupCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$fleet_groupPayload>
          }
          createMany: {
            args: Prisma.fleet_groupCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          createManyAndReturn: {
            args: Prisma.fleet_groupCreateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$fleet_groupPayload>[]
          }
          delete: {
            args: Prisma.fleet_groupDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$fleet_groupPayload>
          }
          update: {
            args: Prisma.fleet_groupUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$fleet_groupPayload>
          }
          deleteMany: {
            args: Prisma.fleet_groupDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.fleet_groupUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          upsert: {
            args: Prisma.fleet_groupUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$fleet_groupPayload>
          }
          aggregate: {
            args: Prisma.Fleet_groupAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateFleet_group>
          }
          groupBy: {
            args: Prisma.fleet_groupGroupByArgs<ExtArgs>
            result: $Utils.Optional<Fleet_groupGroupByOutputType>[]
          }
          count: {
            args: Prisma.fleet_groupCountArgs<ExtArgs>
            result: $Utils.Optional<Fleet_groupCountAggregateOutputType> | number
          }
        }
      }
      fuel_level_event: {
        payload: Prisma.$fuel_level_eventPayload<ExtArgs>
        fields: Prisma.fuel_level_eventFieldRefs
        operations: {
          findUnique: {
            args: Prisma.fuel_level_eventFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$fuel_level_eventPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.fuel_level_eventFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$fuel_level_eventPayload>
          }
          findFirst: {
            args: Prisma.fuel_level_eventFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$fuel_level_eventPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.fuel_level_eventFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$fuel_level_eventPayload>
          }
          findMany: {
            args: Prisma.fuel_level_eventFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$fuel_level_eventPayload>[]
          }
          create: {
            args: Prisma.fuel_level_eventCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$fuel_level_eventPayload>
          }
          createMany: {
            args: Prisma.fuel_level_eventCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          createManyAndReturn: {
            args: Prisma.fuel_level_eventCreateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$fuel_level_eventPayload>[]
          }
          delete: {
            args: Prisma.fuel_level_eventDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$fuel_level_eventPayload>
          }
          update: {
            args: Prisma.fuel_level_eventUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$fuel_level_eventPayload>
          }
          deleteMany: {
            args: Prisma.fuel_level_eventDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.fuel_level_eventUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          upsert: {
            args: Prisma.fuel_level_eventUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$fuel_level_eventPayload>
          }
          aggregate: {
            args: Prisma.Fuel_level_eventAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateFuel_level_event>
          }
          groupBy: {
            args: Prisma.fuel_level_eventGroupByArgs<ExtArgs>
            result: $Utils.Optional<Fuel_level_eventGroupByOutputType>[]
          }
          count: {
            args: Prisma.fuel_level_eventCountArgs<ExtArgs>
            result: $Utils.Optional<Fuel_level_eventCountAggregateOutputType> | number
          }
        }
      }
      geofence: {
        payload: Prisma.$geofencePayload<ExtArgs>
        fields: Prisma.geofenceFieldRefs
        operations: {
          findUnique: {
            args: Prisma.geofenceFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$geofencePayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.geofenceFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$geofencePayload>
          }
          findFirst: {
            args: Prisma.geofenceFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$geofencePayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.geofenceFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$geofencePayload>
          }
          findMany: {
            args: Prisma.geofenceFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$geofencePayload>[]
          }
          delete: {
            args: Prisma.geofenceDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$geofencePayload>
          }
          update: {
            args: Prisma.geofenceUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$geofencePayload>
          }
          deleteMany: {
            args: Prisma.geofenceDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.geofenceUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          aggregate: {
            args: Prisma.GeofenceAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateGeofence>
          }
          groupBy: {
            args: Prisma.geofenceGroupByArgs<ExtArgs>
            result: $Utils.Optional<GeofenceGroupByOutputType>[]
          }
          count: {
            args: Prisma.geofenceCountArgs<ExtArgs>
            result: $Utils.Optional<GeofenceCountAggregateOutputType> | number
          }
        }
      }
      gps_position: {
        payload: Prisma.$gps_positionPayload<ExtArgs>
        fields: Prisma.gps_positionFieldRefs
        operations: {
          findUnique: {
            args: Prisma.gps_positionFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$gps_positionPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.gps_positionFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$gps_positionPayload>
          }
          findFirst: {
            args: Prisma.gps_positionFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$gps_positionPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.gps_positionFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$gps_positionPayload>
          }
          findMany: {
            args: Prisma.gps_positionFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$gps_positionPayload>[]
          }
          delete: {
            args: Prisma.gps_positionDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$gps_positionPayload>
          }
          update: {
            args: Prisma.gps_positionUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$gps_positionPayload>
          }
          deleteMany: {
            args: Prisma.gps_positionDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.gps_positionUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          aggregate: {
            args: Prisma.Gps_positionAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateGps_position>
          }
          groupBy: {
            args: Prisma.gps_positionGroupByArgs<ExtArgs>
            result: $Utils.Optional<Gps_positionGroupByOutputType>[]
          }
          count: {
            args: Prisma.gps_positionCountArgs<ExtArgs>
            result: $Utils.Optional<Gps_positionCountAggregateOutputType> | number
          }
        }
      }
      hub_temperature_event: {
        payload: Prisma.$hub_temperature_eventPayload<ExtArgs>
        fields: Prisma.hub_temperature_eventFieldRefs
        operations: {
          findUnique: {
            args: Prisma.hub_temperature_eventFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$hub_temperature_eventPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.hub_temperature_eventFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$hub_temperature_eventPayload>
          }
          findFirst: {
            args: Prisma.hub_temperature_eventFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$hub_temperature_eventPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.hub_temperature_eventFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$hub_temperature_eventPayload>
          }
          findMany: {
            args: Prisma.hub_temperature_eventFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$hub_temperature_eventPayload>[]
          }
          create: {
            args: Prisma.hub_temperature_eventCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$hub_temperature_eventPayload>
          }
          createMany: {
            args: Prisma.hub_temperature_eventCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          createManyAndReturn: {
            args: Prisma.hub_temperature_eventCreateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$hub_temperature_eventPayload>[]
          }
          delete: {
            args: Prisma.hub_temperature_eventDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$hub_temperature_eventPayload>
          }
          update: {
            args: Prisma.hub_temperature_eventUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$hub_temperature_eventPayload>
          }
          deleteMany: {
            args: Prisma.hub_temperature_eventDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.hub_temperature_eventUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          upsert: {
            args: Prisma.hub_temperature_eventUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$hub_temperature_eventPayload>
          }
          aggregate: {
            args: Prisma.Hub_temperature_eventAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateHub_temperature_event>
          }
          groupBy: {
            args: Prisma.hub_temperature_eventGroupByArgs<ExtArgs>
            result: $Utils.Optional<Hub_temperature_eventGroupByOutputType>[]
          }
          count: {
            args: Prisma.hub_temperature_eventCountArgs<ExtArgs>
            result: $Utils.Optional<Hub_temperature_eventCountAggregateOutputType> | number
          }
        }
      }
      lock_event: {
        payload: Prisma.$lock_eventPayload<ExtArgs>
        fields: Prisma.lock_eventFieldRefs
        operations: {
          findUnique: {
            args: Prisma.lock_eventFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$lock_eventPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.lock_eventFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$lock_eventPayload>
          }
          findFirst: {
            args: Prisma.lock_eventFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$lock_eventPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.lock_eventFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$lock_eventPayload>
          }
          findMany: {
            args: Prisma.lock_eventFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$lock_eventPayload>[]
          }
          create: {
            args: Prisma.lock_eventCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$lock_eventPayload>
          }
          createMany: {
            args: Prisma.lock_eventCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          createManyAndReturn: {
            args: Prisma.lock_eventCreateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$lock_eventPayload>[]
          }
          delete: {
            args: Prisma.lock_eventDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$lock_eventPayload>
          }
          update: {
            args: Prisma.lock_eventUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$lock_eventPayload>
          }
          deleteMany: {
            args: Prisma.lock_eventDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.lock_eventUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          upsert: {
            args: Prisma.lock_eventUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$lock_eventPayload>
          }
          aggregate: {
            args: Prisma.Lock_eventAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateLock_event>
          }
          groupBy: {
            args: Prisma.lock_eventGroupByArgs<ExtArgs>
            result: $Utils.Optional<Lock_eventGroupByOutputType>[]
          }
          count: {
            args: Prisma.lock_eventCountArgs<ExtArgs>
            result: $Utils.Optional<Lock_eventCountAggregateOutputType> | number
          }
        }
      }
      sensor: {
        payload: Prisma.$sensorPayload<ExtArgs>
        fields: Prisma.sensorFieldRefs
        operations: {
          findUnique: {
            args: Prisma.sensorFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$sensorPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.sensorFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$sensorPayload>
          }
          findFirst: {
            args: Prisma.sensorFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$sensorPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.sensorFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$sensorPayload>
          }
          findMany: {
            args: Prisma.sensorFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$sensorPayload>[]
          }
          create: {
            args: Prisma.sensorCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$sensorPayload>
          }
          createMany: {
            args: Prisma.sensorCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          createManyAndReturn: {
            args: Prisma.sensorCreateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$sensorPayload>[]
          }
          delete: {
            args: Prisma.sensorDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$sensorPayload>
          }
          update: {
            args: Prisma.sensorUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$sensorPayload>
          }
          deleteMany: {
            args: Prisma.sensorDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.sensorUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          upsert: {
            args: Prisma.sensorUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$sensorPayload>
          }
          aggregate: {
            args: Prisma.SensorAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateSensor>
          }
          groupBy: {
            args: Prisma.sensorGroupByArgs<ExtArgs>
            result: $Utils.Optional<SensorGroupByOutputType>[]
          }
          count: {
            args: Prisma.sensorCountArgs<ExtArgs>
            result: $Utils.Optional<SensorCountAggregateOutputType> | number
          }
        }
      }
      sensor_data_raw: {
        payload: Prisma.$sensor_data_rawPayload<ExtArgs>
        fields: Prisma.sensor_data_rawFieldRefs
        operations: {
          findUnique: {
            args: Prisma.sensor_data_rawFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$sensor_data_rawPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.sensor_data_rawFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$sensor_data_rawPayload>
          }
          findFirst: {
            args: Prisma.sensor_data_rawFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$sensor_data_rawPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.sensor_data_rawFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$sensor_data_rawPayload>
          }
          findMany: {
            args: Prisma.sensor_data_rawFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$sensor_data_rawPayload>[]
          }
          create: {
            args: Prisma.sensor_data_rawCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$sensor_data_rawPayload>
          }
          createMany: {
            args: Prisma.sensor_data_rawCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          createManyAndReturn: {
            args: Prisma.sensor_data_rawCreateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$sensor_data_rawPayload>[]
          }
          delete: {
            args: Prisma.sensor_data_rawDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$sensor_data_rawPayload>
          }
          update: {
            args: Prisma.sensor_data_rawUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$sensor_data_rawPayload>
          }
          deleteMany: {
            args: Prisma.sensor_data_rawDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.sensor_data_rawUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          upsert: {
            args: Prisma.sensor_data_rawUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$sensor_data_rawPayload>
          }
          aggregate: {
            args: Prisma.Sensor_data_rawAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateSensor_data_raw>
          }
          groupBy: {
            args: Prisma.sensor_data_rawGroupByArgs<ExtArgs>
            result: $Utils.Optional<Sensor_data_rawGroupByOutputType>[]
          }
          count: {
            args: Prisma.sensor_data_rawCountArgs<ExtArgs>
            result: $Utils.Optional<Sensor_data_rawCountAggregateOutputType> | number
          }
        }
      }
      sensor_processing_queue: {
        payload: Prisma.$sensor_processing_queuePayload<ExtArgs>
        fields: Prisma.sensor_processing_queueFieldRefs
        operations: {
          findUnique: {
            args: Prisma.sensor_processing_queueFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$sensor_processing_queuePayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.sensor_processing_queueFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$sensor_processing_queuePayload>
          }
          findFirst: {
            args: Prisma.sensor_processing_queueFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$sensor_processing_queuePayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.sensor_processing_queueFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$sensor_processing_queuePayload>
          }
          findMany: {
            args: Prisma.sensor_processing_queueFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$sensor_processing_queuePayload>[]
          }
          create: {
            args: Prisma.sensor_processing_queueCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$sensor_processing_queuePayload>
          }
          createMany: {
            args: Prisma.sensor_processing_queueCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          createManyAndReturn: {
            args: Prisma.sensor_processing_queueCreateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$sensor_processing_queuePayload>[]
          }
          delete: {
            args: Prisma.sensor_processing_queueDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$sensor_processing_queuePayload>
          }
          update: {
            args: Prisma.sensor_processing_queueUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$sensor_processing_queuePayload>
          }
          deleteMany: {
            args: Prisma.sensor_processing_queueDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.sensor_processing_queueUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          upsert: {
            args: Prisma.sensor_processing_queueUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$sensor_processing_queuePayload>
          }
          aggregate: {
            args: Prisma.Sensor_processing_queueAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateSensor_processing_queue>
          }
          groupBy: {
            args: Prisma.sensor_processing_queueGroupByArgs<ExtArgs>
            result: $Utils.Optional<Sensor_processing_queueGroupByOutputType>[]
          }
          count: {
            args: Prisma.sensor_processing_queueCountArgs<ExtArgs>
            result: $Utils.Optional<Sensor_processing_queueCountAggregateOutputType> | number
          }
        }
      }
      spatial_ref_sys: {
        payload: Prisma.$spatial_ref_sysPayload<ExtArgs>
        fields: Prisma.spatial_ref_sysFieldRefs
        operations: {
          findUnique: {
            args: Prisma.spatial_ref_sysFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$spatial_ref_sysPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.spatial_ref_sysFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$spatial_ref_sysPayload>
          }
          findFirst: {
            args: Prisma.spatial_ref_sysFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$spatial_ref_sysPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.spatial_ref_sysFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$spatial_ref_sysPayload>
          }
          findMany: {
            args: Prisma.spatial_ref_sysFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$spatial_ref_sysPayload>[]
          }
          create: {
            args: Prisma.spatial_ref_sysCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$spatial_ref_sysPayload>
          }
          createMany: {
            args: Prisma.spatial_ref_sysCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          createManyAndReturn: {
            args: Prisma.spatial_ref_sysCreateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$spatial_ref_sysPayload>[]
          }
          delete: {
            args: Prisma.spatial_ref_sysDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$spatial_ref_sysPayload>
          }
          update: {
            args: Prisma.spatial_ref_sysUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$spatial_ref_sysPayload>
          }
          deleteMany: {
            args: Prisma.spatial_ref_sysDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.spatial_ref_sysUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          upsert: {
            args: Prisma.spatial_ref_sysUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$spatial_ref_sysPayload>
          }
          aggregate: {
            args: Prisma.Spatial_ref_sysAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateSpatial_ref_sys>
          }
          groupBy: {
            args: Prisma.spatial_ref_sysGroupByArgs<ExtArgs>
            result: $Utils.Optional<Spatial_ref_sysGroupByOutputType>[]
          }
          count: {
            args: Prisma.spatial_ref_sysCountArgs<ExtArgs>
            result: $Utils.Optional<Spatial_ref_sysCountAggregateOutputType> | number
          }
        }
      }
      speed_event: {
        payload: Prisma.$speed_eventPayload<ExtArgs>
        fields: Prisma.speed_eventFieldRefs
        operations: {
          findUnique: {
            args: Prisma.speed_eventFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$speed_eventPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.speed_eventFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$speed_eventPayload>
          }
          findFirst: {
            args: Prisma.speed_eventFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$speed_eventPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.speed_eventFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$speed_eventPayload>
          }
          findMany: {
            args: Prisma.speed_eventFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$speed_eventPayload>[]
          }
          create: {
            args: Prisma.speed_eventCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$speed_eventPayload>
          }
          createMany: {
            args: Prisma.speed_eventCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          createManyAndReturn: {
            args: Prisma.speed_eventCreateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$speed_eventPayload>[]
          }
          delete: {
            args: Prisma.speed_eventDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$speed_eventPayload>
          }
          update: {
            args: Prisma.speed_eventUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$speed_eventPayload>
          }
          deleteMany: {
            args: Prisma.speed_eventDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.speed_eventUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          upsert: {
            args: Prisma.speed_eventUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$speed_eventPayload>
          }
          aggregate: {
            args: Prisma.Speed_eventAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateSpeed_event>
          }
          groupBy: {
            args: Prisma.speed_eventGroupByArgs<ExtArgs>
            result: $Utils.Optional<Speed_eventGroupByOutputType>[]
          }
          count: {
            args: Prisma.speed_eventCountArgs<ExtArgs>
            result: $Utils.Optional<Speed_eventCountAggregateOutputType> | number
          }
        }
      }
      tire_error_code: {
        payload: Prisma.$tire_error_codePayload<ExtArgs>
        fields: Prisma.tire_error_codeFieldRefs
        operations: {
          findUnique: {
            args: Prisma.tire_error_codeFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$tire_error_codePayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.tire_error_codeFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$tire_error_codePayload>
          }
          findFirst: {
            args: Prisma.tire_error_codeFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$tire_error_codePayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.tire_error_codeFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$tire_error_codePayload>
          }
          findMany: {
            args: Prisma.tire_error_codeFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$tire_error_codePayload>[]
          }
          create: {
            args: Prisma.tire_error_codeCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$tire_error_codePayload>
          }
          createMany: {
            args: Prisma.tire_error_codeCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          createManyAndReturn: {
            args: Prisma.tire_error_codeCreateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$tire_error_codePayload>[]
          }
          delete: {
            args: Prisma.tire_error_codeDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$tire_error_codePayload>
          }
          update: {
            args: Prisma.tire_error_codeUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$tire_error_codePayload>
          }
          deleteMany: {
            args: Prisma.tire_error_codeDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.tire_error_codeUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          upsert: {
            args: Prisma.tire_error_codeUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$tire_error_codePayload>
          }
          aggregate: {
            args: Prisma.Tire_error_codeAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateTire_error_code>
          }
          groupBy: {
            args: Prisma.tire_error_codeGroupByArgs<ExtArgs>
            result: $Utils.Optional<Tire_error_codeGroupByOutputType>[]
          }
          count: {
            args: Prisma.tire_error_codeCountArgs<ExtArgs>
            result: $Utils.Optional<Tire_error_codeCountAggregateOutputType> | number
          }
        }
      }
      tire_position_config: {
        payload: Prisma.$tire_position_configPayload<ExtArgs>
        fields: Prisma.tire_position_configFieldRefs
        operations: {
          findUnique: {
            args: Prisma.tire_position_configFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$tire_position_configPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.tire_position_configFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$tire_position_configPayload>
          }
          findFirst: {
            args: Prisma.tire_position_configFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$tire_position_configPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.tire_position_configFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$tire_position_configPayload>
          }
          findMany: {
            args: Prisma.tire_position_configFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$tire_position_configPayload>[]
          }
          create: {
            args: Prisma.tire_position_configCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$tire_position_configPayload>
          }
          createMany: {
            args: Prisma.tire_position_configCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          createManyAndReturn: {
            args: Prisma.tire_position_configCreateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$tire_position_configPayload>[]
          }
          delete: {
            args: Prisma.tire_position_configDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$tire_position_configPayload>
          }
          update: {
            args: Prisma.tire_position_configUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$tire_position_configPayload>
          }
          deleteMany: {
            args: Prisma.tire_position_configDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.tire_position_configUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          upsert: {
            args: Prisma.tire_position_configUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$tire_position_configPayload>
          }
          aggregate: {
            args: Prisma.Tire_position_configAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateTire_position_config>
          }
          groupBy: {
            args: Prisma.tire_position_configGroupByArgs<ExtArgs>
            result: $Utils.Optional<Tire_position_configGroupByOutputType>[]
          }
          count: {
            args: Prisma.tire_position_configCountArgs<ExtArgs>
            result: $Utils.Optional<Tire_position_configCountAggregateOutputType> | number
          }
        }
      }
      tire_pressure_event: {
        payload: Prisma.$tire_pressure_eventPayload<ExtArgs>
        fields: Prisma.tire_pressure_eventFieldRefs
        operations: {
          findUnique: {
            args: Prisma.tire_pressure_eventFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$tire_pressure_eventPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.tire_pressure_eventFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$tire_pressure_eventPayload>
          }
          findFirst: {
            args: Prisma.tire_pressure_eventFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$tire_pressure_eventPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.tire_pressure_eventFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$tire_pressure_eventPayload>
          }
          findMany: {
            args: Prisma.tire_pressure_eventFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$tire_pressure_eventPayload>[]
          }
          create: {
            args: Prisma.tire_pressure_eventCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$tire_pressure_eventPayload>
          }
          createMany: {
            args: Prisma.tire_pressure_eventCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          createManyAndReturn: {
            args: Prisma.tire_pressure_eventCreateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$tire_pressure_eventPayload>[]
          }
          delete: {
            args: Prisma.tire_pressure_eventDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$tire_pressure_eventPayload>
          }
          update: {
            args: Prisma.tire_pressure_eventUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$tire_pressure_eventPayload>
          }
          deleteMany: {
            args: Prisma.tire_pressure_eventDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.tire_pressure_eventUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          upsert: {
            args: Prisma.tire_pressure_eventUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$tire_pressure_eventPayload>
          }
          aggregate: {
            args: Prisma.Tire_pressure_eventAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateTire_pressure_event>
          }
          groupBy: {
            args: Prisma.tire_pressure_eventGroupByArgs<ExtArgs>
            result: $Utils.Optional<Tire_pressure_eventGroupByOutputType>[]
          }
          count: {
            args: Prisma.tire_pressure_eventCountArgs<ExtArgs>
            result: $Utils.Optional<Tire_pressure_eventCountAggregateOutputType> | number
          }
        }
      }
      trip: {
        payload: Prisma.$tripPayload<ExtArgs>
        fields: Prisma.tripFieldRefs
        operations: {
          findUnique: {
            args: Prisma.tripFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$tripPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.tripFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$tripPayload>
          }
          findFirst: {
            args: Prisma.tripFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$tripPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.tripFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$tripPayload>
          }
          findMany: {
            args: Prisma.tripFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$tripPayload>[]
          }
          create: {
            args: Prisma.tripCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$tripPayload>
          }
          createMany: {
            args: Prisma.tripCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          createManyAndReturn: {
            args: Prisma.tripCreateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$tripPayload>[]
          }
          delete: {
            args: Prisma.tripDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$tripPayload>
          }
          update: {
            args: Prisma.tripUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$tripPayload>
          }
          deleteMany: {
            args: Prisma.tripDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.tripUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          upsert: {
            args: Prisma.tripUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$tripPayload>
          }
          aggregate: {
            args: Prisma.TripAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateTrip>
          }
          groupBy: {
            args: Prisma.tripGroupByArgs<ExtArgs>
            result: $Utils.Optional<TripGroupByOutputType>[]
          }
          count: {
            args: Prisma.tripCountArgs<ExtArgs>
            result: $Utils.Optional<TripCountAggregateOutputType> | number
          }
        }
      }
      truck: {
        payload: Prisma.$truckPayload<ExtArgs>
        fields: Prisma.truckFieldRefs
        operations: {
          findUnique: {
            args: Prisma.truckFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$truckPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.truckFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$truckPayload>
          }
          findFirst: {
            args: Prisma.truckFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$truckPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.truckFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$truckPayload>
          }
          findMany: {
            args: Prisma.truckFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$truckPayload>[]
          }
          create: {
            args: Prisma.truckCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$truckPayload>
          }
          createMany: {
            args: Prisma.truckCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          createManyAndReturn: {
            args: Prisma.truckCreateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$truckPayload>[]
          }
          delete: {
            args: Prisma.truckDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$truckPayload>
          }
          update: {
            args: Prisma.truckUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$truckPayload>
          }
          deleteMany: {
            args: Prisma.truckDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.truckUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          upsert: {
            args: Prisma.truckUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$truckPayload>
          }
          aggregate: {
            args: Prisma.TruckAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateTruck>
          }
          groupBy: {
            args: Prisma.truckGroupByArgs<ExtArgs>
            result: $Utils.Optional<TruckGroupByOutputType>[]
          }
          count: {
            args: Prisma.truckCountArgs<ExtArgs>
            result: $Utils.Optional<TruckCountAggregateOutputType> | number
          }
        }
      }
      truck_status_event: {
        payload: Prisma.$truck_status_eventPayload<ExtArgs>
        fields: Prisma.truck_status_eventFieldRefs
        operations: {
          findUnique: {
            args: Prisma.truck_status_eventFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$truck_status_eventPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.truck_status_eventFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$truck_status_eventPayload>
          }
          findFirst: {
            args: Prisma.truck_status_eventFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$truck_status_eventPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.truck_status_eventFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$truck_status_eventPayload>
          }
          findMany: {
            args: Prisma.truck_status_eventFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$truck_status_eventPayload>[]
          }
          create: {
            args: Prisma.truck_status_eventCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$truck_status_eventPayload>
          }
          createMany: {
            args: Prisma.truck_status_eventCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          createManyAndReturn: {
            args: Prisma.truck_status_eventCreateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$truck_status_eventPayload>[]
          }
          delete: {
            args: Prisma.truck_status_eventDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$truck_status_eventPayload>
          }
          update: {
            args: Prisma.truck_status_eventUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$truck_status_eventPayload>
          }
          deleteMany: {
            args: Prisma.truck_status_eventDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.truck_status_eventUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          upsert: {
            args: Prisma.truck_status_eventUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$truck_status_eventPayload>
          }
          aggregate: {
            args: Prisma.Truck_status_eventAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateTruck_status_event>
          }
          groupBy: {
            args: Prisma.truck_status_eventGroupByArgs<ExtArgs>
            result: $Utils.Optional<Truck_status_eventGroupByOutputType>[]
          }
          count: {
            args: Prisma.truck_status_eventCountArgs<ExtArgs>
            result: $Utils.Optional<Truck_status_eventCountAggregateOutputType> | number
          }
        }
      }
      users: {
        payload: Prisma.$usersPayload<ExtArgs>
        fields: Prisma.usersFieldRefs
        operations: {
          findUnique: {
            args: Prisma.usersFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$usersPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.usersFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$usersPayload>
          }
          findFirst: {
            args: Prisma.usersFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$usersPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.usersFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$usersPayload>
          }
          findMany: {
            args: Prisma.usersFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$usersPayload>[]
          }
          create: {
            args: Prisma.usersCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$usersPayload>
          }
          createMany: {
            args: Prisma.usersCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          createManyAndReturn: {
            args: Prisma.usersCreateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$usersPayload>[]
          }
          delete: {
            args: Prisma.usersDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$usersPayload>
          }
          update: {
            args: Prisma.usersUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$usersPayload>
          }
          deleteMany: {
            args: Prisma.usersDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.usersUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          upsert: {
            args: Prisma.usersUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$usersPayload>
          }
          aggregate: {
            args: Prisma.UsersAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateUsers>
          }
          groupBy: {
            args: Prisma.usersGroupByArgs<ExtArgs>
            result: $Utils.Optional<UsersGroupByOutputType>[]
          }
          count: {
            args: Prisma.usersCountArgs<ExtArgs>
            result: $Utils.Optional<UsersCountAggregateOutputType> | number
          }
        }
      }
    }
  } & {
    other: {
      payload: any
      operations: {
        $executeRaw: {
          args: [query: TemplateStringsArray | Prisma.Sql, ...values: any[]],
          result: any
        }
        $executeRawUnsafe: {
          args: [query: string, ...values: any[]],
          result: any
        }
        $queryRaw: {
          args: [query: TemplateStringsArray | Prisma.Sql, ...values: any[]],
          result: any
        }
        $queryRawUnsafe: {
          args: [query: string, ...values: any[]],
          result: any
        }
      }
    }
  }
  export const defineExtension: $Extensions.ExtendsHook<"define", Prisma.TypeMapCb, $Extensions.DefaultArgs>
  export type DefaultPrismaClient = PrismaClient
  export type ErrorFormat = 'pretty' | 'colorless' | 'minimal'
  export interface PrismaClientOptions {
    /**
     * Overwrites the datasource url from your schema.prisma file
     */
    datasources?: Datasources
    /**
     * Overwrites the datasource url from your schema.prisma file
     */
    datasourceUrl?: string
    /**
     * @default "colorless"
     */
    errorFormat?: ErrorFormat
    /**
     * @example
     * ```
     * // Defaults to stdout
     * log: ['query', 'info', 'warn', 'error']
     * 
     * // Emit as events
     * log: [
     *   { emit: 'stdout', level: 'query' },
     *   { emit: 'stdout', level: 'info' },
     *   { emit: 'stdout', level: 'warn' }
     *   { emit: 'stdout', level: 'error' }
     * ]
     * ```
     * Read more in our [docs](https://www.prisma.io/docs/reference/tools-and-interfaces/prisma-client/logging#the-log-option).
     */
    log?: (LogLevel | LogDefinition)[]
    /**
     * The default values for transactionOptions
     * maxWait ?= 2000
     * timeout ?= 5000
     */
    transactionOptions?: {
      maxWait?: number
      timeout?: number
      isolationLevel?: Prisma.TransactionIsolationLevel
    }
  }


  /* Types for Logging */
  export type LogLevel = 'info' | 'query' | 'warn' | 'error'
  export type LogDefinition = {
    level: LogLevel
    emit: 'stdout' | 'event'
  }

  export type GetLogType<T extends LogLevel | LogDefinition> = T extends LogDefinition ? T['emit'] extends 'event' ? T['level'] : never : never
  export type GetEvents<T extends any> = T extends Array<LogLevel | LogDefinition> ?
    GetLogType<T[0]> | GetLogType<T[1]> | GetLogType<T[2]> | GetLogType<T[3]>
    : never

  export type QueryEvent = {
    timestamp: Date
    query: string
    params: string
    duration: number
    target: string
  }

  export type LogEvent = {
    timestamp: Date
    message: string
    target: string
  }
  /* End Types for Logging */


  export type PrismaAction =
    | 'findUnique'
    | 'findUniqueOrThrow'
    | 'findMany'
    | 'findFirst'
    | 'findFirstOrThrow'
    | 'create'
    | 'createMany'
    | 'createManyAndReturn'
    | 'update'
    | 'updateMany'
    | 'upsert'
    | 'delete'
    | 'deleteMany'
    | 'executeRaw'
    | 'queryRaw'
    | 'aggregate'
    | 'count'
    | 'runCommandRaw'
    | 'findRaw'
    | 'groupBy'

  /**
   * These options are being passed into the middleware as "params"
   */
  export type MiddlewareParams = {
    model?: ModelName
    action: PrismaAction
    args: any
    dataPath: string[]
    runInTransaction: boolean
  }

  /**
   * The `T` type makes sure, that the `return proceed` is not forgotten in the middleware implementation
   */
  export type Middleware<T = any> = (
    params: MiddlewareParams,
    next: (params: MiddlewareParams) => $Utils.JsPromise<T>,
  ) => $Utils.JsPromise<T>

  // tested in getLogLevel.test.ts
  export function getLogLevel(log: Array<LogLevel | LogDefinition>): LogLevel | undefined;

  /**
   * `PrismaClient` proxy available in interactive transactions.
   */
  export type TransactionClient = Omit<Prisma.DefaultPrismaClient, runtime.ITXClientDenyList>

  export type Datasource = {
    url?: string
  }

  /**
   * Count Types
   */


  /**
   * Count Type DeviceCountOutputType
   */

  export type DeviceCountOutputType = {
    device_status_event: number
    device_truck_assignment: number
    gps_position: number
    hub_temperature_event: number
    lock_event: number
    sensor: number
    tire_pressure_event: number
  }

  export type DeviceCountOutputTypeSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    device_status_event?: boolean | DeviceCountOutputTypeCountDevice_status_eventArgs
    device_truck_assignment?: boolean | DeviceCountOutputTypeCountDevice_truck_assignmentArgs
    gps_position?: boolean | DeviceCountOutputTypeCountGps_positionArgs
    hub_temperature_event?: boolean | DeviceCountOutputTypeCountHub_temperature_eventArgs
    lock_event?: boolean | DeviceCountOutputTypeCountLock_eventArgs
    sensor?: boolean | DeviceCountOutputTypeCountSensorArgs
    tire_pressure_event?: boolean | DeviceCountOutputTypeCountTire_pressure_eventArgs
  }

  // Custom InputTypes
  /**
   * DeviceCountOutputType without action
   */
  export type DeviceCountOutputTypeDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the DeviceCountOutputType
     */
    select?: DeviceCountOutputTypeSelect<ExtArgs> | null
  }

  /**
   * DeviceCountOutputType without action
   */
  export type DeviceCountOutputTypeCountDevice_status_eventArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: device_status_eventWhereInput
  }

  /**
   * DeviceCountOutputType without action
   */
  export type DeviceCountOutputTypeCountDevice_truck_assignmentArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: device_truck_assignmentWhereInput
  }

  /**
   * DeviceCountOutputType without action
   */
  export type DeviceCountOutputTypeCountGps_positionArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: gps_positionWhereInput
  }

  /**
   * DeviceCountOutputType without action
   */
  export type DeviceCountOutputTypeCountHub_temperature_eventArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: hub_temperature_eventWhereInput
  }

  /**
   * DeviceCountOutputType without action
   */
  export type DeviceCountOutputTypeCountLock_eventArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: lock_eventWhereInput
  }

  /**
   * DeviceCountOutputType without action
   */
  export type DeviceCountOutputTypeCountSensorArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: sensorWhereInput
  }

  /**
   * DeviceCountOutputType without action
   */
  export type DeviceCountOutputTypeCountTire_pressure_eventArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: tire_pressure_eventWhereInput
  }


  /**
   * Count Type Fleet_groupCountOutputType
   */

  export type Fleet_groupCountOutputType = {
    truck: number
  }

  export type Fleet_groupCountOutputTypeSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    truck?: boolean | Fleet_groupCountOutputTypeCountTruckArgs
  }

  // Custom InputTypes
  /**
   * Fleet_groupCountOutputType without action
   */
  export type Fleet_groupCountOutputTypeDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Fleet_groupCountOutputType
     */
    select?: Fleet_groupCountOutputTypeSelect<ExtArgs> | null
  }

  /**
   * Fleet_groupCountOutputType without action
   */
  export type Fleet_groupCountOutputTypeCountTruckArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: truckWhereInput
  }


  /**
   * Count Type Sensor_data_rawCountOutputType
   */

  export type Sensor_data_rawCountOutputType = {
    sensor_processing_queue: number
  }

  export type Sensor_data_rawCountOutputTypeSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    sensor_processing_queue?: boolean | Sensor_data_rawCountOutputTypeCountSensor_processing_queueArgs
  }

  // Custom InputTypes
  /**
   * Sensor_data_rawCountOutputType without action
   */
  export type Sensor_data_rawCountOutputTypeDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Sensor_data_rawCountOutputType
     */
    select?: Sensor_data_rawCountOutputTypeSelect<ExtArgs> | null
  }

  /**
   * Sensor_data_rawCountOutputType without action
   */
  export type Sensor_data_rawCountOutputTypeCountSensor_processing_queueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: sensor_processing_queueWhereInput
  }


  /**
   * Count Type TruckCountOutputType
   */

  export type TruckCountOutputType = {
    alert_event: number
    daily_route: number
    device: number
    device_status_event: number
    device_truck_assignment: number
    fuel_level_event: number
    gps_position: number
    hub_temperature_event: number
    lock_event: number
    sensor_data_raw: number
    speed_event: number
    tire_position_config: number
    tire_pressure_event: number
    trip: number
    truck_status_event: number
  }

  export type TruckCountOutputTypeSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    alert_event?: boolean | TruckCountOutputTypeCountAlert_eventArgs
    daily_route?: boolean | TruckCountOutputTypeCountDaily_routeArgs
    device?: boolean | TruckCountOutputTypeCountDeviceArgs
    device_status_event?: boolean | TruckCountOutputTypeCountDevice_status_eventArgs
    device_truck_assignment?: boolean | TruckCountOutputTypeCountDevice_truck_assignmentArgs
    fuel_level_event?: boolean | TruckCountOutputTypeCountFuel_level_eventArgs
    gps_position?: boolean | TruckCountOutputTypeCountGps_positionArgs
    hub_temperature_event?: boolean | TruckCountOutputTypeCountHub_temperature_eventArgs
    lock_event?: boolean | TruckCountOutputTypeCountLock_eventArgs
    sensor_data_raw?: boolean | TruckCountOutputTypeCountSensor_data_rawArgs
    speed_event?: boolean | TruckCountOutputTypeCountSpeed_eventArgs
    tire_position_config?: boolean | TruckCountOutputTypeCountTire_position_configArgs
    tire_pressure_event?: boolean | TruckCountOutputTypeCountTire_pressure_eventArgs
    trip?: boolean | TruckCountOutputTypeCountTripArgs
    truck_status_event?: boolean | TruckCountOutputTypeCountTruck_status_eventArgs
  }

  // Custom InputTypes
  /**
   * TruckCountOutputType without action
   */
  export type TruckCountOutputTypeDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the TruckCountOutputType
     */
    select?: TruckCountOutputTypeSelect<ExtArgs> | null
  }

  /**
   * TruckCountOutputType without action
   */
  export type TruckCountOutputTypeCountAlert_eventArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: alert_eventWhereInput
  }

  /**
   * TruckCountOutputType without action
   */
  export type TruckCountOutputTypeCountDaily_routeArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: daily_routeWhereInput
  }

  /**
   * TruckCountOutputType without action
   */
  export type TruckCountOutputTypeCountDeviceArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: deviceWhereInput
  }

  /**
   * TruckCountOutputType without action
   */
  export type TruckCountOutputTypeCountDevice_status_eventArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: device_status_eventWhereInput
  }

  /**
   * TruckCountOutputType without action
   */
  export type TruckCountOutputTypeCountDevice_truck_assignmentArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: device_truck_assignmentWhereInput
  }

  /**
   * TruckCountOutputType without action
   */
  export type TruckCountOutputTypeCountFuel_level_eventArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: fuel_level_eventWhereInput
  }

  /**
   * TruckCountOutputType without action
   */
  export type TruckCountOutputTypeCountGps_positionArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: gps_positionWhereInput
  }

  /**
   * TruckCountOutputType without action
   */
  export type TruckCountOutputTypeCountHub_temperature_eventArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: hub_temperature_eventWhereInput
  }

  /**
   * TruckCountOutputType without action
   */
  export type TruckCountOutputTypeCountLock_eventArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: lock_eventWhereInput
  }

  /**
   * TruckCountOutputType without action
   */
  export type TruckCountOutputTypeCountSensor_data_rawArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: sensor_data_rawWhereInput
  }

  /**
   * TruckCountOutputType without action
   */
  export type TruckCountOutputTypeCountSpeed_eventArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: speed_eventWhereInput
  }

  /**
   * TruckCountOutputType without action
   */
  export type TruckCountOutputTypeCountTire_position_configArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: tire_position_configWhereInput
  }

  /**
   * TruckCountOutputType without action
   */
  export type TruckCountOutputTypeCountTire_pressure_eventArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: tire_pressure_eventWhereInput
  }

  /**
   * TruckCountOutputType without action
   */
  export type TruckCountOutputTypeCountTripArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: tripWhereInput
  }

  /**
   * TruckCountOutputType without action
   */
  export type TruckCountOutputTypeCountTruck_status_eventArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: truck_status_eventWhereInput
  }


  /**
   * Count Type UsersCountOutputType
   */

  export type UsersCountOutputType = {
    device_truck_assignment_device_truck_assignment_assigned_byTousers: number
    device_truck_assignment_device_truck_assignment_removed_byTousers: number
  }

  export type UsersCountOutputTypeSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    device_truck_assignment_device_truck_assignment_assigned_byTousers?: boolean | UsersCountOutputTypeCountDevice_truck_assignment_device_truck_assignment_assigned_byTousersArgs
    device_truck_assignment_device_truck_assignment_removed_byTousers?: boolean | UsersCountOutputTypeCountDevice_truck_assignment_device_truck_assignment_removed_byTousersArgs
  }

  // Custom InputTypes
  /**
   * UsersCountOutputType without action
   */
  export type UsersCountOutputTypeDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the UsersCountOutputType
     */
    select?: UsersCountOutputTypeSelect<ExtArgs> | null
  }

  /**
   * UsersCountOutputType without action
   */
  export type UsersCountOutputTypeCountDevice_truck_assignment_device_truck_assignment_assigned_byTousersArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: device_truck_assignmentWhereInput
  }

  /**
   * UsersCountOutputType without action
   */
  export type UsersCountOutputTypeCountDevice_truck_assignment_device_truck_assignment_removed_byTousersArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: device_truck_assignmentWhereInput
  }


  /**
   * Models
   */

  /**
   * Model alert_event
   */

  export type AggregateAlert_event = {
    _count: Alert_eventCountAggregateOutputType | null
    _avg: Alert_eventAvgAggregateOutputType | null
    _sum: Alert_eventSumAggregateOutputType | null
    _min: Alert_eventMinAggregateOutputType | null
    _max: Alert_eventMaxAggregateOutputType | null
  }

  export type Alert_eventAvgAggregateOutputType = {
    severity: number | null
  }

  export type Alert_eventSumAggregateOutputType = {
    severity: number | null
  }

  export type Alert_eventMinAggregateOutputType = {
    id: string | null
    truck_id: string | null
    type: $Enums.alert_type | null
    severity: number | null
    occurred_at: Date | null
    acknowledged: boolean | null
    created_by: string | null
  }

  export type Alert_eventMaxAggregateOutputType = {
    id: string | null
    truck_id: string | null
    type: $Enums.alert_type | null
    severity: number | null
    occurred_at: Date | null
    acknowledged: boolean | null
    created_by: string | null
  }

  export type Alert_eventCountAggregateOutputType = {
    id: number
    truck_id: number
    type: number
    severity: number
    detail: number
    occurred_at: number
    acknowledged: number
    created_by: number
    _all: number
  }


  export type Alert_eventAvgAggregateInputType = {
    severity?: true
  }

  export type Alert_eventSumAggregateInputType = {
    severity?: true
  }

  export type Alert_eventMinAggregateInputType = {
    id?: true
    truck_id?: true
    type?: true
    severity?: true
    occurred_at?: true
    acknowledged?: true
    created_by?: true
  }

  export type Alert_eventMaxAggregateInputType = {
    id?: true
    truck_id?: true
    type?: true
    severity?: true
    occurred_at?: true
    acknowledged?: true
    created_by?: true
  }

  export type Alert_eventCountAggregateInputType = {
    id?: true
    truck_id?: true
    type?: true
    severity?: true
    detail?: true
    occurred_at?: true
    acknowledged?: true
    created_by?: true
    _all?: true
  }

  export type Alert_eventAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which alert_event to aggregate.
     */
    where?: alert_eventWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of alert_events to fetch.
     */
    orderBy?: alert_eventOrderByWithRelationInput | alert_eventOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: alert_eventWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` alert_events from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` alert_events.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned alert_events
    **/
    _count?: true | Alert_eventCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: Alert_eventAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: Alert_eventSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: Alert_eventMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: Alert_eventMaxAggregateInputType
  }

  export type GetAlert_eventAggregateType<T extends Alert_eventAggregateArgs> = {
        [P in keyof T & keyof AggregateAlert_event]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateAlert_event[P]>
      : GetScalarType<T[P], AggregateAlert_event[P]>
  }




  export type alert_eventGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: alert_eventWhereInput
    orderBy?: alert_eventOrderByWithAggregationInput | alert_eventOrderByWithAggregationInput[]
    by: Alert_eventScalarFieldEnum[] | Alert_eventScalarFieldEnum
    having?: alert_eventScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: Alert_eventCountAggregateInputType | true
    _avg?: Alert_eventAvgAggregateInputType
    _sum?: Alert_eventSumAggregateInputType
    _min?: Alert_eventMinAggregateInputType
    _max?: Alert_eventMaxAggregateInputType
  }

  export type Alert_eventGroupByOutputType = {
    id: string
    truck_id: string
    type: $Enums.alert_type
    severity: number | null
    detail: JsonValue | null
    occurred_at: Date
    acknowledged: boolean
    created_by: string | null
    _count: Alert_eventCountAggregateOutputType | null
    _avg: Alert_eventAvgAggregateOutputType | null
    _sum: Alert_eventSumAggregateOutputType | null
    _min: Alert_eventMinAggregateOutputType | null
    _max: Alert_eventMaxAggregateOutputType | null
  }

  type GetAlert_eventGroupByPayload<T extends alert_eventGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<Alert_eventGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof Alert_eventGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], Alert_eventGroupByOutputType[P]>
            : GetScalarType<T[P], Alert_eventGroupByOutputType[P]>
        }
      >
    >


  export type alert_eventSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    truck_id?: boolean
    type?: boolean
    severity?: boolean
    detail?: boolean
    occurred_at?: boolean
    acknowledged?: boolean
    created_by?: boolean
    truck?: boolean | truckDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["alert_event"]>

  export type alert_eventSelectCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    truck_id?: boolean
    type?: boolean
    severity?: boolean
    detail?: boolean
    occurred_at?: boolean
    acknowledged?: boolean
    created_by?: boolean
    truck?: boolean | truckDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["alert_event"]>

  export type alert_eventSelectScalar = {
    id?: boolean
    truck_id?: boolean
    type?: boolean
    severity?: boolean
    detail?: boolean
    occurred_at?: boolean
    acknowledged?: boolean
    created_by?: boolean
  }

  export type alert_eventInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    truck?: boolean | truckDefaultArgs<ExtArgs>
  }
  export type alert_eventIncludeCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    truck?: boolean | truckDefaultArgs<ExtArgs>
  }

  export type $alert_eventPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "alert_event"
    objects: {
      truck: Prisma.$truckPayload<ExtArgs>
    }
    scalars: $Extensions.GetPayloadResult<{
      id: string
      truck_id: string
      type: $Enums.alert_type
      severity: number | null
      detail: Prisma.JsonValue | null
      occurred_at: Date
      acknowledged: boolean
      created_by: string | null
    }, ExtArgs["result"]["alert_event"]>
    composites: {}
  }

  type alert_eventGetPayload<S extends boolean | null | undefined | alert_eventDefaultArgs> = $Result.GetResult<Prisma.$alert_eventPayload, S>

  type alert_eventCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = 
    Omit<alert_eventFindManyArgs, 'select' | 'include' | 'distinct'> & {
      select?: Alert_eventCountAggregateInputType | true
    }

  export interface alert_eventDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['alert_event'], meta: { name: 'alert_event' } }
    /**
     * Find zero or one Alert_event that matches the filter.
     * @param {alert_eventFindUniqueArgs} args - Arguments to find a Alert_event
     * @example
     * // Get one Alert_event
     * const alert_event = await prisma.alert_event.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends alert_eventFindUniqueArgs>(args: SelectSubset<T, alert_eventFindUniqueArgs<ExtArgs>>): Prisma__alert_eventClient<$Result.GetResult<Prisma.$alert_eventPayload<ExtArgs>, T, "findUnique"> | null, null, ExtArgs>

    /**
     * Find one Alert_event that matches the filter or throw an error with `error.code='P2025'` 
     * if no matches were found.
     * @param {alert_eventFindUniqueOrThrowArgs} args - Arguments to find a Alert_event
     * @example
     * // Get one Alert_event
     * const alert_event = await prisma.alert_event.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends alert_eventFindUniqueOrThrowArgs>(args: SelectSubset<T, alert_eventFindUniqueOrThrowArgs<ExtArgs>>): Prisma__alert_eventClient<$Result.GetResult<Prisma.$alert_eventPayload<ExtArgs>, T, "findUniqueOrThrow">, never, ExtArgs>

    /**
     * Find the first Alert_event that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {alert_eventFindFirstArgs} args - Arguments to find a Alert_event
     * @example
     * // Get one Alert_event
     * const alert_event = await prisma.alert_event.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends alert_eventFindFirstArgs>(args?: SelectSubset<T, alert_eventFindFirstArgs<ExtArgs>>): Prisma__alert_eventClient<$Result.GetResult<Prisma.$alert_eventPayload<ExtArgs>, T, "findFirst"> | null, null, ExtArgs>

    /**
     * Find the first Alert_event that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {alert_eventFindFirstOrThrowArgs} args - Arguments to find a Alert_event
     * @example
     * // Get one Alert_event
     * const alert_event = await prisma.alert_event.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends alert_eventFindFirstOrThrowArgs>(args?: SelectSubset<T, alert_eventFindFirstOrThrowArgs<ExtArgs>>): Prisma__alert_eventClient<$Result.GetResult<Prisma.$alert_eventPayload<ExtArgs>, T, "findFirstOrThrow">, never, ExtArgs>

    /**
     * Find zero or more Alert_events that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {alert_eventFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all Alert_events
     * const alert_events = await prisma.alert_event.findMany()
     * 
     * // Get first 10 Alert_events
     * const alert_events = await prisma.alert_event.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const alert_eventWithIdOnly = await prisma.alert_event.findMany({ select: { id: true } })
     * 
     */
    findMany<T extends alert_eventFindManyArgs>(args?: SelectSubset<T, alert_eventFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$alert_eventPayload<ExtArgs>, T, "findMany">>

    /**
     * Create a Alert_event.
     * @param {alert_eventCreateArgs} args - Arguments to create a Alert_event.
     * @example
     * // Create one Alert_event
     * const Alert_event = await prisma.alert_event.create({
     *   data: {
     *     // ... data to create a Alert_event
     *   }
     * })
     * 
     */
    create<T extends alert_eventCreateArgs>(args: SelectSubset<T, alert_eventCreateArgs<ExtArgs>>): Prisma__alert_eventClient<$Result.GetResult<Prisma.$alert_eventPayload<ExtArgs>, T, "create">, never, ExtArgs>

    /**
     * Create many Alert_events.
     * @param {alert_eventCreateManyArgs} args - Arguments to create many Alert_events.
     * @example
     * // Create many Alert_events
     * const alert_event = await prisma.alert_event.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends alert_eventCreateManyArgs>(args?: SelectSubset<T, alert_eventCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create many Alert_events and returns the data saved in the database.
     * @param {alert_eventCreateManyAndReturnArgs} args - Arguments to create many Alert_events.
     * @example
     * // Create many Alert_events
     * const alert_event = await prisma.alert_event.createManyAndReturn({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Create many Alert_events and only return the `id`
     * const alert_eventWithIdOnly = await prisma.alert_event.createManyAndReturn({ 
     *   select: { id: true },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    createManyAndReturn<T extends alert_eventCreateManyAndReturnArgs>(args?: SelectSubset<T, alert_eventCreateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$alert_eventPayload<ExtArgs>, T, "createManyAndReturn">>

    /**
     * Delete a Alert_event.
     * @param {alert_eventDeleteArgs} args - Arguments to delete one Alert_event.
     * @example
     * // Delete one Alert_event
     * const Alert_event = await prisma.alert_event.delete({
     *   where: {
     *     // ... filter to delete one Alert_event
     *   }
     * })
     * 
     */
    delete<T extends alert_eventDeleteArgs>(args: SelectSubset<T, alert_eventDeleteArgs<ExtArgs>>): Prisma__alert_eventClient<$Result.GetResult<Prisma.$alert_eventPayload<ExtArgs>, T, "delete">, never, ExtArgs>

    /**
     * Update one Alert_event.
     * @param {alert_eventUpdateArgs} args - Arguments to update one Alert_event.
     * @example
     * // Update one Alert_event
     * const alert_event = await prisma.alert_event.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends alert_eventUpdateArgs>(args: SelectSubset<T, alert_eventUpdateArgs<ExtArgs>>): Prisma__alert_eventClient<$Result.GetResult<Prisma.$alert_eventPayload<ExtArgs>, T, "update">, never, ExtArgs>

    /**
     * Delete zero or more Alert_events.
     * @param {alert_eventDeleteManyArgs} args - Arguments to filter Alert_events to delete.
     * @example
     * // Delete a few Alert_events
     * const { count } = await prisma.alert_event.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends alert_eventDeleteManyArgs>(args?: SelectSubset<T, alert_eventDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Alert_events.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {alert_eventUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many Alert_events
     * const alert_event = await prisma.alert_event.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends alert_eventUpdateManyArgs>(args: SelectSubset<T, alert_eventUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create or update one Alert_event.
     * @param {alert_eventUpsertArgs} args - Arguments to update or create a Alert_event.
     * @example
     * // Update or create a Alert_event
     * const alert_event = await prisma.alert_event.upsert({
     *   create: {
     *     // ... data to create a Alert_event
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the Alert_event we want to update
     *   }
     * })
     */
    upsert<T extends alert_eventUpsertArgs>(args: SelectSubset<T, alert_eventUpsertArgs<ExtArgs>>): Prisma__alert_eventClient<$Result.GetResult<Prisma.$alert_eventPayload<ExtArgs>, T, "upsert">, never, ExtArgs>


    /**
     * Count the number of Alert_events.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {alert_eventCountArgs} args - Arguments to filter Alert_events to count.
     * @example
     * // Count the number of Alert_events
     * const count = await prisma.alert_event.count({
     *   where: {
     *     // ... the filter for the Alert_events we want to count
     *   }
     * })
    **/
    count<T extends alert_eventCountArgs>(
      args?: Subset<T, alert_eventCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], Alert_eventCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a Alert_event.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {Alert_eventAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends Alert_eventAggregateArgs>(args: Subset<T, Alert_eventAggregateArgs>): Prisma.PrismaPromise<GetAlert_eventAggregateType<T>>

    /**
     * Group by Alert_event.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {alert_eventGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends alert_eventGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: alert_eventGroupByArgs['orderBy'] }
        : { orderBy?: alert_eventGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, alert_eventGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetAlert_eventGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the alert_event model
   */
  readonly fields: alert_eventFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for alert_event.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__alert_eventClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    truck<T extends truckDefaultArgs<ExtArgs> = {}>(args?: Subset<T, truckDefaultArgs<ExtArgs>>): Prisma__truckClient<$Result.GetResult<Prisma.$truckPayload<ExtArgs>, T, "findUniqueOrThrow"> | Null, Null, ExtArgs>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the alert_event model
   */ 
  interface alert_eventFieldRefs {
    readonly id: FieldRef<"alert_event", 'String'>
    readonly truck_id: FieldRef<"alert_event", 'String'>
    readonly type: FieldRef<"alert_event", 'alert_type'>
    readonly severity: FieldRef<"alert_event", 'Int'>
    readonly detail: FieldRef<"alert_event", 'Json'>
    readonly occurred_at: FieldRef<"alert_event", 'DateTime'>
    readonly acknowledged: FieldRef<"alert_event", 'Boolean'>
    readonly created_by: FieldRef<"alert_event", 'String'>
  }
    

  // Custom InputTypes
  /**
   * alert_event findUnique
   */
  export type alert_eventFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the alert_event
     */
    select?: alert_eventSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: alert_eventInclude<ExtArgs> | null
    /**
     * Filter, which alert_event to fetch.
     */
    where: alert_eventWhereUniqueInput
  }

  /**
   * alert_event findUniqueOrThrow
   */
  export type alert_eventFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the alert_event
     */
    select?: alert_eventSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: alert_eventInclude<ExtArgs> | null
    /**
     * Filter, which alert_event to fetch.
     */
    where: alert_eventWhereUniqueInput
  }

  /**
   * alert_event findFirst
   */
  export type alert_eventFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the alert_event
     */
    select?: alert_eventSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: alert_eventInclude<ExtArgs> | null
    /**
     * Filter, which alert_event to fetch.
     */
    where?: alert_eventWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of alert_events to fetch.
     */
    orderBy?: alert_eventOrderByWithRelationInput | alert_eventOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for alert_events.
     */
    cursor?: alert_eventWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` alert_events from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` alert_events.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of alert_events.
     */
    distinct?: Alert_eventScalarFieldEnum | Alert_eventScalarFieldEnum[]
  }

  /**
   * alert_event findFirstOrThrow
   */
  export type alert_eventFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the alert_event
     */
    select?: alert_eventSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: alert_eventInclude<ExtArgs> | null
    /**
     * Filter, which alert_event to fetch.
     */
    where?: alert_eventWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of alert_events to fetch.
     */
    orderBy?: alert_eventOrderByWithRelationInput | alert_eventOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for alert_events.
     */
    cursor?: alert_eventWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` alert_events from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` alert_events.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of alert_events.
     */
    distinct?: Alert_eventScalarFieldEnum | Alert_eventScalarFieldEnum[]
  }

  /**
   * alert_event findMany
   */
  export type alert_eventFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the alert_event
     */
    select?: alert_eventSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: alert_eventInclude<ExtArgs> | null
    /**
     * Filter, which alert_events to fetch.
     */
    where?: alert_eventWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of alert_events to fetch.
     */
    orderBy?: alert_eventOrderByWithRelationInput | alert_eventOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing alert_events.
     */
    cursor?: alert_eventWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` alert_events from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` alert_events.
     */
    skip?: number
    distinct?: Alert_eventScalarFieldEnum | Alert_eventScalarFieldEnum[]
  }

  /**
   * alert_event create
   */
  export type alert_eventCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the alert_event
     */
    select?: alert_eventSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: alert_eventInclude<ExtArgs> | null
    /**
     * The data needed to create a alert_event.
     */
    data: XOR<alert_eventCreateInput, alert_eventUncheckedCreateInput>
  }

  /**
   * alert_event createMany
   */
  export type alert_eventCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many alert_events.
     */
    data: alert_eventCreateManyInput | alert_eventCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * alert_event createManyAndReturn
   */
  export type alert_eventCreateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the alert_event
     */
    select?: alert_eventSelectCreateManyAndReturn<ExtArgs> | null
    /**
     * The data used to create many alert_events.
     */
    data: alert_eventCreateManyInput | alert_eventCreateManyInput[]
    skipDuplicates?: boolean
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: alert_eventIncludeCreateManyAndReturn<ExtArgs> | null
  }

  /**
   * alert_event update
   */
  export type alert_eventUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the alert_event
     */
    select?: alert_eventSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: alert_eventInclude<ExtArgs> | null
    /**
     * The data needed to update a alert_event.
     */
    data: XOR<alert_eventUpdateInput, alert_eventUncheckedUpdateInput>
    /**
     * Choose, which alert_event to update.
     */
    where: alert_eventWhereUniqueInput
  }

  /**
   * alert_event updateMany
   */
  export type alert_eventUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update alert_events.
     */
    data: XOR<alert_eventUpdateManyMutationInput, alert_eventUncheckedUpdateManyInput>
    /**
     * Filter which alert_events to update
     */
    where?: alert_eventWhereInput
  }

  /**
   * alert_event upsert
   */
  export type alert_eventUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the alert_event
     */
    select?: alert_eventSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: alert_eventInclude<ExtArgs> | null
    /**
     * The filter to search for the alert_event to update in case it exists.
     */
    where: alert_eventWhereUniqueInput
    /**
     * In case the alert_event found by the `where` argument doesn't exist, create a new alert_event with this data.
     */
    create: XOR<alert_eventCreateInput, alert_eventUncheckedCreateInput>
    /**
     * In case the alert_event was found with the provided `where` argument, update it with this data.
     */
    update: XOR<alert_eventUpdateInput, alert_eventUncheckedUpdateInput>
  }

  /**
   * alert_event delete
   */
  export type alert_eventDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the alert_event
     */
    select?: alert_eventSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: alert_eventInclude<ExtArgs> | null
    /**
     * Filter which alert_event to delete.
     */
    where: alert_eventWhereUniqueInput
  }

  /**
   * alert_event deleteMany
   */
  export type alert_eventDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which alert_events to delete
     */
    where?: alert_eventWhereInput
  }

  /**
   * alert_event without action
   */
  export type alert_eventDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the alert_event
     */
    select?: alert_eventSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: alert_eventInclude<ExtArgs> | null
  }


  /**
   * Model daily_route
   */

  export type AggregateDaily_route = {
    _count: Daily_routeCountAggregateOutputType | null
    _avg: Daily_routeAvgAggregateOutputType | null
    _sum: Daily_routeSumAggregateOutputType | null
    _min: Daily_routeMinAggregateOutputType | null
    _max: Daily_routeMaxAggregateOutputType | null
  }

  export type Daily_routeAvgAggregateOutputType = {
    point_count: number | null
  }

  export type Daily_routeSumAggregateOutputType = {
    point_count: number | null
  }

  export type Daily_routeMinAggregateOutputType = {
    id: string | null
    truck_id: string | null
    route_date: Date | null
    point_count: number | null
    generated_at: Date | null
    created_by: string | null
  }

  export type Daily_routeMaxAggregateOutputType = {
    id: string | null
    truck_id: string | null
    route_date: Date | null
    point_count: number | null
    generated_at: Date | null
    created_by: string | null
  }

  export type Daily_routeCountAggregateOutputType = {
    id: number
    truck_id: number
    route_date: number
    point_count: number
    generated_at: number
    created_by: number
    _all: number
  }


  export type Daily_routeAvgAggregateInputType = {
    point_count?: true
  }

  export type Daily_routeSumAggregateInputType = {
    point_count?: true
  }

  export type Daily_routeMinAggregateInputType = {
    id?: true
    truck_id?: true
    route_date?: true
    point_count?: true
    generated_at?: true
    created_by?: true
  }

  export type Daily_routeMaxAggregateInputType = {
    id?: true
    truck_id?: true
    route_date?: true
    point_count?: true
    generated_at?: true
    created_by?: true
  }

  export type Daily_routeCountAggregateInputType = {
    id?: true
    truck_id?: true
    route_date?: true
    point_count?: true
    generated_at?: true
    created_by?: true
    _all?: true
  }

  export type Daily_routeAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which daily_route to aggregate.
     */
    where?: daily_routeWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of daily_routes to fetch.
     */
    orderBy?: daily_routeOrderByWithRelationInput | daily_routeOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: daily_routeWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` daily_routes from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` daily_routes.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned daily_routes
    **/
    _count?: true | Daily_routeCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: Daily_routeAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: Daily_routeSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: Daily_routeMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: Daily_routeMaxAggregateInputType
  }

  export type GetDaily_routeAggregateType<T extends Daily_routeAggregateArgs> = {
        [P in keyof T & keyof AggregateDaily_route]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateDaily_route[P]>
      : GetScalarType<T[P], AggregateDaily_route[P]>
  }




  export type daily_routeGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: daily_routeWhereInput
    orderBy?: daily_routeOrderByWithAggregationInput | daily_routeOrderByWithAggregationInput[]
    by: Daily_routeScalarFieldEnum[] | Daily_routeScalarFieldEnum
    having?: daily_routeScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: Daily_routeCountAggregateInputType | true
    _avg?: Daily_routeAvgAggregateInputType
    _sum?: Daily_routeSumAggregateInputType
    _min?: Daily_routeMinAggregateInputType
    _max?: Daily_routeMaxAggregateInputType
  }

  export type Daily_routeGroupByOutputType = {
    id: string
    truck_id: string
    route_date: Date
    point_count: number
    generated_at: Date
    created_by: string | null
    _count: Daily_routeCountAggregateOutputType | null
    _avg: Daily_routeAvgAggregateOutputType | null
    _sum: Daily_routeSumAggregateOutputType | null
    _min: Daily_routeMinAggregateOutputType | null
    _max: Daily_routeMaxAggregateOutputType | null
  }

  type GetDaily_routeGroupByPayload<T extends daily_routeGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<Daily_routeGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof Daily_routeGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], Daily_routeGroupByOutputType[P]>
            : GetScalarType<T[P], Daily_routeGroupByOutputType[P]>
        }
      >
    >


  export type daily_routeSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    truck_id?: boolean
    route_date?: boolean
    point_count?: boolean
    generated_at?: boolean
    created_by?: boolean
    truck?: boolean | truckDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["daily_route"]>


  export type daily_routeSelectScalar = {
    id?: boolean
    truck_id?: boolean
    route_date?: boolean
    point_count?: boolean
    generated_at?: boolean
    created_by?: boolean
  }

  export type daily_routeInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    truck?: boolean | truckDefaultArgs<ExtArgs>
  }

  export type $daily_routePayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "daily_route"
    objects: {
      truck: Prisma.$truckPayload<ExtArgs>
    }
    scalars: $Extensions.GetPayloadResult<{
      id: string
      truck_id: string
      route_date: Date
      point_count: number
      generated_at: Date
      created_by: string | null
    }, ExtArgs["result"]["daily_route"]>
    composites: {}
  }

  type daily_routeGetPayload<S extends boolean | null | undefined | daily_routeDefaultArgs> = $Result.GetResult<Prisma.$daily_routePayload, S>

  type daily_routeCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = 
    Omit<daily_routeFindManyArgs, 'select' | 'include' | 'distinct'> & {
      select?: Daily_routeCountAggregateInputType | true
    }

  export interface daily_routeDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['daily_route'], meta: { name: 'daily_route' } }
    /**
     * Find zero or one Daily_route that matches the filter.
     * @param {daily_routeFindUniqueArgs} args - Arguments to find a Daily_route
     * @example
     * // Get one Daily_route
     * const daily_route = await prisma.daily_route.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends daily_routeFindUniqueArgs>(args: SelectSubset<T, daily_routeFindUniqueArgs<ExtArgs>>): Prisma__daily_routeClient<$Result.GetResult<Prisma.$daily_routePayload<ExtArgs>, T, "findUnique"> | null, null, ExtArgs>

    /**
     * Find one Daily_route that matches the filter or throw an error with `error.code='P2025'` 
     * if no matches were found.
     * @param {daily_routeFindUniqueOrThrowArgs} args - Arguments to find a Daily_route
     * @example
     * // Get one Daily_route
     * const daily_route = await prisma.daily_route.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends daily_routeFindUniqueOrThrowArgs>(args: SelectSubset<T, daily_routeFindUniqueOrThrowArgs<ExtArgs>>): Prisma__daily_routeClient<$Result.GetResult<Prisma.$daily_routePayload<ExtArgs>, T, "findUniqueOrThrow">, never, ExtArgs>

    /**
     * Find the first Daily_route that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {daily_routeFindFirstArgs} args - Arguments to find a Daily_route
     * @example
     * // Get one Daily_route
     * const daily_route = await prisma.daily_route.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends daily_routeFindFirstArgs>(args?: SelectSubset<T, daily_routeFindFirstArgs<ExtArgs>>): Prisma__daily_routeClient<$Result.GetResult<Prisma.$daily_routePayload<ExtArgs>, T, "findFirst"> | null, null, ExtArgs>

    /**
     * Find the first Daily_route that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {daily_routeFindFirstOrThrowArgs} args - Arguments to find a Daily_route
     * @example
     * // Get one Daily_route
     * const daily_route = await prisma.daily_route.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends daily_routeFindFirstOrThrowArgs>(args?: SelectSubset<T, daily_routeFindFirstOrThrowArgs<ExtArgs>>): Prisma__daily_routeClient<$Result.GetResult<Prisma.$daily_routePayload<ExtArgs>, T, "findFirstOrThrow">, never, ExtArgs>

    /**
     * Find zero or more Daily_routes that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {daily_routeFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all Daily_routes
     * const daily_routes = await prisma.daily_route.findMany()
     * 
     * // Get first 10 Daily_routes
     * const daily_routes = await prisma.daily_route.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const daily_routeWithIdOnly = await prisma.daily_route.findMany({ select: { id: true } })
     * 
     */
    findMany<T extends daily_routeFindManyArgs>(args?: SelectSubset<T, daily_routeFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$daily_routePayload<ExtArgs>, T, "findMany">>

    /**
     * Delete a Daily_route.
     * @param {daily_routeDeleteArgs} args - Arguments to delete one Daily_route.
     * @example
     * // Delete one Daily_route
     * const Daily_route = await prisma.daily_route.delete({
     *   where: {
     *     // ... filter to delete one Daily_route
     *   }
     * })
     * 
     */
    delete<T extends daily_routeDeleteArgs>(args: SelectSubset<T, daily_routeDeleteArgs<ExtArgs>>): Prisma__daily_routeClient<$Result.GetResult<Prisma.$daily_routePayload<ExtArgs>, T, "delete">, never, ExtArgs>

    /**
     * Update one Daily_route.
     * @param {daily_routeUpdateArgs} args - Arguments to update one Daily_route.
     * @example
     * // Update one Daily_route
     * const daily_route = await prisma.daily_route.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends daily_routeUpdateArgs>(args: SelectSubset<T, daily_routeUpdateArgs<ExtArgs>>): Prisma__daily_routeClient<$Result.GetResult<Prisma.$daily_routePayload<ExtArgs>, T, "update">, never, ExtArgs>

    /**
     * Delete zero or more Daily_routes.
     * @param {daily_routeDeleteManyArgs} args - Arguments to filter Daily_routes to delete.
     * @example
     * // Delete a few Daily_routes
     * const { count } = await prisma.daily_route.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends daily_routeDeleteManyArgs>(args?: SelectSubset<T, daily_routeDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Daily_routes.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {daily_routeUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many Daily_routes
     * const daily_route = await prisma.daily_route.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends daily_routeUpdateManyArgs>(args: SelectSubset<T, daily_routeUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>


    /**
     * Count the number of Daily_routes.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {daily_routeCountArgs} args - Arguments to filter Daily_routes to count.
     * @example
     * // Count the number of Daily_routes
     * const count = await prisma.daily_route.count({
     *   where: {
     *     // ... the filter for the Daily_routes we want to count
     *   }
     * })
    **/
    count<T extends daily_routeCountArgs>(
      args?: Subset<T, daily_routeCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], Daily_routeCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a Daily_route.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {Daily_routeAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends Daily_routeAggregateArgs>(args: Subset<T, Daily_routeAggregateArgs>): Prisma.PrismaPromise<GetDaily_routeAggregateType<T>>

    /**
     * Group by Daily_route.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {daily_routeGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends daily_routeGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: daily_routeGroupByArgs['orderBy'] }
        : { orderBy?: daily_routeGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, daily_routeGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetDaily_routeGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the daily_route model
   */
  readonly fields: daily_routeFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for daily_route.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__daily_routeClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    truck<T extends truckDefaultArgs<ExtArgs> = {}>(args?: Subset<T, truckDefaultArgs<ExtArgs>>): Prisma__truckClient<$Result.GetResult<Prisma.$truckPayload<ExtArgs>, T, "findUniqueOrThrow"> | Null, Null, ExtArgs>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the daily_route model
   */ 
  interface daily_routeFieldRefs {
    readonly id: FieldRef<"daily_route", 'String'>
    readonly truck_id: FieldRef<"daily_route", 'String'>
    readonly route_date: FieldRef<"daily_route", 'DateTime'>
    readonly point_count: FieldRef<"daily_route", 'Int'>
    readonly generated_at: FieldRef<"daily_route", 'DateTime'>
    readonly created_by: FieldRef<"daily_route", 'String'>
  }
    

  // Custom InputTypes
  /**
   * daily_route findUnique
   */
  export type daily_routeFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the daily_route
     */
    select?: daily_routeSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: daily_routeInclude<ExtArgs> | null
    /**
     * Filter, which daily_route to fetch.
     */
    where: daily_routeWhereUniqueInput
  }

  /**
   * daily_route findUniqueOrThrow
   */
  export type daily_routeFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the daily_route
     */
    select?: daily_routeSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: daily_routeInclude<ExtArgs> | null
    /**
     * Filter, which daily_route to fetch.
     */
    where: daily_routeWhereUniqueInput
  }

  /**
   * daily_route findFirst
   */
  export type daily_routeFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the daily_route
     */
    select?: daily_routeSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: daily_routeInclude<ExtArgs> | null
    /**
     * Filter, which daily_route to fetch.
     */
    where?: daily_routeWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of daily_routes to fetch.
     */
    orderBy?: daily_routeOrderByWithRelationInput | daily_routeOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for daily_routes.
     */
    cursor?: daily_routeWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` daily_routes from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` daily_routes.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of daily_routes.
     */
    distinct?: Daily_routeScalarFieldEnum | Daily_routeScalarFieldEnum[]
  }

  /**
   * daily_route findFirstOrThrow
   */
  export type daily_routeFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the daily_route
     */
    select?: daily_routeSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: daily_routeInclude<ExtArgs> | null
    /**
     * Filter, which daily_route to fetch.
     */
    where?: daily_routeWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of daily_routes to fetch.
     */
    orderBy?: daily_routeOrderByWithRelationInput | daily_routeOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for daily_routes.
     */
    cursor?: daily_routeWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` daily_routes from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` daily_routes.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of daily_routes.
     */
    distinct?: Daily_routeScalarFieldEnum | Daily_routeScalarFieldEnum[]
  }

  /**
   * daily_route findMany
   */
  export type daily_routeFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the daily_route
     */
    select?: daily_routeSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: daily_routeInclude<ExtArgs> | null
    /**
     * Filter, which daily_routes to fetch.
     */
    where?: daily_routeWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of daily_routes to fetch.
     */
    orderBy?: daily_routeOrderByWithRelationInput | daily_routeOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing daily_routes.
     */
    cursor?: daily_routeWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` daily_routes from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` daily_routes.
     */
    skip?: number
    distinct?: Daily_routeScalarFieldEnum | Daily_routeScalarFieldEnum[]
  }

  /**
   * daily_route update
   */
  export type daily_routeUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the daily_route
     */
    select?: daily_routeSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: daily_routeInclude<ExtArgs> | null
    /**
     * The data needed to update a daily_route.
     */
    data: XOR<daily_routeUpdateInput, daily_routeUncheckedUpdateInput>
    /**
     * Choose, which daily_route to update.
     */
    where: daily_routeWhereUniqueInput
  }

  /**
   * daily_route updateMany
   */
  export type daily_routeUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update daily_routes.
     */
    data: XOR<daily_routeUpdateManyMutationInput, daily_routeUncheckedUpdateManyInput>
    /**
     * Filter which daily_routes to update
     */
    where?: daily_routeWhereInput
  }

  /**
   * daily_route delete
   */
  export type daily_routeDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the daily_route
     */
    select?: daily_routeSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: daily_routeInclude<ExtArgs> | null
    /**
     * Filter which daily_route to delete.
     */
    where: daily_routeWhereUniqueInput
  }

  /**
   * daily_route deleteMany
   */
  export type daily_routeDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which daily_routes to delete
     */
    where?: daily_routeWhereInput
  }

  /**
   * daily_route without action
   */
  export type daily_routeDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the daily_route
     */
    select?: daily_routeSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: daily_routeInclude<ExtArgs> | null
  }


  /**
   * Model device
   */

  export type AggregateDevice = {
    _count: DeviceCountAggregateOutputType | null
    _min: DeviceMinAggregateOutputType | null
    _max: DeviceMaxAggregateOutputType | null
  }

  export type DeviceMinAggregateOutputType = {
    id: string | null
    truck_id: string | null
    sn: string | null
    sim_number: string | null
    installed_at: Date | null
    removed_at: Date | null
    created_by: string | null
    updated_by: string | null
  }

  export type DeviceMaxAggregateOutputType = {
    id: string | null
    truck_id: string | null
    sn: string | null
    sim_number: string | null
    installed_at: Date | null
    removed_at: Date | null
    created_by: string | null
    updated_by: string | null
  }

  export type DeviceCountAggregateOutputType = {
    id: number
    truck_id: number
    sn: number
    sim_number: number
    installed_at: number
    removed_at: number
    created_by: number
    updated_by: number
    _all: number
  }


  export type DeviceMinAggregateInputType = {
    id?: true
    truck_id?: true
    sn?: true
    sim_number?: true
    installed_at?: true
    removed_at?: true
    created_by?: true
    updated_by?: true
  }

  export type DeviceMaxAggregateInputType = {
    id?: true
    truck_id?: true
    sn?: true
    sim_number?: true
    installed_at?: true
    removed_at?: true
    created_by?: true
    updated_by?: true
  }

  export type DeviceCountAggregateInputType = {
    id?: true
    truck_id?: true
    sn?: true
    sim_number?: true
    installed_at?: true
    removed_at?: true
    created_by?: true
    updated_by?: true
    _all?: true
  }

  export type DeviceAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which device to aggregate.
     */
    where?: deviceWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of devices to fetch.
     */
    orderBy?: deviceOrderByWithRelationInput | deviceOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: deviceWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` devices from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` devices.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned devices
    **/
    _count?: true | DeviceCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: DeviceMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: DeviceMaxAggregateInputType
  }

  export type GetDeviceAggregateType<T extends DeviceAggregateArgs> = {
        [P in keyof T & keyof AggregateDevice]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateDevice[P]>
      : GetScalarType<T[P], AggregateDevice[P]>
  }




  export type deviceGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: deviceWhereInput
    orderBy?: deviceOrderByWithAggregationInput | deviceOrderByWithAggregationInput[]
    by: DeviceScalarFieldEnum[] | DeviceScalarFieldEnum
    having?: deviceScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: DeviceCountAggregateInputType | true
    _min?: DeviceMinAggregateInputType
    _max?: DeviceMaxAggregateInputType
  }

  export type DeviceGroupByOutputType = {
    id: string
    truck_id: string
    sn: string
    sim_number: string | null
    installed_at: Date
    removed_at: Date | null
    created_by: string | null
    updated_by: string | null
    _count: DeviceCountAggregateOutputType | null
    _min: DeviceMinAggregateOutputType | null
    _max: DeviceMaxAggregateOutputType | null
  }

  type GetDeviceGroupByPayload<T extends deviceGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<DeviceGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof DeviceGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], DeviceGroupByOutputType[P]>
            : GetScalarType<T[P], DeviceGroupByOutputType[P]>
        }
      >
    >


  export type deviceSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    truck_id?: boolean
    sn?: boolean
    sim_number?: boolean
    installed_at?: boolean
    removed_at?: boolean
    created_by?: boolean
    updated_by?: boolean
    truck?: boolean | truckDefaultArgs<ExtArgs>
    device_status_event?: boolean | device$device_status_eventArgs<ExtArgs>
    device_truck_assignment?: boolean | device$device_truck_assignmentArgs<ExtArgs>
    gps_position?: boolean | device$gps_positionArgs<ExtArgs>
    hub_temperature_event?: boolean | device$hub_temperature_eventArgs<ExtArgs>
    lock_event?: boolean | device$lock_eventArgs<ExtArgs>
    sensor?: boolean | device$sensorArgs<ExtArgs>
    tire_pressure_event?: boolean | device$tire_pressure_eventArgs<ExtArgs>
    _count?: boolean | DeviceCountOutputTypeDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["device"]>

  export type deviceSelectCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    truck_id?: boolean
    sn?: boolean
    sim_number?: boolean
    installed_at?: boolean
    removed_at?: boolean
    created_by?: boolean
    updated_by?: boolean
    truck?: boolean | truckDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["device"]>

  export type deviceSelectScalar = {
    id?: boolean
    truck_id?: boolean
    sn?: boolean
    sim_number?: boolean
    installed_at?: boolean
    removed_at?: boolean
    created_by?: boolean
    updated_by?: boolean
  }

  export type deviceInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    truck?: boolean | truckDefaultArgs<ExtArgs>
    device_status_event?: boolean | device$device_status_eventArgs<ExtArgs>
    device_truck_assignment?: boolean | device$device_truck_assignmentArgs<ExtArgs>
    gps_position?: boolean | device$gps_positionArgs<ExtArgs>
    hub_temperature_event?: boolean | device$hub_temperature_eventArgs<ExtArgs>
    lock_event?: boolean | device$lock_eventArgs<ExtArgs>
    sensor?: boolean | device$sensorArgs<ExtArgs>
    tire_pressure_event?: boolean | device$tire_pressure_eventArgs<ExtArgs>
    _count?: boolean | DeviceCountOutputTypeDefaultArgs<ExtArgs>
  }
  export type deviceIncludeCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    truck?: boolean | truckDefaultArgs<ExtArgs>
  }

  export type $devicePayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "device"
    objects: {
      truck: Prisma.$truckPayload<ExtArgs>
      device_status_event: Prisma.$device_status_eventPayload<ExtArgs>[]
      device_truck_assignment: Prisma.$device_truck_assignmentPayload<ExtArgs>[]
      gps_position: Prisma.$gps_positionPayload<ExtArgs>[]
      hub_temperature_event: Prisma.$hub_temperature_eventPayload<ExtArgs>[]
      lock_event: Prisma.$lock_eventPayload<ExtArgs>[]
      sensor: Prisma.$sensorPayload<ExtArgs>[]
      tire_pressure_event: Prisma.$tire_pressure_eventPayload<ExtArgs>[]
    }
    scalars: $Extensions.GetPayloadResult<{
      id: string
      truck_id: string
      sn: string
      sim_number: string | null
      installed_at: Date
      removed_at: Date | null
      created_by: string | null
      updated_by: string | null
    }, ExtArgs["result"]["device"]>
    composites: {}
  }

  type deviceGetPayload<S extends boolean | null | undefined | deviceDefaultArgs> = $Result.GetResult<Prisma.$devicePayload, S>

  type deviceCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = 
    Omit<deviceFindManyArgs, 'select' | 'include' | 'distinct'> & {
      select?: DeviceCountAggregateInputType | true
    }

  export interface deviceDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['device'], meta: { name: 'device' } }
    /**
     * Find zero or one Device that matches the filter.
     * @param {deviceFindUniqueArgs} args - Arguments to find a Device
     * @example
     * // Get one Device
     * const device = await prisma.device.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends deviceFindUniqueArgs>(args: SelectSubset<T, deviceFindUniqueArgs<ExtArgs>>): Prisma__deviceClient<$Result.GetResult<Prisma.$devicePayload<ExtArgs>, T, "findUnique"> | null, null, ExtArgs>

    /**
     * Find one Device that matches the filter or throw an error with `error.code='P2025'` 
     * if no matches were found.
     * @param {deviceFindUniqueOrThrowArgs} args - Arguments to find a Device
     * @example
     * // Get one Device
     * const device = await prisma.device.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends deviceFindUniqueOrThrowArgs>(args: SelectSubset<T, deviceFindUniqueOrThrowArgs<ExtArgs>>): Prisma__deviceClient<$Result.GetResult<Prisma.$devicePayload<ExtArgs>, T, "findUniqueOrThrow">, never, ExtArgs>

    /**
     * Find the first Device that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {deviceFindFirstArgs} args - Arguments to find a Device
     * @example
     * // Get one Device
     * const device = await prisma.device.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends deviceFindFirstArgs>(args?: SelectSubset<T, deviceFindFirstArgs<ExtArgs>>): Prisma__deviceClient<$Result.GetResult<Prisma.$devicePayload<ExtArgs>, T, "findFirst"> | null, null, ExtArgs>

    /**
     * Find the first Device that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {deviceFindFirstOrThrowArgs} args - Arguments to find a Device
     * @example
     * // Get one Device
     * const device = await prisma.device.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends deviceFindFirstOrThrowArgs>(args?: SelectSubset<T, deviceFindFirstOrThrowArgs<ExtArgs>>): Prisma__deviceClient<$Result.GetResult<Prisma.$devicePayload<ExtArgs>, T, "findFirstOrThrow">, never, ExtArgs>

    /**
     * Find zero or more Devices that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {deviceFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all Devices
     * const devices = await prisma.device.findMany()
     * 
     * // Get first 10 Devices
     * const devices = await prisma.device.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const deviceWithIdOnly = await prisma.device.findMany({ select: { id: true } })
     * 
     */
    findMany<T extends deviceFindManyArgs>(args?: SelectSubset<T, deviceFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$devicePayload<ExtArgs>, T, "findMany">>

    /**
     * Create a Device.
     * @param {deviceCreateArgs} args - Arguments to create a Device.
     * @example
     * // Create one Device
     * const Device = await prisma.device.create({
     *   data: {
     *     // ... data to create a Device
     *   }
     * })
     * 
     */
    create<T extends deviceCreateArgs>(args: SelectSubset<T, deviceCreateArgs<ExtArgs>>): Prisma__deviceClient<$Result.GetResult<Prisma.$devicePayload<ExtArgs>, T, "create">, never, ExtArgs>

    /**
     * Create many Devices.
     * @param {deviceCreateManyArgs} args - Arguments to create many Devices.
     * @example
     * // Create many Devices
     * const device = await prisma.device.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends deviceCreateManyArgs>(args?: SelectSubset<T, deviceCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create many Devices and returns the data saved in the database.
     * @param {deviceCreateManyAndReturnArgs} args - Arguments to create many Devices.
     * @example
     * // Create many Devices
     * const device = await prisma.device.createManyAndReturn({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Create many Devices and only return the `id`
     * const deviceWithIdOnly = await prisma.device.createManyAndReturn({ 
     *   select: { id: true },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    createManyAndReturn<T extends deviceCreateManyAndReturnArgs>(args?: SelectSubset<T, deviceCreateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$devicePayload<ExtArgs>, T, "createManyAndReturn">>

    /**
     * Delete a Device.
     * @param {deviceDeleteArgs} args - Arguments to delete one Device.
     * @example
     * // Delete one Device
     * const Device = await prisma.device.delete({
     *   where: {
     *     // ... filter to delete one Device
     *   }
     * })
     * 
     */
    delete<T extends deviceDeleteArgs>(args: SelectSubset<T, deviceDeleteArgs<ExtArgs>>): Prisma__deviceClient<$Result.GetResult<Prisma.$devicePayload<ExtArgs>, T, "delete">, never, ExtArgs>

    /**
     * Update one Device.
     * @param {deviceUpdateArgs} args - Arguments to update one Device.
     * @example
     * // Update one Device
     * const device = await prisma.device.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends deviceUpdateArgs>(args: SelectSubset<T, deviceUpdateArgs<ExtArgs>>): Prisma__deviceClient<$Result.GetResult<Prisma.$devicePayload<ExtArgs>, T, "update">, never, ExtArgs>

    /**
     * Delete zero or more Devices.
     * @param {deviceDeleteManyArgs} args - Arguments to filter Devices to delete.
     * @example
     * // Delete a few Devices
     * const { count } = await prisma.device.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends deviceDeleteManyArgs>(args?: SelectSubset<T, deviceDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Devices.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {deviceUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many Devices
     * const device = await prisma.device.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends deviceUpdateManyArgs>(args: SelectSubset<T, deviceUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create or update one Device.
     * @param {deviceUpsertArgs} args - Arguments to update or create a Device.
     * @example
     * // Update or create a Device
     * const device = await prisma.device.upsert({
     *   create: {
     *     // ... data to create a Device
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the Device we want to update
     *   }
     * })
     */
    upsert<T extends deviceUpsertArgs>(args: SelectSubset<T, deviceUpsertArgs<ExtArgs>>): Prisma__deviceClient<$Result.GetResult<Prisma.$devicePayload<ExtArgs>, T, "upsert">, never, ExtArgs>


    /**
     * Count the number of Devices.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {deviceCountArgs} args - Arguments to filter Devices to count.
     * @example
     * // Count the number of Devices
     * const count = await prisma.device.count({
     *   where: {
     *     // ... the filter for the Devices we want to count
     *   }
     * })
    **/
    count<T extends deviceCountArgs>(
      args?: Subset<T, deviceCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], DeviceCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a Device.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {DeviceAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends DeviceAggregateArgs>(args: Subset<T, DeviceAggregateArgs>): Prisma.PrismaPromise<GetDeviceAggregateType<T>>

    /**
     * Group by Device.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {deviceGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends deviceGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: deviceGroupByArgs['orderBy'] }
        : { orderBy?: deviceGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, deviceGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetDeviceGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the device model
   */
  readonly fields: deviceFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for device.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__deviceClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    truck<T extends truckDefaultArgs<ExtArgs> = {}>(args?: Subset<T, truckDefaultArgs<ExtArgs>>): Prisma__truckClient<$Result.GetResult<Prisma.$truckPayload<ExtArgs>, T, "findUniqueOrThrow"> | Null, Null, ExtArgs>
    device_status_event<T extends device$device_status_eventArgs<ExtArgs> = {}>(args?: Subset<T, device$device_status_eventArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$device_status_eventPayload<ExtArgs>, T, "findMany"> | Null>
    device_truck_assignment<T extends device$device_truck_assignmentArgs<ExtArgs> = {}>(args?: Subset<T, device$device_truck_assignmentArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$device_truck_assignmentPayload<ExtArgs>, T, "findMany"> | Null>
    gps_position<T extends device$gps_positionArgs<ExtArgs> = {}>(args?: Subset<T, device$gps_positionArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$gps_positionPayload<ExtArgs>, T, "findMany"> | Null>
    hub_temperature_event<T extends device$hub_temperature_eventArgs<ExtArgs> = {}>(args?: Subset<T, device$hub_temperature_eventArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$hub_temperature_eventPayload<ExtArgs>, T, "findMany"> | Null>
    lock_event<T extends device$lock_eventArgs<ExtArgs> = {}>(args?: Subset<T, device$lock_eventArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$lock_eventPayload<ExtArgs>, T, "findMany"> | Null>
    sensor<T extends device$sensorArgs<ExtArgs> = {}>(args?: Subset<T, device$sensorArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$sensorPayload<ExtArgs>, T, "findMany"> | Null>
    tire_pressure_event<T extends device$tire_pressure_eventArgs<ExtArgs> = {}>(args?: Subset<T, device$tire_pressure_eventArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$tire_pressure_eventPayload<ExtArgs>, T, "findMany"> | Null>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the device model
   */ 
  interface deviceFieldRefs {
    readonly id: FieldRef<"device", 'String'>
    readonly truck_id: FieldRef<"device", 'String'>
    readonly sn: FieldRef<"device", 'String'>
    readonly sim_number: FieldRef<"device", 'String'>
    readonly installed_at: FieldRef<"device", 'DateTime'>
    readonly removed_at: FieldRef<"device", 'DateTime'>
    readonly created_by: FieldRef<"device", 'String'>
    readonly updated_by: FieldRef<"device", 'String'>
  }
    

  // Custom InputTypes
  /**
   * device findUnique
   */
  export type deviceFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the device
     */
    select?: deviceSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: deviceInclude<ExtArgs> | null
    /**
     * Filter, which device to fetch.
     */
    where: deviceWhereUniqueInput
  }

  /**
   * device findUniqueOrThrow
   */
  export type deviceFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the device
     */
    select?: deviceSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: deviceInclude<ExtArgs> | null
    /**
     * Filter, which device to fetch.
     */
    where: deviceWhereUniqueInput
  }

  /**
   * device findFirst
   */
  export type deviceFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the device
     */
    select?: deviceSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: deviceInclude<ExtArgs> | null
    /**
     * Filter, which device to fetch.
     */
    where?: deviceWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of devices to fetch.
     */
    orderBy?: deviceOrderByWithRelationInput | deviceOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for devices.
     */
    cursor?: deviceWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` devices from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` devices.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of devices.
     */
    distinct?: DeviceScalarFieldEnum | DeviceScalarFieldEnum[]
  }

  /**
   * device findFirstOrThrow
   */
  export type deviceFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the device
     */
    select?: deviceSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: deviceInclude<ExtArgs> | null
    /**
     * Filter, which device to fetch.
     */
    where?: deviceWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of devices to fetch.
     */
    orderBy?: deviceOrderByWithRelationInput | deviceOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for devices.
     */
    cursor?: deviceWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` devices from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` devices.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of devices.
     */
    distinct?: DeviceScalarFieldEnum | DeviceScalarFieldEnum[]
  }

  /**
   * device findMany
   */
  export type deviceFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the device
     */
    select?: deviceSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: deviceInclude<ExtArgs> | null
    /**
     * Filter, which devices to fetch.
     */
    where?: deviceWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of devices to fetch.
     */
    orderBy?: deviceOrderByWithRelationInput | deviceOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing devices.
     */
    cursor?: deviceWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` devices from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` devices.
     */
    skip?: number
    distinct?: DeviceScalarFieldEnum | DeviceScalarFieldEnum[]
  }

  /**
   * device create
   */
  export type deviceCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the device
     */
    select?: deviceSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: deviceInclude<ExtArgs> | null
    /**
     * The data needed to create a device.
     */
    data: XOR<deviceCreateInput, deviceUncheckedCreateInput>
  }

  /**
   * device createMany
   */
  export type deviceCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many devices.
     */
    data: deviceCreateManyInput | deviceCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * device createManyAndReturn
   */
  export type deviceCreateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the device
     */
    select?: deviceSelectCreateManyAndReturn<ExtArgs> | null
    /**
     * The data used to create many devices.
     */
    data: deviceCreateManyInput | deviceCreateManyInput[]
    skipDuplicates?: boolean
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: deviceIncludeCreateManyAndReturn<ExtArgs> | null
  }

  /**
   * device update
   */
  export type deviceUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the device
     */
    select?: deviceSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: deviceInclude<ExtArgs> | null
    /**
     * The data needed to update a device.
     */
    data: XOR<deviceUpdateInput, deviceUncheckedUpdateInput>
    /**
     * Choose, which device to update.
     */
    where: deviceWhereUniqueInput
  }

  /**
   * device updateMany
   */
  export type deviceUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update devices.
     */
    data: XOR<deviceUpdateManyMutationInput, deviceUncheckedUpdateManyInput>
    /**
     * Filter which devices to update
     */
    where?: deviceWhereInput
  }

  /**
   * device upsert
   */
  export type deviceUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the device
     */
    select?: deviceSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: deviceInclude<ExtArgs> | null
    /**
     * The filter to search for the device to update in case it exists.
     */
    where: deviceWhereUniqueInput
    /**
     * In case the device found by the `where` argument doesn't exist, create a new device with this data.
     */
    create: XOR<deviceCreateInput, deviceUncheckedCreateInput>
    /**
     * In case the device was found with the provided `where` argument, update it with this data.
     */
    update: XOR<deviceUpdateInput, deviceUncheckedUpdateInput>
  }

  /**
   * device delete
   */
  export type deviceDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the device
     */
    select?: deviceSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: deviceInclude<ExtArgs> | null
    /**
     * Filter which device to delete.
     */
    where: deviceWhereUniqueInput
  }

  /**
   * device deleteMany
   */
  export type deviceDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which devices to delete
     */
    where?: deviceWhereInput
  }

  /**
   * device.device_status_event
   */
  export type device$device_status_eventArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the device_status_event
     */
    select?: device_status_eventSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: device_status_eventInclude<ExtArgs> | null
    where?: device_status_eventWhereInput
    orderBy?: device_status_eventOrderByWithRelationInput | device_status_eventOrderByWithRelationInput[]
    cursor?: device_status_eventWhereUniqueInput
    take?: number
    skip?: number
    distinct?: Device_status_eventScalarFieldEnum | Device_status_eventScalarFieldEnum[]
  }

  /**
   * device.device_truck_assignment
   */
  export type device$device_truck_assignmentArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the device_truck_assignment
     */
    select?: device_truck_assignmentSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: device_truck_assignmentInclude<ExtArgs> | null
    where?: device_truck_assignmentWhereInput
    orderBy?: device_truck_assignmentOrderByWithRelationInput | device_truck_assignmentOrderByWithRelationInput[]
    cursor?: device_truck_assignmentWhereUniqueInput
    take?: number
    skip?: number
    distinct?: Device_truck_assignmentScalarFieldEnum | Device_truck_assignmentScalarFieldEnum[]
  }

  /**
   * device.gps_position
   */
  export type device$gps_positionArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the gps_position
     */
    select?: gps_positionSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: gps_positionInclude<ExtArgs> | null
    where?: gps_positionWhereInput
    orderBy?: gps_positionOrderByWithRelationInput | gps_positionOrderByWithRelationInput[]
    cursor?: gps_positionWhereUniqueInput
    take?: number
    skip?: number
    distinct?: Gps_positionScalarFieldEnum | Gps_positionScalarFieldEnum[]
  }

  /**
   * device.hub_temperature_event
   */
  export type device$hub_temperature_eventArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the hub_temperature_event
     */
    select?: hub_temperature_eventSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: hub_temperature_eventInclude<ExtArgs> | null
    where?: hub_temperature_eventWhereInput
    orderBy?: hub_temperature_eventOrderByWithRelationInput | hub_temperature_eventOrderByWithRelationInput[]
    cursor?: hub_temperature_eventWhereUniqueInput
    take?: number
    skip?: number
    distinct?: Hub_temperature_eventScalarFieldEnum | Hub_temperature_eventScalarFieldEnum[]
  }

  /**
   * device.lock_event
   */
  export type device$lock_eventArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the lock_event
     */
    select?: lock_eventSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: lock_eventInclude<ExtArgs> | null
    where?: lock_eventWhereInput
    orderBy?: lock_eventOrderByWithRelationInput | lock_eventOrderByWithRelationInput[]
    cursor?: lock_eventWhereUniqueInput
    take?: number
    skip?: number
    distinct?: Lock_eventScalarFieldEnum | Lock_eventScalarFieldEnum[]
  }

  /**
   * device.sensor
   */
  export type device$sensorArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the sensor
     */
    select?: sensorSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: sensorInclude<ExtArgs> | null
    where?: sensorWhereInput
    orderBy?: sensorOrderByWithRelationInput | sensorOrderByWithRelationInput[]
    cursor?: sensorWhereUniqueInput
    take?: number
    skip?: number
    distinct?: SensorScalarFieldEnum | SensorScalarFieldEnum[]
  }

  /**
   * device.tire_pressure_event
   */
  export type device$tire_pressure_eventArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the tire_pressure_event
     */
    select?: tire_pressure_eventSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: tire_pressure_eventInclude<ExtArgs> | null
    where?: tire_pressure_eventWhereInput
    orderBy?: tire_pressure_eventOrderByWithRelationInput | tire_pressure_eventOrderByWithRelationInput[]
    cursor?: tire_pressure_eventWhereUniqueInput
    take?: number
    skip?: number
    distinct?: Tire_pressure_eventScalarFieldEnum | Tire_pressure_eventScalarFieldEnum[]
  }

  /**
   * device without action
   */
  export type deviceDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the device
     */
    select?: deviceSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: deviceInclude<ExtArgs> | null
  }


  /**
   * Model device_status_event
   */

  export type AggregateDevice_status_event = {
    _count: Device_status_eventCountAggregateOutputType | null
    _avg: Device_status_eventAvgAggregateOutputType | null
    _sum: Device_status_eventSumAggregateOutputType | null
    _min: Device_status_eventMinAggregateOutputType | null
    _max: Device_status_eventMaxAggregateOutputType | null
  }

  export type Device_status_eventAvgAggregateOutputType = {
    host_bat: number | null
    repeater1_bat: number | null
    repeater2_bat: number | null
    lock_state: number | null
  }

  export type Device_status_eventSumAggregateOutputType = {
    host_bat: number | null
    repeater1_bat: number | null
    repeater2_bat: number | null
    lock_state: number | null
  }

  export type Device_status_eventMinAggregateOutputType = {
    id: string | null
    device_id: string | null
    truck_id: string | null
    host_bat: number | null
    repeater1_bat: number | null
    repeater2_bat: number | null
    lock_state: number | null
    reported_at: Date | null
    created_by: string | null
  }

  export type Device_status_eventMaxAggregateOutputType = {
    id: string | null
    device_id: string | null
    truck_id: string | null
    host_bat: number | null
    repeater1_bat: number | null
    repeater2_bat: number | null
    lock_state: number | null
    reported_at: Date | null
    created_by: string | null
  }

  export type Device_status_eventCountAggregateOutputType = {
    id: number
    device_id: number
    truck_id: number
    host_bat: number
    repeater1_bat: number
    repeater2_bat: number
    lock_state: number
    reported_at: number
    created_by: number
    _all: number
  }


  export type Device_status_eventAvgAggregateInputType = {
    host_bat?: true
    repeater1_bat?: true
    repeater2_bat?: true
    lock_state?: true
  }

  export type Device_status_eventSumAggregateInputType = {
    host_bat?: true
    repeater1_bat?: true
    repeater2_bat?: true
    lock_state?: true
  }

  export type Device_status_eventMinAggregateInputType = {
    id?: true
    device_id?: true
    truck_id?: true
    host_bat?: true
    repeater1_bat?: true
    repeater2_bat?: true
    lock_state?: true
    reported_at?: true
    created_by?: true
  }

  export type Device_status_eventMaxAggregateInputType = {
    id?: true
    device_id?: true
    truck_id?: true
    host_bat?: true
    repeater1_bat?: true
    repeater2_bat?: true
    lock_state?: true
    reported_at?: true
    created_by?: true
  }

  export type Device_status_eventCountAggregateInputType = {
    id?: true
    device_id?: true
    truck_id?: true
    host_bat?: true
    repeater1_bat?: true
    repeater2_bat?: true
    lock_state?: true
    reported_at?: true
    created_by?: true
    _all?: true
  }

  export type Device_status_eventAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which device_status_event to aggregate.
     */
    where?: device_status_eventWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of device_status_events to fetch.
     */
    orderBy?: device_status_eventOrderByWithRelationInput | device_status_eventOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: device_status_eventWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` device_status_events from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` device_status_events.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned device_status_events
    **/
    _count?: true | Device_status_eventCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: Device_status_eventAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: Device_status_eventSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: Device_status_eventMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: Device_status_eventMaxAggregateInputType
  }

  export type GetDevice_status_eventAggregateType<T extends Device_status_eventAggregateArgs> = {
        [P in keyof T & keyof AggregateDevice_status_event]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateDevice_status_event[P]>
      : GetScalarType<T[P], AggregateDevice_status_event[P]>
  }




  export type device_status_eventGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: device_status_eventWhereInput
    orderBy?: device_status_eventOrderByWithAggregationInput | device_status_eventOrderByWithAggregationInput[]
    by: Device_status_eventScalarFieldEnum[] | Device_status_eventScalarFieldEnum
    having?: device_status_eventScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: Device_status_eventCountAggregateInputType | true
    _avg?: Device_status_eventAvgAggregateInputType
    _sum?: Device_status_eventSumAggregateInputType
    _min?: Device_status_eventMinAggregateInputType
    _max?: Device_status_eventMaxAggregateInputType
  }

  export type Device_status_eventGroupByOutputType = {
    id: string
    device_id: string
    truck_id: string
    host_bat: number | null
    repeater1_bat: number | null
    repeater2_bat: number | null
    lock_state: number | null
    reported_at: Date
    created_by: string | null
    _count: Device_status_eventCountAggregateOutputType | null
    _avg: Device_status_eventAvgAggregateOutputType | null
    _sum: Device_status_eventSumAggregateOutputType | null
    _min: Device_status_eventMinAggregateOutputType | null
    _max: Device_status_eventMaxAggregateOutputType | null
  }

  type GetDevice_status_eventGroupByPayload<T extends device_status_eventGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<Device_status_eventGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof Device_status_eventGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], Device_status_eventGroupByOutputType[P]>
            : GetScalarType<T[P], Device_status_eventGroupByOutputType[P]>
        }
      >
    >


  export type device_status_eventSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    device_id?: boolean
    truck_id?: boolean
    host_bat?: boolean
    repeater1_bat?: boolean
    repeater2_bat?: boolean
    lock_state?: boolean
    reported_at?: boolean
    created_by?: boolean
    device?: boolean | deviceDefaultArgs<ExtArgs>
    truck?: boolean | truckDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["device_status_event"]>

  export type device_status_eventSelectCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    device_id?: boolean
    truck_id?: boolean
    host_bat?: boolean
    repeater1_bat?: boolean
    repeater2_bat?: boolean
    lock_state?: boolean
    reported_at?: boolean
    created_by?: boolean
    device?: boolean | deviceDefaultArgs<ExtArgs>
    truck?: boolean | truckDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["device_status_event"]>

  export type device_status_eventSelectScalar = {
    id?: boolean
    device_id?: boolean
    truck_id?: boolean
    host_bat?: boolean
    repeater1_bat?: boolean
    repeater2_bat?: boolean
    lock_state?: boolean
    reported_at?: boolean
    created_by?: boolean
  }

  export type device_status_eventInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    device?: boolean | deviceDefaultArgs<ExtArgs>
    truck?: boolean | truckDefaultArgs<ExtArgs>
  }
  export type device_status_eventIncludeCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    device?: boolean | deviceDefaultArgs<ExtArgs>
    truck?: boolean | truckDefaultArgs<ExtArgs>
  }

  export type $device_status_eventPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "device_status_event"
    objects: {
      device: Prisma.$devicePayload<ExtArgs>
      truck: Prisma.$truckPayload<ExtArgs>
    }
    scalars: $Extensions.GetPayloadResult<{
      id: string
      device_id: string
      truck_id: string
      host_bat: number | null
      repeater1_bat: number | null
      repeater2_bat: number | null
      lock_state: number | null
      reported_at: Date
      created_by: string | null
    }, ExtArgs["result"]["device_status_event"]>
    composites: {}
  }

  type device_status_eventGetPayload<S extends boolean | null | undefined | device_status_eventDefaultArgs> = $Result.GetResult<Prisma.$device_status_eventPayload, S>

  type device_status_eventCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = 
    Omit<device_status_eventFindManyArgs, 'select' | 'include' | 'distinct'> & {
      select?: Device_status_eventCountAggregateInputType | true
    }

  export interface device_status_eventDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['device_status_event'], meta: { name: 'device_status_event' } }
    /**
     * Find zero or one Device_status_event that matches the filter.
     * @param {device_status_eventFindUniqueArgs} args - Arguments to find a Device_status_event
     * @example
     * // Get one Device_status_event
     * const device_status_event = await prisma.device_status_event.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends device_status_eventFindUniqueArgs>(args: SelectSubset<T, device_status_eventFindUniqueArgs<ExtArgs>>): Prisma__device_status_eventClient<$Result.GetResult<Prisma.$device_status_eventPayload<ExtArgs>, T, "findUnique"> | null, null, ExtArgs>

    /**
     * Find one Device_status_event that matches the filter or throw an error with `error.code='P2025'` 
     * if no matches were found.
     * @param {device_status_eventFindUniqueOrThrowArgs} args - Arguments to find a Device_status_event
     * @example
     * // Get one Device_status_event
     * const device_status_event = await prisma.device_status_event.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends device_status_eventFindUniqueOrThrowArgs>(args: SelectSubset<T, device_status_eventFindUniqueOrThrowArgs<ExtArgs>>): Prisma__device_status_eventClient<$Result.GetResult<Prisma.$device_status_eventPayload<ExtArgs>, T, "findUniqueOrThrow">, never, ExtArgs>

    /**
     * Find the first Device_status_event that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {device_status_eventFindFirstArgs} args - Arguments to find a Device_status_event
     * @example
     * // Get one Device_status_event
     * const device_status_event = await prisma.device_status_event.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends device_status_eventFindFirstArgs>(args?: SelectSubset<T, device_status_eventFindFirstArgs<ExtArgs>>): Prisma__device_status_eventClient<$Result.GetResult<Prisma.$device_status_eventPayload<ExtArgs>, T, "findFirst"> | null, null, ExtArgs>

    /**
     * Find the first Device_status_event that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {device_status_eventFindFirstOrThrowArgs} args - Arguments to find a Device_status_event
     * @example
     * // Get one Device_status_event
     * const device_status_event = await prisma.device_status_event.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends device_status_eventFindFirstOrThrowArgs>(args?: SelectSubset<T, device_status_eventFindFirstOrThrowArgs<ExtArgs>>): Prisma__device_status_eventClient<$Result.GetResult<Prisma.$device_status_eventPayload<ExtArgs>, T, "findFirstOrThrow">, never, ExtArgs>

    /**
     * Find zero or more Device_status_events that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {device_status_eventFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all Device_status_events
     * const device_status_events = await prisma.device_status_event.findMany()
     * 
     * // Get first 10 Device_status_events
     * const device_status_events = await prisma.device_status_event.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const device_status_eventWithIdOnly = await prisma.device_status_event.findMany({ select: { id: true } })
     * 
     */
    findMany<T extends device_status_eventFindManyArgs>(args?: SelectSubset<T, device_status_eventFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$device_status_eventPayload<ExtArgs>, T, "findMany">>

    /**
     * Create a Device_status_event.
     * @param {device_status_eventCreateArgs} args - Arguments to create a Device_status_event.
     * @example
     * // Create one Device_status_event
     * const Device_status_event = await prisma.device_status_event.create({
     *   data: {
     *     // ... data to create a Device_status_event
     *   }
     * })
     * 
     */
    create<T extends device_status_eventCreateArgs>(args: SelectSubset<T, device_status_eventCreateArgs<ExtArgs>>): Prisma__device_status_eventClient<$Result.GetResult<Prisma.$device_status_eventPayload<ExtArgs>, T, "create">, never, ExtArgs>

    /**
     * Create many Device_status_events.
     * @param {device_status_eventCreateManyArgs} args - Arguments to create many Device_status_events.
     * @example
     * // Create many Device_status_events
     * const device_status_event = await prisma.device_status_event.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends device_status_eventCreateManyArgs>(args?: SelectSubset<T, device_status_eventCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create many Device_status_events and returns the data saved in the database.
     * @param {device_status_eventCreateManyAndReturnArgs} args - Arguments to create many Device_status_events.
     * @example
     * // Create many Device_status_events
     * const device_status_event = await prisma.device_status_event.createManyAndReturn({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Create many Device_status_events and only return the `id`
     * const device_status_eventWithIdOnly = await prisma.device_status_event.createManyAndReturn({ 
     *   select: { id: true },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    createManyAndReturn<T extends device_status_eventCreateManyAndReturnArgs>(args?: SelectSubset<T, device_status_eventCreateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$device_status_eventPayload<ExtArgs>, T, "createManyAndReturn">>

    /**
     * Delete a Device_status_event.
     * @param {device_status_eventDeleteArgs} args - Arguments to delete one Device_status_event.
     * @example
     * // Delete one Device_status_event
     * const Device_status_event = await prisma.device_status_event.delete({
     *   where: {
     *     // ... filter to delete one Device_status_event
     *   }
     * })
     * 
     */
    delete<T extends device_status_eventDeleteArgs>(args: SelectSubset<T, device_status_eventDeleteArgs<ExtArgs>>): Prisma__device_status_eventClient<$Result.GetResult<Prisma.$device_status_eventPayload<ExtArgs>, T, "delete">, never, ExtArgs>

    /**
     * Update one Device_status_event.
     * @param {device_status_eventUpdateArgs} args - Arguments to update one Device_status_event.
     * @example
     * // Update one Device_status_event
     * const device_status_event = await prisma.device_status_event.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends device_status_eventUpdateArgs>(args: SelectSubset<T, device_status_eventUpdateArgs<ExtArgs>>): Prisma__device_status_eventClient<$Result.GetResult<Prisma.$device_status_eventPayload<ExtArgs>, T, "update">, never, ExtArgs>

    /**
     * Delete zero or more Device_status_events.
     * @param {device_status_eventDeleteManyArgs} args - Arguments to filter Device_status_events to delete.
     * @example
     * // Delete a few Device_status_events
     * const { count } = await prisma.device_status_event.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends device_status_eventDeleteManyArgs>(args?: SelectSubset<T, device_status_eventDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Device_status_events.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {device_status_eventUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many Device_status_events
     * const device_status_event = await prisma.device_status_event.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends device_status_eventUpdateManyArgs>(args: SelectSubset<T, device_status_eventUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create or update one Device_status_event.
     * @param {device_status_eventUpsertArgs} args - Arguments to update or create a Device_status_event.
     * @example
     * // Update or create a Device_status_event
     * const device_status_event = await prisma.device_status_event.upsert({
     *   create: {
     *     // ... data to create a Device_status_event
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the Device_status_event we want to update
     *   }
     * })
     */
    upsert<T extends device_status_eventUpsertArgs>(args: SelectSubset<T, device_status_eventUpsertArgs<ExtArgs>>): Prisma__device_status_eventClient<$Result.GetResult<Prisma.$device_status_eventPayload<ExtArgs>, T, "upsert">, never, ExtArgs>


    /**
     * Count the number of Device_status_events.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {device_status_eventCountArgs} args - Arguments to filter Device_status_events to count.
     * @example
     * // Count the number of Device_status_events
     * const count = await prisma.device_status_event.count({
     *   where: {
     *     // ... the filter for the Device_status_events we want to count
     *   }
     * })
    **/
    count<T extends device_status_eventCountArgs>(
      args?: Subset<T, device_status_eventCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], Device_status_eventCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a Device_status_event.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {Device_status_eventAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends Device_status_eventAggregateArgs>(args: Subset<T, Device_status_eventAggregateArgs>): Prisma.PrismaPromise<GetDevice_status_eventAggregateType<T>>

    /**
     * Group by Device_status_event.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {device_status_eventGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends device_status_eventGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: device_status_eventGroupByArgs['orderBy'] }
        : { orderBy?: device_status_eventGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, device_status_eventGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetDevice_status_eventGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the device_status_event model
   */
  readonly fields: device_status_eventFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for device_status_event.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__device_status_eventClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    device<T extends deviceDefaultArgs<ExtArgs> = {}>(args?: Subset<T, deviceDefaultArgs<ExtArgs>>): Prisma__deviceClient<$Result.GetResult<Prisma.$devicePayload<ExtArgs>, T, "findUniqueOrThrow"> | Null, Null, ExtArgs>
    truck<T extends truckDefaultArgs<ExtArgs> = {}>(args?: Subset<T, truckDefaultArgs<ExtArgs>>): Prisma__truckClient<$Result.GetResult<Prisma.$truckPayload<ExtArgs>, T, "findUniqueOrThrow"> | Null, Null, ExtArgs>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the device_status_event model
   */ 
  interface device_status_eventFieldRefs {
    readonly id: FieldRef<"device_status_event", 'String'>
    readonly device_id: FieldRef<"device_status_event", 'String'>
    readonly truck_id: FieldRef<"device_status_event", 'String'>
    readonly host_bat: FieldRef<"device_status_event", 'Int'>
    readonly repeater1_bat: FieldRef<"device_status_event", 'Int'>
    readonly repeater2_bat: FieldRef<"device_status_event", 'Int'>
    readonly lock_state: FieldRef<"device_status_event", 'Int'>
    readonly reported_at: FieldRef<"device_status_event", 'DateTime'>
    readonly created_by: FieldRef<"device_status_event", 'String'>
  }
    

  // Custom InputTypes
  /**
   * device_status_event findUnique
   */
  export type device_status_eventFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the device_status_event
     */
    select?: device_status_eventSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: device_status_eventInclude<ExtArgs> | null
    /**
     * Filter, which device_status_event to fetch.
     */
    where: device_status_eventWhereUniqueInput
  }

  /**
   * device_status_event findUniqueOrThrow
   */
  export type device_status_eventFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the device_status_event
     */
    select?: device_status_eventSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: device_status_eventInclude<ExtArgs> | null
    /**
     * Filter, which device_status_event to fetch.
     */
    where: device_status_eventWhereUniqueInput
  }

  /**
   * device_status_event findFirst
   */
  export type device_status_eventFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the device_status_event
     */
    select?: device_status_eventSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: device_status_eventInclude<ExtArgs> | null
    /**
     * Filter, which device_status_event to fetch.
     */
    where?: device_status_eventWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of device_status_events to fetch.
     */
    orderBy?: device_status_eventOrderByWithRelationInput | device_status_eventOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for device_status_events.
     */
    cursor?: device_status_eventWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` device_status_events from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` device_status_events.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of device_status_events.
     */
    distinct?: Device_status_eventScalarFieldEnum | Device_status_eventScalarFieldEnum[]
  }

  /**
   * device_status_event findFirstOrThrow
   */
  export type device_status_eventFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the device_status_event
     */
    select?: device_status_eventSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: device_status_eventInclude<ExtArgs> | null
    /**
     * Filter, which device_status_event to fetch.
     */
    where?: device_status_eventWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of device_status_events to fetch.
     */
    orderBy?: device_status_eventOrderByWithRelationInput | device_status_eventOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for device_status_events.
     */
    cursor?: device_status_eventWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` device_status_events from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` device_status_events.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of device_status_events.
     */
    distinct?: Device_status_eventScalarFieldEnum | Device_status_eventScalarFieldEnum[]
  }

  /**
   * device_status_event findMany
   */
  export type device_status_eventFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the device_status_event
     */
    select?: device_status_eventSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: device_status_eventInclude<ExtArgs> | null
    /**
     * Filter, which device_status_events to fetch.
     */
    where?: device_status_eventWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of device_status_events to fetch.
     */
    orderBy?: device_status_eventOrderByWithRelationInput | device_status_eventOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing device_status_events.
     */
    cursor?: device_status_eventWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` device_status_events from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` device_status_events.
     */
    skip?: number
    distinct?: Device_status_eventScalarFieldEnum | Device_status_eventScalarFieldEnum[]
  }

  /**
   * device_status_event create
   */
  export type device_status_eventCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the device_status_event
     */
    select?: device_status_eventSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: device_status_eventInclude<ExtArgs> | null
    /**
     * The data needed to create a device_status_event.
     */
    data: XOR<device_status_eventCreateInput, device_status_eventUncheckedCreateInput>
  }

  /**
   * device_status_event createMany
   */
  export type device_status_eventCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many device_status_events.
     */
    data: device_status_eventCreateManyInput | device_status_eventCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * device_status_event createManyAndReturn
   */
  export type device_status_eventCreateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the device_status_event
     */
    select?: device_status_eventSelectCreateManyAndReturn<ExtArgs> | null
    /**
     * The data used to create many device_status_events.
     */
    data: device_status_eventCreateManyInput | device_status_eventCreateManyInput[]
    skipDuplicates?: boolean
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: device_status_eventIncludeCreateManyAndReturn<ExtArgs> | null
  }

  /**
   * device_status_event update
   */
  export type device_status_eventUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the device_status_event
     */
    select?: device_status_eventSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: device_status_eventInclude<ExtArgs> | null
    /**
     * The data needed to update a device_status_event.
     */
    data: XOR<device_status_eventUpdateInput, device_status_eventUncheckedUpdateInput>
    /**
     * Choose, which device_status_event to update.
     */
    where: device_status_eventWhereUniqueInput
  }

  /**
   * device_status_event updateMany
   */
  export type device_status_eventUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update device_status_events.
     */
    data: XOR<device_status_eventUpdateManyMutationInput, device_status_eventUncheckedUpdateManyInput>
    /**
     * Filter which device_status_events to update
     */
    where?: device_status_eventWhereInput
  }

  /**
   * device_status_event upsert
   */
  export type device_status_eventUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the device_status_event
     */
    select?: device_status_eventSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: device_status_eventInclude<ExtArgs> | null
    /**
     * The filter to search for the device_status_event to update in case it exists.
     */
    where: device_status_eventWhereUniqueInput
    /**
     * In case the device_status_event found by the `where` argument doesn't exist, create a new device_status_event with this data.
     */
    create: XOR<device_status_eventCreateInput, device_status_eventUncheckedCreateInput>
    /**
     * In case the device_status_event was found with the provided `where` argument, update it with this data.
     */
    update: XOR<device_status_eventUpdateInput, device_status_eventUncheckedUpdateInput>
  }

  /**
   * device_status_event delete
   */
  export type device_status_eventDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the device_status_event
     */
    select?: device_status_eventSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: device_status_eventInclude<ExtArgs> | null
    /**
     * Filter which device_status_event to delete.
     */
    where: device_status_eventWhereUniqueInput
  }

  /**
   * device_status_event deleteMany
   */
  export type device_status_eventDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which device_status_events to delete
     */
    where?: device_status_eventWhereInput
  }

  /**
   * device_status_event without action
   */
  export type device_status_eventDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the device_status_event
     */
    select?: device_status_eventSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: device_status_eventInclude<ExtArgs> | null
  }


  /**
   * Model device_truck_assignment
   */

  export type AggregateDevice_truck_assignment = {
    _count: Device_truck_assignmentCountAggregateOutputType | null
    _min: Device_truck_assignmentMinAggregateOutputType | null
    _max: Device_truck_assignmentMaxAggregateOutputType | null
  }

  export type Device_truck_assignmentMinAggregateOutputType = {
    id: string | null
    device_id: string | null
    truck_id: string | null
    assigned_at: Date | null
    assigned_by: string | null
    removed_at: Date | null
    removed_by: string | null
    is_active: boolean | null
  }

  export type Device_truck_assignmentMaxAggregateOutputType = {
    id: string | null
    device_id: string | null
    truck_id: string | null
    assigned_at: Date | null
    assigned_by: string | null
    removed_at: Date | null
    removed_by: string | null
    is_active: boolean | null
  }

  export type Device_truck_assignmentCountAggregateOutputType = {
    id: number
    device_id: number
    truck_id: number
    assigned_at: number
    assigned_by: number
    removed_at: number
    removed_by: number
    is_active: number
    _all: number
  }


  export type Device_truck_assignmentMinAggregateInputType = {
    id?: true
    device_id?: true
    truck_id?: true
    assigned_at?: true
    assigned_by?: true
    removed_at?: true
    removed_by?: true
    is_active?: true
  }

  export type Device_truck_assignmentMaxAggregateInputType = {
    id?: true
    device_id?: true
    truck_id?: true
    assigned_at?: true
    assigned_by?: true
    removed_at?: true
    removed_by?: true
    is_active?: true
  }

  export type Device_truck_assignmentCountAggregateInputType = {
    id?: true
    device_id?: true
    truck_id?: true
    assigned_at?: true
    assigned_by?: true
    removed_at?: true
    removed_by?: true
    is_active?: true
    _all?: true
  }

  export type Device_truck_assignmentAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which device_truck_assignment to aggregate.
     */
    where?: device_truck_assignmentWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of device_truck_assignments to fetch.
     */
    orderBy?: device_truck_assignmentOrderByWithRelationInput | device_truck_assignmentOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: device_truck_assignmentWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` device_truck_assignments from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` device_truck_assignments.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned device_truck_assignments
    **/
    _count?: true | Device_truck_assignmentCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: Device_truck_assignmentMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: Device_truck_assignmentMaxAggregateInputType
  }

  export type GetDevice_truck_assignmentAggregateType<T extends Device_truck_assignmentAggregateArgs> = {
        [P in keyof T & keyof AggregateDevice_truck_assignment]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateDevice_truck_assignment[P]>
      : GetScalarType<T[P], AggregateDevice_truck_assignment[P]>
  }




  export type device_truck_assignmentGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: device_truck_assignmentWhereInput
    orderBy?: device_truck_assignmentOrderByWithAggregationInput | device_truck_assignmentOrderByWithAggregationInput[]
    by: Device_truck_assignmentScalarFieldEnum[] | Device_truck_assignmentScalarFieldEnum
    having?: device_truck_assignmentScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: Device_truck_assignmentCountAggregateInputType | true
    _min?: Device_truck_assignmentMinAggregateInputType
    _max?: Device_truck_assignmentMaxAggregateInputType
  }

  export type Device_truck_assignmentGroupByOutputType = {
    id: string
    device_id: string | null
    truck_id: string | null
    assigned_at: Date
    assigned_by: string | null
    removed_at: Date | null
    removed_by: string | null
    is_active: boolean | null
    _count: Device_truck_assignmentCountAggregateOutputType | null
    _min: Device_truck_assignmentMinAggregateOutputType | null
    _max: Device_truck_assignmentMaxAggregateOutputType | null
  }

  type GetDevice_truck_assignmentGroupByPayload<T extends device_truck_assignmentGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<Device_truck_assignmentGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof Device_truck_assignmentGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], Device_truck_assignmentGroupByOutputType[P]>
            : GetScalarType<T[P], Device_truck_assignmentGroupByOutputType[P]>
        }
      >
    >


  export type device_truck_assignmentSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    device_id?: boolean
    truck_id?: boolean
    assigned_at?: boolean
    assigned_by?: boolean
    removed_at?: boolean
    removed_by?: boolean
    is_active?: boolean
    users_device_truck_assignment_assigned_byTousers?: boolean | device_truck_assignment$users_device_truck_assignment_assigned_byTousersArgs<ExtArgs>
    device?: boolean | device_truck_assignment$deviceArgs<ExtArgs>
    users_device_truck_assignment_removed_byTousers?: boolean | device_truck_assignment$users_device_truck_assignment_removed_byTousersArgs<ExtArgs>
    truck?: boolean | device_truck_assignment$truckArgs<ExtArgs>
  }, ExtArgs["result"]["device_truck_assignment"]>

  export type device_truck_assignmentSelectCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    device_id?: boolean
    truck_id?: boolean
    assigned_at?: boolean
    assigned_by?: boolean
    removed_at?: boolean
    removed_by?: boolean
    is_active?: boolean
    users_device_truck_assignment_assigned_byTousers?: boolean | device_truck_assignment$users_device_truck_assignment_assigned_byTousersArgs<ExtArgs>
    device?: boolean | device_truck_assignment$deviceArgs<ExtArgs>
    users_device_truck_assignment_removed_byTousers?: boolean | device_truck_assignment$users_device_truck_assignment_removed_byTousersArgs<ExtArgs>
    truck?: boolean | device_truck_assignment$truckArgs<ExtArgs>
  }, ExtArgs["result"]["device_truck_assignment"]>

  export type device_truck_assignmentSelectScalar = {
    id?: boolean
    device_id?: boolean
    truck_id?: boolean
    assigned_at?: boolean
    assigned_by?: boolean
    removed_at?: boolean
    removed_by?: boolean
    is_active?: boolean
  }

  export type device_truck_assignmentInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    users_device_truck_assignment_assigned_byTousers?: boolean | device_truck_assignment$users_device_truck_assignment_assigned_byTousersArgs<ExtArgs>
    device?: boolean | device_truck_assignment$deviceArgs<ExtArgs>
    users_device_truck_assignment_removed_byTousers?: boolean | device_truck_assignment$users_device_truck_assignment_removed_byTousersArgs<ExtArgs>
    truck?: boolean | device_truck_assignment$truckArgs<ExtArgs>
  }
  export type device_truck_assignmentIncludeCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    users_device_truck_assignment_assigned_byTousers?: boolean | device_truck_assignment$users_device_truck_assignment_assigned_byTousersArgs<ExtArgs>
    device?: boolean | device_truck_assignment$deviceArgs<ExtArgs>
    users_device_truck_assignment_removed_byTousers?: boolean | device_truck_assignment$users_device_truck_assignment_removed_byTousersArgs<ExtArgs>
    truck?: boolean | device_truck_assignment$truckArgs<ExtArgs>
  }

  export type $device_truck_assignmentPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "device_truck_assignment"
    objects: {
      users_device_truck_assignment_assigned_byTousers: Prisma.$usersPayload<ExtArgs> | null
      device: Prisma.$devicePayload<ExtArgs> | null
      users_device_truck_assignment_removed_byTousers: Prisma.$usersPayload<ExtArgs> | null
      truck: Prisma.$truckPayload<ExtArgs> | null
    }
    scalars: $Extensions.GetPayloadResult<{
      id: string
      device_id: string | null
      truck_id: string | null
      assigned_at: Date
      assigned_by: string | null
      removed_at: Date | null
      removed_by: string | null
      is_active: boolean | null
    }, ExtArgs["result"]["device_truck_assignment"]>
    composites: {}
  }

  type device_truck_assignmentGetPayload<S extends boolean | null | undefined | device_truck_assignmentDefaultArgs> = $Result.GetResult<Prisma.$device_truck_assignmentPayload, S>

  type device_truck_assignmentCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = 
    Omit<device_truck_assignmentFindManyArgs, 'select' | 'include' | 'distinct'> & {
      select?: Device_truck_assignmentCountAggregateInputType | true
    }

  export interface device_truck_assignmentDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['device_truck_assignment'], meta: { name: 'device_truck_assignment' } }
    /**
     * Find zero or one Device_truck_assignment that matches the filter.
     * @param {device_truck_assignmentFindUniqueArgs} args - Arguments to find a Device_truck_assignment
     * @example
     * // Get one Device_truck_assignment
     * const device_truck_assignment = await prisma.device_truck_assignment.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends device_truck_assignmentFindUniqueArgs>(args: SelectSubset<T, device_truck_assignmentFindUniqueArgs<ExtArgs>>): Prisma__device_truck_assignmentClient<$Result.GetResult<Prisma.$device_truck_assignmentPayload<ExtArgs>, T, "findUnique"> | null, null, ExtArgs>

    /**
     * Find one Device_truck_assignment that matches the filter or throw an error with `error.code='P2025'` 
     * if no matches were found.
     * @param {device_truck_assignmentFindUniqueOrThrowArgs} args - Arguments to find a Device_truck_assignment
     * @example
     * // Get one Device_truck_assignment
     * const device_truck_assignment = await prisma.device_truck_assignment.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends device_truck_assignmentFindUniqueOrThrowArgs>(args: SelectSubset<T, device_truck_assignmentFindUniqueOrThrowArgs<ExtArgs>>): Prisma__device_truck_assignmentClient<$Result.GetResult<Prisma.$device_truck_assignmentPayload<ExtArgs>, T, "findUniqueOrThrow">, never, ExtArgs>

    /**
     * Find the first Device_truck_assignment that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {device_truck_assignmentFindFirstArgs} args - Arguments to find a Device_truck_assignment
     * @example
     * // Get one Device_truck_assignment
     * const device_truck_assignment = await prisma.device_truck_assignment.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends device_truck_assignmentFindFirstArgs>(args?: SelectSubset<T, device_truck_assignmentFindFirstArgs<ExtArgs>>): Prisma__device_truck_assignmentClient<$Result.GetResult<Prisma.$device_truck_assignmentPayload<ExtArgs>, T, "findFirst"> | null, null, ExtArgs>

    /**
     * Find the first Device_truck_assignment that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {device_truck_assignmentFindFirstOrThrowArgs} args - Arguments to find a Device_truck_assignment
     * @example
     * // Get one Device_truck_assignment
     * const device_truck_assignment = await prisma.device_truck_assignment.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends device_truck_assignmentFindFirstOrThrowArgs>(args?: SelectSubset<T, device_truck_assignmentFindFirstOrThrowArgs<ExtArgs>>): Prisma__device_truck_assignmentClient<$Result.GetResult<Prisma.$device_truck_assignmentPayload<ExtArgs>, T, "findFirstOrThrow">, never, ExtArgs>

    /**
     * Find zero or more Device_truck_assignments that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {device_truck_assignmentFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all Device_truck_assignments
     * const device_truck_assignments = await prisma.device_truck_assignment.findMany()
     * 
     * // Get first 10 Device_truck_assignments
     * const device_truck_assignments = await prisma.device_truck_assignment.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const device_truck_assignmentWithIdOnly = await prisma.device_truck_assignment.findMany({ select: { id: true } })
     * 
     */
    findMany<T extends device_truck_assignmentFindManyArgs>(args?: SelectSubset<T, device_truck_assignmentFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$device_truck_assignmentPayload<ExtArgs>, T, "findMany">>

    /**
     * Create a Device_truck_assignment.
     * @param {device_truck_assignmentCreateArgs} args - Arguments to create a Device_truck_assignment.
     * @example
     * // Create one Device_truck_assignment
     * const Device_truck_assignment = await prisma.device_truck_assignment.create({
     *   data: {
     *     // ... data to create a Device_truck_assignment
     *   }
     * })
     * 
     */
    create<T extends device_truck_assignmentCreateArgs>(args: SelectSubset<T, device_truck_assignmentCreateArgs<ExtArgs>>): Prisma__device_truck_assignmentClient<$Result.GetResult<Prisma.$device_truck_assignmentPayload<ExtArgs>, T, "create">, never, ExtArgs>

    /**
     * Create many Device_truck_assignments.
     * @param {device_truck_assignmentCreateManyArgs} args - Arguments to create many Device_truck_assignments.
     * @example
     * // Create many Device_truck_assignments
     * const device_truck_assignment = await prisma.device_truck_assignment.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends device_truck_assignmentCreateManyArgs>(args?: SelectSubset<T, device_truck_assignmentCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create many Device_truck_assignments and returns the data saved in the database.
     * @param {device_truck_assignmentCreateManyAndReturnArgs} args - Arguments to create many Device_truck_assignments.
     * @example
     * // Create many Device_truck_assignments
     * const device_truck_assignment = await prisma.device_truck_assignment.createManyAndReturn({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Create many Device_truck_assignments and only return the `id`
     * const device_truck_assignmentWithIdOnly = await prisma.device_truck_assignment.createManyAndReturn({ 
     *   select: { id: true },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    createManyAndReturn<T extends device_truck_assignmentCreateManyAndReturnArgs>(args?: SelectSubset<T, device_truck_assignmentCreateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$device_truck_assignmentPayload<ExtArgs>, T, "createManyAndReturn">>

    /**
     * Delete a Device_truck_assignment.
     * @param {device_truck_assignmentDeleteArgs} args - Arguments to delete one Device_truck_assignment.
     * @example
     * // Delete one Device_truck_assignment
     * const Device_truck_assignment = await prisma.device_truck_assignment.delete({
     *   where: {
     *     // ... filter to delete one Device_truck_assignment
     *   }
     * })
     * 
     */
    delete<T extends device_truck_assignmentDeleteArgs>(args: SelectSubset<T, device_truck_assignmentDeleteArgs<ExtArgs>>): Prisma__device_truck_assignmentClient<$Result.GetResult<Prisma.$device_truck_assignmentPayload<ExtArgs>, T, "delete">, never, ExtArgs>

    /**
     * Update one Device_truck_assignment.
     * @param {device_truck_assignmentUpdateArgs} args - Arguments to update one Device_truck_assignment.
     * @example
     * // Update one Device_truck_assignment
     * const device_truck_assignment = await prisma.device_truck_assignment.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends device_truck_assignmentUpdateArgs>(args: SelectSubset<T, device_truck_assignmentUpdateArgs<ExtArgs>>): Prisma__device_truck_assignmentClient<$Result.GetResult<Prisma.$device_truck_assignmentPayload<ExtArgs>, T, "update">, never, ExtArgs>

    /**
     * Delete zero or more Device_truck_assignments.
     * @param {device_truck_assignmentDeleteManyArgs} args - Arguments to filter Device_truck_assignments to delete.
     * @example
     * // Delete a few Device_truck_assignments
     * const { count } = await prisma.device_truck_assignment.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends device_truck_assignmentDeleteManyArgs>(args?: SelectSubset<T, device_truck_assignmentDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Device_truck_assignments.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {device_truck_assignmentUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many Device_truck_assignments
     * const device_truck_assignment = await prisma.device_truck_assignment.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends device_truck_assignmentUpdateManyArgs>(args: SelectSubset<T, device_truck_assignmentUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create or update one Device_truck_assignment.
     * @param {device_truck_assignmentUpsertArgs} args - Arguments to update or create a Device_truck_assignment.
     * @example
     * // Update or create a Device_truck_assignment
     * const device_truck_assignment = await prisma.device_truck_assignment.upsert({
     *   create: {
     *     // ... data to create a Device_truck_assignment
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the Device_truck_assignment we want to update
     *   }
     * })
     */
    upsert<T extends device_truck_assignmentUpsertArgs>(args: SelectSubset<T, device_truck_assignmentUpsertArgs<ExtArgs>>): Prisma__device_truck_assignmentClient<$Result.GetResult<Prisma.$device_truck_assignmentPayload<ExtArgs>, T, "upsert">, never, ExtArgs>


    /**
     * Count the number of Device_truck_assignments.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {device_truck_assignmentCountArgs} args - Arguments to filter Device_truck_assignments to count.
     * @example
     * // Count the number of Device_truck_assignments
     * const count = await prisma.device_truck_assignment.count({
     *   where: {
     *     // ... the filter for the Device_truck_assignments we want to count
     *   }
     * })
    **/
    count<T extends device_truck_assignmentCountArgs>(
      args?: Subset<T, device_truck_assignmentCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], Device_truck_assignmentCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a Device_truck_assignment.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {Device_truck_assignmentAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends Device_truck_assignmentAggregateArgs>(args: Subset<T, Device_truck_assignmentAggregateArgs>): Prisma.PrismaPromise<GetDevice_truck_assignmentAggregateType<T>>

    /**
     * Group by Device_truck_assignment.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {device_truck_assignmentGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends device_truck_assignmentGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: device_truck_assignmentGroupByArgs['orderBy'] }
        : { orderBy?: device_truck_assignmentGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, device_truck_assignmentGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetDevice_truck_assignmentGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the device_truck_assignment model
   */
  readonly fields: device_truck_assignmentFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for device_truck_assignment.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__device_truck_assignmentClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    users_device_truck_assignment_assigned_byTousers<T extends device_truck_assignment$users_device_truck_assignment_assigned_byTousersArgs<ExtArgs> = {}>(args?: Subset<T, device_truck_assignment$users_device_truck_assignment_assigned_byTousersArgs<ExtArgs>>): Prisma__usersClient<$Result.GetResult<Prisma.$usersPayload<ExtArgs>, T, "findUniqueOrThrow"> | null, null, ExtArgs>
    device<T extends device_truck_assignment$deviceArgs<ExtArgs> = {}>(args?: Subset<T, device_truck_assignment$deviceArgs<ExtArgs>>): Prisma__deviceClient<$Result.GetResult<Prisma.$devicePayload<ExtArgs>, T, "findUniqueOrThrow"> | null, null, ExtArgs>
    users_device_truck_assignment_removed_byTousers<T extends device_truck_assignment$users_device_truck_assignment_removed_byTousersArgs<ExtArgs> = {}>(args?: Subset<T, device_truck_assignment$users_device_truck_assignment_removed_byTousersArgs<ExtArgs>>): Prisma__usersClient<$Result.GetResult<Prisma.$usersPayload<ExtArgs>, T, "findUniqueOrThrow"> | null, null, ExtArgs>
    truck<T extends device_truck_assignment$truckArgs<ExtArgs> = {}>(args?: Subset<T, device_truck_assignment$truckArgs<ExtArgs>>): Prisma__truckClient<$Result.GetResult<Prisma.$truckPayload<ExtArgs>, T, "findUniqueOrThrow"> | null, null, ExtArgs>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the device_truck_assignment model
   */ 
  interface device_truck_assignmentFieldRefs {
    readonly id: FieldRef<"device_truck_assignment", 'String'>
    readonly device_id: FieldRef<"device_truck_assignment", 'String'>
    readonly truck_id: FieldRef<"device_truck_assignment", 'String'>
    readonly assigned_at: FieldRef<"device_truck_assignment", 'DateTime'>
    readonly assigned_by: FieldRef<"device_truck_assignment", 'String'>
    readonly removed_at: FieldRef<"device_truck_assignment", 'DateTime'>
    readonly removed_by: FieldRef<"device_truck_assignment", 'String'>
    readonly is_active: FieldRef<"device_truck_assignment", 'Boolean'>
  }
    

  // Custom InputTypes
  /**
   * device_truck_assignment findUnique
   */
  export type device_truck_assignmentFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the device_truck_assignment
     */
    select?: device_truck_assignmentSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: device_truck_assignmentInclude<ExtArgs> | null
    /**
     * Filter, which device_truck_assignment to fetch.
     */
    where: device_truck_assignmentWhereUniqueInput
  }

  /**
   * device_truck_assignment findUniqueOrThrow
   */
  export type device_truck_assignmentFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the device_truck_assignment
     */
    select?: device_truck_assignmentSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: device_truck_assignmentInclude<ExtArgs> | null
    /**
     * Filter, which device_truck_assignment to fetch.
     */
    where: device_truck_assignmentWhereUniqueInput
  }

  /**
   * device_truck_assignment findFirst
   */
  export type device_truck_assignmentFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the device_truck_assignment
     */
    select?: device_truck_assignmentSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: device_truck_assignmentInclude<ExtArgs> | null
    /**
     * Filter, which device_truck_assignment to fetch.
     */
    where?: device_truck_assignmentWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of device_truck_assignments to fetch.
     */
    orderBy?: device_truck_assignmentOrderByWithRelationInput | device_truck_assignmentOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for device_truck_assignments.
     */
    cursor?: device_truck_assignmentWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` device_truck_assignments from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` device_truck_assignments.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of device_truck_assignments.
     */
    distinct?: Device_truck_assignmentScalarFieldEnum | Device_truck_assignmentScalarFieldEnum[]
  }

  /**
   * device_truck_assignment findFirstOrThrow
   */
  export type device_truck_assignmentFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the device_truck_assignment
     */
    select?: device_truck_assignmentSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: device_truck_assignmentInclude<ExtArgs> | null
    /**
     * Filter, which device_truck_assignment to fetch.
     */
    where?: device_truck_assignmentWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of device_truck_assignments to fetch.
     */
    orderBy?: device_truck_assignmentOrderByWithRelationInput | device_truck_assignmentOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for device_truck_assignments.
     */
    cursor?: device_truck_assignmentWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` device_truck_assignments from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` device_truck_assignments.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of device_truck_assignments.
     */
    distinct?: Device_truck_assignmentScalarFieldEnum | Device_truck_assignmentScalarFieldEnum[]
  }

  /**
   * device_truck_assignment findMany
   */
  export type device_truck_assignmentFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the device_truck_assignment
     */
    select?: device_truck_assignmentSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: device_truck_assignmentInclude<ExtArgs> | null
    /**
     * Filter, which device_truck_assignments to fetch.
     */
    where?: device_truck_assignmentWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of device_truck_assignments to fetch.
     */
    orderBy?: device_truck_assignmentOrderByWithRelationInput | device_truck_assignmentOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing device_truck_assignments.
     */
    cursor?: device_truck_assignmentWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` device_truck_assignments from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` device_truck_assignments.
     */
    skip?: number
    distinct?: Device_truck_assignmentScalarFieldEnum | Device_truck_assignmentScalarFieldEnum[]
  }

  /**
   * device_truck_assignment create
   */
  export type device_truck_assignmentCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the device_truck_assignment
     */
    select?: device_truck_assignmentSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: device_truck_assignmentInclude<ExtArgs> | null
    /**
     * The data needed to create a device_truck_assignment.
     */
    data?: XOR<device_truck_assignmentCreateInput, device_truck_assignmentUncheckedCreateInput>
  }

  /**
   * device_truck_assignment createMany
   */
  export type device_truck_assignmentCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many device_truck_assignments.
     */
    data: device_truck_assignmentCreateManyInput | device_truck_assignmentCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * device_truck_assignment createManyAndReturn
   */
  export type device_truck_assignmentCreateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the device_truck_assignment
     */
    select?: device_truck_assignmentSelectCreateManyAndReturn<ExtArgs> | null
    /**
     * The data used to create many device_truck_assignments.
     */
    data: device_truck_assignmentCreateManyInput | device_truck_assignmentCreateManyInput[]
    skipDuplicates?: boolean
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: device_truck_assignmentIncludeCreateManyAndReturn<ExtArgs> | null
  }

  /**
   * device_truck_assignment update
   */
  export type device_truck_assignmentUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the device_truck_assignment
     */
    select?: device_truck_assignmentSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: device_truck_assignmentInclude<ExtArgs> | null
    /**
     * The data needed to update a device_truck_assignment.
     */
    data: XOR<device_truck_assignmentUpdateInput, device_truck_assignmentUncheckedUpdateInput>
    /**
     * Choose, which device_truck_assignment to update.
     */
    where: device_truck_assignmentWhereUniqueInput
  }

  /**
   * device_truck_assignment updateMany
   */
  export type device_truck_assignmentUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update device_truck_assignments.
     */
    data: XOR<device_truck_assignmentUpdateManyMutationInput, device_truck_assignmentUncheckedUpdateManyInput>
    /**
     * Filter which device_truck_assignments to update
     */
    where?: device_truck_assignmentWhereInput
  }

  /**
   * device_truck_assignment upsert
   */
  export type device_truck_assignmentUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the device_truck_assignment
     */
    select?: device_truck_assignmentSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: device_truck_assignmentInclude<ExtArgs> | null
    /**
     * The filter to search for the device_truck_assignment to update in case it exists.
     */
    where: device_truck_assignmentWhereUniqueInput
    /**
     * In case the device_truck_assignment found by the `where` argument doesn't exist, create a new device_truck_assignment with this data.
     */
    create: XOR<device_truck_assignmentCreateInput, device_truck_assignmentUncheckedCreateInput>
    /**
     * In case the device_truck_assignment was found with the provided `where` argument, update it with this data.
     */
    update: XOR<device_truck_assignmentUpdateInput, device_truck_assignmentUncheckedUpdateInput>
  }

  /**
   * device_truck_assignment delete
   */
  export type device_truck_assignmentDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the device_truck_assignment
     */
    select?: device_truck_assignmentSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: device_truck_assignmentInclude<ExtArgs> | null
    /**
     * Filter which device_truck_assignment to delete.
     */
    where: device_truck_assignmentWhereUniqueInput
  }

  /**
   * device_truck_assignment deleteMany
   */
  export type device_truck_assignmentDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which device_truck_assignments to delete
     */
    where?: device_truck_assignmentWhereInput
  }

  /**
   * device_truck_assignment.users_device_truck_assignment_assigned_byTousers
   */
  export type device_truck_assignment$users_device_truck_assignment_assigned_byTousersArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the users
     */
    select?: usersSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: usersInclude<ExtArgs> | null
    where?: usersWhereInput
  }

  /**
   * device_truck_assignment.device
   */
  export type device_truck_assignment$deviceArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the device
     */
    select?: deviceSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: deviceInclude<ExtArgs> | null
    where?: deviceWhereInput
  }

  /**
   * device_truck_assignment.users_device_truck_assignment_removed_byTousers
   */
  export type device_truck_assignment$users_device_truck_assignment_removed_byTousersArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the users
     */
    select?: usersSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: usersInclude<ExtArgs> | null
    where?: usersWhereInput
  }

  /**
   * device_truck_assignment.truck
   */
  export type device_truck_assignment$truckArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the truck
     */
    select?: truckSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: truckInclude<ExtArgs> | null
    where?: truckWhereInput
  }

  /**
   * device_truck_assignment without action
   */
  export type device_truck_assignmentDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the device_truck_assignment
     */
    select?: device_truck_assignmentSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: device_truck_assignmentInclude<ExtArgs> | null
  }


  /**
   * Model fleet_group
   */

  export type AggregateFleet_group = {
    _count: Fleet_groupCountAggregateOutputType | null
    _min: Fleet_groupMinAggregateOutputType | null
    _max: Fleet_groupMaxAggregateOutputType | null
  }

  export type Fleet_groupMinAggregateOutputType = {
    id: string | null
    name: string | null
    site: string | null
    description: string | null
    created_at: Date | null
    created_by: string | null
    updated_by: string | null
  }

  export type Fleet_groupMaxAggregateOutputType = {
    id: string | null
    name: string | null
    site: string | null
    description: string | null
    created_at: Date | null
    created_by: string | null
    updated_by: string | null
  }

  export type Fleet_groupCountAggregateOutputType = {
    id: number
    name: number
    site: number
    description: number
    created_at: number
    created_by: number
    updated_by: number
    _all: number
  }


  export type Fleet_groupMinAggregateInputType = {
    id?: true
    name?: true
    site?: true
    description?: true
    created_at?: true
    created_by?: true
    updated_by?: true
  }

  export type Fleet_groupMaxAggregateInputType = {
    id?: true
    name?: true
    site?: true
    description?: true
    created_at?: true
    created_by?: true
    updated_by?: true
  }

  export type Fleet_groupCountAggregateInputType = {
    id?: true
    name?: true
    site?: true
    description?: true
    created_at?: true
    created_by?: true
    updated_by?: true
    _all?: true
  }

  export type Fleet_groupAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which fleet_group to aggregate.
     */
    where?: fleet_groupWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of fleet_groups to fetch.
     */
    orderBy?: fleet_groupOrderByWithRelationInput | fleet_groupOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: fleet_groupWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` fleet_groups from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` fleet_groups.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned fleet_groups
    **/
    _count?: true | Fleet_groupCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: Fleet_groupMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: Fleet_groupMaxAggregateInputType
  }

  export type GetFleet_groupAggregateType<T extends Fleet_groupAggregateArgs> = {
        [P in keyof T & keyof AggregateFleet_group]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateFleet_group[P]>
      : GetScalarType<T[P], AggregateFleet_group[P]>
  }




  export type fleet_groupGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: fleet_groupWhereInput
    orderBy?: fleet_groupOrderByWithAggregationInput | fleet_groupOrderByWithAggregationInput[]
    by: Fleet_groupScalarFieldEnum[] | Fleet_groupScalarFieldEnum
    having?: fleet_groupScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: Fleet_groupCountAggregateInputType | true
    _min?: Fleet_groupMinAggregateInputType
    _max?: Fleet_groupMaxAggregateInputType
  }

  export type Fleet_groupGroupByOutputType = {
    id: string
    name: string
    site: string | null
    description: string | null
    created_at: Date | null
    created_by: string | null
    updated_by: string | null
    _count: Fleet_groupCountAggregateOutputType | null
    _min: Fleet_groupMinAggregateOutputType | null
    _max: Fleet_groupMaxAggregateOutputType | null
  }

  type GetFleet_groupGroupByPayload<T extends fleet_groupGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<Fleet_groupGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof Fleet_groupGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], Fleet_groupGroupByOutputType[P]>
            : GetScalarType<T[P], Fleet_groupGroupByOutputType[P]>
        }
      >
    >


  export type fleet_groupSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    name?: boolean
    site?: boolean
    description?: boolean
    created_at?: boolean
    created_by?: boolean
    updated_by?: boolean
    truck?: boolean | fleet_group$truckArgs<ExtArgs>
    _count?: boolean | Fleet_groupCountOutputTypeDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["fleet_group"]>

  export type fleet_groupSelectCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    name?: boolean
    site?: boolean
    description?: boolean
    created_at?: boolean
    created_by?: boolean
    updated_by?: boolean
  }, ExtArgs["result"]["fleet_group"]>

  export type fleet_groupSelectScalar = {
    id?: boolean
    name?: boolean
    site?: boolean
    description?: boolean
    created_at?: boolean
    created_by?: boolean
    updated_by?: boolean
  }

  export type fleet_groupInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    truck?: boolean | fleet_group$truckArgs<ExtArgs>
    _count?: boolean | Fleet_groupCountOutputTypeDefaultArgs<ExtArgs>
  }
  export type fleet_groupIncludeCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {}

  export type $fleet_groupPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "fleet_group"
    objects: {
      truck: Prisma.$truckPayload<ExtArgs>[]
    }
    scalars: $Extensions.GetPayloadResult<{
      id: string
      name: string
      site: string | null
      description: string | null
      created_at: Date | null
      created_by: string | null
      updated_by: string | null
    }, ExtArgs["result"]["fleet_group"]>
    composites: {}
  }

  type fleet_groupGetPayload<S extends boolean | null | undefined | fleet_groupDefaultArgs> = $Result.GetResult<Prisma.$fleet_groupPayload, S>

  type fleet_groupCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = 
    Omit<fleet_groupFindManyArgs, 'select' | 'include' | 'distinct'> & {
      select?: Fleet_groupCountAggregateInputType | true
    }

  export interface fleet_groupDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['fleet_group'], meta: { name: 'fleet_group' } }
    /**
     * Find zero or one Fleet_group that matches the filter.
     * @param {fleet_groupFindUniqueArgs} args - Arguments to find a Fleet_group
     * @example
     * // Get one Fleet_group
     * const fleet_group = await prisma.fleet_group.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends fleet_groupFindUniqueArgs>(args: SelectSubset<T, fleet_groupFindUniqueArgs<ExtArgs>>): Prisma__fleet_groupClient<$Result.GetResult<Prisma.$fleet_groupPayload<ExtArgs>, T, "findUnique"> | null, null, ExtArgs>

    /**
     * Find one Fleet_group that matches the filter or throw an error with `error.code='P2025'` 
     * if no matches were found.
     * @param {fleet_groupFindUniqueOrThrowArgs} args - Arguments to find a Fleet_group
     * @example
     * // Get one Fleet_group
     * const fleet_group = await prisma.fleet_group.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends fleet_groupFindUniqueOrThrowArgs>(args: SelectSubset<T, fleet_groupFindUniqueOrThrowArgs<ExtArgs>>): Prisma__fleet_groupClient<$Result.GetResult<Prisma.$fleet_groupPayload<ExtArgs>, T, "findUniqueOrThrow">, never, ExtArgs>

    /**
     * Find the first Fleet_group that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {fleet_groupFindFirstArgs} args - Arguments to find a Fleet_group
     * @example
     * // Get one Fleet_group
     * const fleet_group = await prisma.fleet_group.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends fleet_groupFindFirstArgs>(args?: SelectSubset<T, fleet_groupFindFirstArgs<ExtArgs>>): Prisma__fleet_groupClient<$Result.GetResult<Prisma.$fleet_groupPayload<ExtArgs>, T, "findFirst"> | null, null, ExtArgs>

    /**
     * Find the first Fleet_group that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {fleet_groupFindFirstOrThrowArgs} args - Arguments to find a Fleet_group
     * @example
     * // Get one Fleet_group
     * const fleet_group = await prisma.fleet_group.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends fleet_groupFindFirstOrThrowArgs>(args?: SelectSubset<T, fleet_groupFindFirstOrThrowArgs<ExtArgs>>): Prisma__fleet_groupClient<$Result.GetResult<Prisma.$fleet_groupPayload<ExtArgs>, T, "findFirstOrThrow">, never, ExtArgs>

    /**
     * Find zero or more Fleet_groups that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {fleet_groupFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all Fleet_groups
     * const fleet_groups = await prisma.fleet_group.findMany()
     * 
     * // Get first 10 Fleet_groups
     * const fleet_groups = await prisma.fleet_group.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const fleet_groupWithIdOnly = await prisma.fleet_group.findMany({ select: { id: true } })
     * 
     */
    findMany<T extends fleet_groupFindManyArgs>(args?: SelectSubset<T, fleet_groupFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$fleet_groupPayload<ExtArgs>, T, "findMany">>

    /**
     * Create a Fleet_group.
     * @param {fleet_groupCreateArgs} args - Arguments to create a Fleet_group.
     * @example
     * // Create one Fleet_group
     * const Fleet_group = await prisma.fleet_group.create({
     *   data: {
     *     // ... data to create a Fleet_group
     *   }
     * })
     * 
     */
    create<T extends fleet_groupCreateArgs>(args: SelectSubset<T, fleet_groupCreateArgs<ExtArgs>>): Prisma__fleet_groupClient<$Result.GetResult<Prisma.$fleet_groupPayload<ExtArgs>, T, "create">, never, ExtArgs>

    /**
     * Create many Fleet_groups.
     * @param {fleet_groupCreateManyArgs} args - Arguments to create many Fleet_groups.
     * @example
     * // Create many Fleet_groups
     * const fleet_group = await prisma.fleet_group.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends fleet_groupCreateManyArgs>(args?: SelectSubset<T, fleet_groupCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create many Fleet_groups and returns the data saved in the database.
     * @param {fleet_groupCreateManyAndReturnArgs} args - Arguments to create many Fleet_groups.
     * @example
     * // Create many Fleet_groups
     * const fleet_group = await prisma.fleet_group.createManyAndReturn({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Create many Fleet_groups and only return the `id`
     * const fleet_groupWithIdOnly = await prisma.fleet_group.createManyAndReturn({ 
     *   select: { id: true },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    createManyAndReturn<T extends fleet_groupCreateManyAndReturnArgs>(args?: SelectSubset<T, fleet_groupCreateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$fleet_groupPayload<ExtArgs>, T, "createManyAndReturn">>

    /**
     * Delete a Fleet_group.
     * @param {fleet_groupDeleteArgs} args - Arguments to delete one Fleet_group.
     * @example
     * // Delete one Fleet_group
     * const Fleet_group = await prisma.fleet_group.delete({
     *   where: {
     *     // ... filter to delete one Fleet_group
     *   }
     * })
     * 
     */
    delete<T extends fleet_groupDeleteArgs>(args: SelectSubset<T, fleet_groupDeleteArgs<ExtArgs>>): Prisma__fleet_groupClient<$Result.GetResult<Prisma.$fleet_groupPayload<ExtArgs>, T, "delete">, never, ExtArgs>

    /**
     * Update one Fleet_group.
     * @param {fleet_groupUpdateArgs} args - Arguments to update one Fleet_group.
     * @example
     * // Update one Fleet_group
     * const fleet_group = await prisma.fleet_group.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends fleet_groupUpdateArgs>(args: SelectSubset<T, fleet_groupUpdateArgs<ExtArgs>>): Prisma__fleet_groupClient<$Result.GetResult<Prisma.$fleet_groupPayload<ExtArgs>, T, "update">, never, ExtArgs>

    /**
     * Delete zero or more Fleet_groups.
     * @param {fleet_groupDeleteManyArgs} args - Arguments to filter Fleet_groups to delete.
     * @example
     * // Delete a few Fleet_groups
     * const { count } = await prisma.fleet_group.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends fleet_groupDeleteManyArgs>(args?: SelectSubset<T, fleet_groupDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Fleet_groups.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {fleet_groupUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many Fleet_groups
     * const fleet_group = await prisma.fleet_group.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends fleet_groupUpdateManyArgs>(args: SelectSubset<T, fleet_groupUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create or update one Fleet_group.
     * @param {fleet_groupUpsertArgs} args - Arguments to update or create a Fleet_group.
     * @example
     * // Update or create a Fleet_group
     * const fleet_group = await prisma.fleet_group.upsert({
     *   create: {
     *     // ... data to create a Fleet_group
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the Fleet_group we want to update
     *   }
     * })
     */
    upsert<T extends fleet_groupUpsertArgs>(args: SelectSubset<T, fleet_groupUpsertArgs<ExtArgs>>): Prisma__fleet_groupClient<$Result.GetResult<Prisma.$fleet_groupPayload<ExtArgs>, T, "upsert">, never, ExtArgs>


    /**
     * Count the number of Fleet_groups.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {fleet_groupCountArgs} args - Arguments to filter Fleet_groups to count.
     * @example
     * // Count the number of Fleet_groups
     * const count = await prisma.fleet_group.count({
     *   where: {
     *     // ... the filter for the Fleet_groups we want to count
     *   }
     * })
    **/
    count<T extends fleet_groupCountArgs>(
      args?: Subset<T, fleet_groupCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], Fleet_groupCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a Fleet_group.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {Fleet_groupAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends Fleet_groupAggregateArgs>(args: Subset<T, Fleet_groupAggregateArgs>): Prisma.PrismaPromise<GetFleet_groupAggregateType<T>>

    /**
     * Group by Fleet_group.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {fleet_groupGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends fleet_groupGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: fleet_groupGroupByArgs['orderBy'] }
        : { orderBy?: fleet_groupGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, fleet_groupGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetFleet_groupGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the fleet_group model
   */
  readonly fields: fleet_groupFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for fleet_group.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__fleet_groupClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    truck<T extends fleet_group$truckArgs<ExtArgs> = {}>(args?: Subset<T, fleet_group$truckArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$truckPayload<ExtArgs>, T, "findMany"> | Null>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the fleet_group model
   */ 
  interface fleet_groupFieldRefs {
    readonly id: FieldRef<"fleet_group", 'String'>
    readonly name: FieldRef<"fleet_group", 'String'>
    readonly site: FieldRef<"fleet_group", 'String'>
    readonly description: FieldRef<"fleet_group", 'String'>
    readonly created_at: FieldRef<"fleet_group", 'DateTime'>
    readonly created_by: FieldRef<"fleet_group", 'String'>
    readonly updated_by: FieldRef<"fleet_group", 'String'>
  }
    

  // Custom InputTypes
  /**
   * fleet_group findUnique
   */
  export type fleet_groupFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the fleet_group
     */
    select?: fleet_groupSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: fleet_groupInclude<ExtArgs> | null
    /**
     * Filter, which fleet_group to fetch.
     */
    where: fleet_groupWhereUniqueInput
  }

  /**
   * fleet_group findUniqueOrThrow
   */
  export type fleet_groupFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the fleet_group
     */
    select?: fleet_groupSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: fleet_groupInclude<ExtArgs> | null
    /**
     * Filter, which fleet_group to fetch.
     */
    where: fleet_groupWhereUniqueInput
  }

  /**
   * fleet_group findFirst
   */
  export type fleet_groupFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the fleet_group
     */
    select?: fleet_groupSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: fleet_groupInclude<ExtArgs> | null
    /**
     * Filter, which fleet_group to fetch.
     */
    where?: fleet_groupWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of fleet_groups to fetch.
     */
    orderBy?: fleet_groupOrderByWithRelationInput | fleet_groupOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for fleet_groups.
     */
    cursor?: fleet_groupWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` fleet_groups from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` fleet_groups.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of fleet_groups.
     */
    distinct?: Fleet_groupScalarFieldEnum | Fleet_groupScalarFieldEnum[]
  }

  /**
   * fleet_group findFirstOrThrow
   */
  export type fleet_groupFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the fleet_group
     */
    select?: fleet_groupSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: fleet_groupInclude<ExtArgs> | null
    /**
     * Filter, which fleet_group to fetch.
     */
    where?: fleet_groupWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of fleet_groups to fetch.
     */
    orderBy?: fleet_groupOrderByWithRelationInput | fleet_groupOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for fleet_groups.
     */
    cursor?: fleet_groupWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` fleet_groups from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` fleet_groups.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of fleet_groups.
     */
    distinct?: Fleet_groupScalarFieldEnum | Fleet_groupScalarFieldEnum[]
  }

  /**
   * fleet_group findMany
   */
  export type fleet_groupFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the fleet_group
     */
    select?: fleet_groupSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: fleet_groupInclude<ExtArgs> | null
    /**
     * Filter, which fleet_groups to fetch.
     */
    where?: fleet_groupWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of fleet_groups to fetch.
     */
    orderBy?: fleet_groupOrderByWithRelationInput | fleet_groupOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing fleet_groups.
     */
    cursor?: fleet_groupWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` fleet_groups from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` fleet_groups.
     */
    skip?: number
    distinct?: Fleet_groupScalarFieldEnum | Fleet_groupScalarFieldEnum[]
  }

  /**
   * fleet_group create
   */
  export type fleet_groupCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the fleet_group
     */
    select?: fleet_groupSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: fleet_groupInclude<ExtArgs> | null
    /**
     * The data needed to create a fleet_group.
     */
    data: XOR<fleet_groupCreateInput, fleet_groupUncheckedCreateInput>
  }

  /**
   * fleet_group createMany
   */
  export type fleet_groupCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many fleet_groups.
     */
    data: fleet_groupCreateManyInput | fleet_groupCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * fleet_group createManyAndReturn
   */
  export type fleet_groupCreateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the fleet_group
     */
    select?: fleet_groupSelectCreateManyAndReturn<ExtArgs> | null
    /**
     * The data used to create many fleet_groups.
     */
    data: fleet_groupCreateManyInput | fleet_groupCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * fleet_group update
   */
  export type fleet_groupUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the fleet_group
     */
    select?: fleet_groupSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: fleet_groupInclude<ExtArgs> | null
    /**
     * The data needed to update a fleet_group.
     */
    data: XOR<fleet_groupUpdateInput, fleet_groupUncheckedUpdateInput>
    /**
     * Choose, which fleet_group to update.
     */
    where: fleet_groupWhereUniqueInput
  }

  /**
   * fleet_group updateMany
   */
  export type fleet_groupUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update fleet_groups.
     */
    data: XOR<fleet_groupUpdateManyMutationInput, fleet_groupUncheckedUpdateManyInput>
    /**
     * Filter which fleet_groups to update
     */
    where?: fleet_groupWhereInput
  }

  /**
   * fleet_group upsert
   */
  export type fleet_groupUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the fleet_group
     */
    select?: fleet_groupSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: fleet_groupInclude<ExtArgs> | null
    /**
     * The filter to search for the fleet_group to update in case it exists.
     */
    where: fleet_groupWhereUniqueInput
    /**
     * In case the fleet_group found by the `where` argument doesn't exist, create a new fleet_group with this data.
     */
    create: XOR<fleet_groupCreateInput, fleet_groupUncheckedCreateInput>
    /**
     * In case the fleet_group was found with the provided `where` argument, update it with this data.
     */
    update: XOR<fleet_groupUpdateInput, fleet_groupUncheckedUpdateInput>
  }

  /**
   * fleet_group delete
   */
  export type fleet_groupDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the fleet_group
     */
    select?: fleet_groupSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: fleet_groupInclude<ExtArgs> | null
    /**
     * Filter which fleet_group to delete.
     */
    where: fleet_groupWhereUniqueInput
  }

  /**
   * fleet_group deleteMany
   */
  export type fleet_groupDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which fleet_groups to delete
     */
    where?: fleet_groupWhereInput
  }

  /**
   * fleet_group.truck
   */
  export type fleet_group$truckArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the truck
     */
    select?: truckSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: truckInclude<ExtArgs> | null
    where?: truckWhereInput
    orderBy?: truckOrderByWithRelationInput | truckOrderByWithRelationInput[]
    cursor?: truckWhereUniqueInput
    take?: number
    skip?: number
    distinct?: TruckScalarFieldEnum | TruckScalarFieldEnum[]
  }

  /**
   * fleet_group without action
   */
  export type fleet_groupDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the fleet_group
     */
    select?: fleet_groupSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: fleet_groupInclude<ExtArgs> | null
  }


  /**
   * Model fuel_level_event
   */

  export type AggregateFuel_level_event = {
    _count: Fuel_level_eventCountAggregateOutputType | null
    _avg: Fuel_level_eventAvgAggregateOutputType | null
    _sum: Fuel_level_eventSumAggregateOutputType | null
    _min: Fuel_level_eventMinAggregateOutputType | null
    _max: Fuel_level_eventMaxAggregateOutputType | null
  }

  export type Fuel_level_eventAvgAggregateOutputType = {
    fuel_percent: number | null
  }

  export type Fuel_level_eventSumAggregateOutputType = {
    fuel_percent: number | null
  }

  export type Fuel_level_eventMinAggregateOutputType = {
    id: string | null
    truck_id: string | null
    fuel_percent: number | null
    changed_at: Date | null
    source: string | null
    created_by: string | null
  }

  export type Fuel_level_eventMaxAggregateOutputType = {
    id: string | null
    truck_id: string | null
    fuel_percent: number | null
    changed_at: Date | null
    source: string | null
    created_by: string | null
  }

  export type Fuel_level_eventCountAggregateOutputType = {
    id: number
    truck_id: number
    fuel_percent: number
    changed_at: number
    source: number
    created_by: number
    _all: number
  }


  export type Fuel_level_eventAvgAggregateInputType = {
    fuel_percent?: true
  }

  export type Fuel_level_eventSumAggregateInputType = {
    fuel_percent?: true
  }

  export type Fuel_level_eventMinAggregateInputType = {
    id?: true
    truck_id?: true
    fuel_percent?: true
    changed_at?: true
    source?: true
    created_by?: true
  }

  export type Fuel_level_eventMaxAggregateInputType = {
    id?: true
    truck_id?: true
    fuel_percent?: true
    changed_at?: true
    source?: true
    created_by?: true
  }

  export type Fuel_level_eventCountAggregateInputType = {
    id?: true
    truck_id?: true
    fuel_percent?: true
    changed_at?: true
    source?: true
    created_by?: true
    _all?: true
  }

  export type Fuel_level_eventAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which fuel_level_event to aggregate.
     */
    where?: fuel_level_eventWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of fuel_level_events to fetch.
     */
    orderBy?: fuel_level_eventOrderByWithRelationInput | fuel_level_eventOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: fuel_level_eventWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` fuel_level_events from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` fuel_level_events.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned fuel_level_events
    **/
    _count?: true | Fuel_level_eventCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: Fuel_level_eventAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: Fuel_level_eventSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: Fuel_level_eventMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: Fuel_level_eventMaxAggregateInputType
  }

  export type GetFuel_level_eventAggregateType<T extends Fuel_level_eventAggregateArgs> = {
        [P in keyof T & keyof AggregateFuel_level_event]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateFuel_level_event[P]>
      : GetScalarType<T[P], AggregateFuel_level_event[P]>
  }




  export type fuel_level_eventGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: fuel_level_eventWhereInput
    orderBy?: fuel_level_eventOrderByWithAggregationInput | fuel_level_eventOrderByWithAggregationInput[]
    by: Fuel_level_eventScalarFieldEnum[] | Fuel_level_eventScalarFieldEnum
    having?: fuel_level_eventScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: Fuel_level_eventCountAggregateInputType | true
    _avg?: Fuel_level_eventAvgAggregateInputType
    _sum?: Fuel_level_eventSumAggregateInputType
    _min?: Fuel_level_eventMinAggregateInputType
    _max?: Fuel_level_eventMaxAggregateInputType
  }

  export type Fuel_level_eventGroupByOutputType = {
    id: string
    truck_id: string
    fuel_percent: number | null
    changed_at: Date
    source: string | null
    created_by: string | null
    _count: Fuel_level_eventCountAggregateOutputType | null
    _avg: Fuel_level_eventAvgAggregateOutputType | null
    _sum: Fuel_level_eventSumAggregateOutputType | null
    _min: Fuel_level_eventMinAggregateOutputType | null
    _max: Fuel_level_eventMaxAggregateOutputType | null
  }

  type GetFuel_level_eventGroupByPayload<T extends fuel_level_eventGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<Fuel_level_eventGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof Fuel_level_eventGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], Fuel_level_eventGroupByOutputType[P]>
            : GetScalarType<T[P], Fuel_level_eventGroupByOutputType[P]>
        }
      >
    >


  export type fuel_level_eventSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    truck_id?: boolean
    fuel_percent?: boolean
    changed_at?: boolean
    source?: boolean
    created_by?: boolean
    truck?: boolean | truckDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["fuel_level_event"]>

  export type fuel_level_eventSelectCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    truck_id?: boolean
    fuel_percent?: boolean
    changed_at?: boolean
    source?: boolean
    created_by?: boolean
    truck?: boolean | truckDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["fuel_level_event"]>

  export type fuel_level_eventSelectScalar = {
    id?: boolean
    truck_id?: boolean
    fuel_percent?: boolean
    changed_at?: boolean
    source?: boolean
    created_by?: boolean
  }

  export type fuel_level_eventInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    truck?: boolean | truckDefaultArgs<ExtArgs>
  }
  export type fuel_level_eventIncludeCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    truck?: boolean | truckDefaultArgs<ExtArgs>
  }

  export type $fuel_level_eventPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "fuel_level_event"
    objects: {
      truck: Prisma.$truckPayload<ExtArgs>
    }
    scalars: $Extensions.GetPayloadResult<{
      id: string
      truck_id: string
      fuel_percent: number | null
      changed_at: Date
      source: string | null
      created_by: string | null
    }, ExtArgs["result"]["fuel_level_event"]>
    composites: {}
  }

  type fuel_level_eventGetPayload<S extends boolean | null | undefined | fuel_level_eventDefaultArgs> = $Result.GetResult<Prisma.$fuel_level_eventPayload, S>

  type fuel_level_eventCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = 
    Omit<fuel_level_eventFindManyArgs, 'select' | 'include' | 'distinct'> & {
      select?: Fuel_level_eventCountAggregateInputType | true
    }

  export interface fuel_level_eventDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['fuel_level_event'], meta: { name: 'fuel_level_event' } }
    /**
     * Find zero or one Fuel_level_event that matches the filter.
     * @param {fuel_level_eventFindUniqueArgs} args - Arguments to find a Fuel_level_event
     * @example
     * // Get one Fuel_level_event
     * const fuel_level_event = await prisma.fuel_level_event.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends fuel_level_eventFindUniqueArgs>(args: SelectSubset<T, fuel_level_eventFindUniqueArgs<ExtArgs>>): Prisma__fuel_level_eventClient<$Result.GetResult<Prisma.$fuel_level_eventPayload<ExtArgs>, T, "findUnique"> | null, null, ExtArgs>

    /**
     * Find one Fuel_level_event that matches the filter or throw an error with `error.code='P2025'` 
     * if no matches were found.
     * @param {fuel_level_eventFindUniqueOrThrowArgs} args - Arguments to find a Fuel_level_event
     * @example
     * // Get one Fuel_level_event
     * const fuel_level_event = await prisma.fuel_level_event.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends fuel_level_eventFindUniqueOrThrowArgs>(args: SelectSubset<T, fuel_level_eventFindUniqueOrThrowArgs<ExtArgs>>): Prisma__fuel_level_eventClient<$Result.GetResult<Prisma.$fuel_level_eventPayload<ExtArgs>, T, "findUniqueOrThrow">, never, ExtArgs>

    /**
     * Find the first Fuel_level_event that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {fuel_level_eventFindFirstArgs} args - Arguments to find a Fuel_level_event
     * @example
     * // Get one Fuel_level_event
     * const fuel_level_event = await prisma.fuel_level_event.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends fuel_level_eventFindFirstArgs>(args?: SelectSubset<T, fuel_level_eventFindFirstArgs<ExtArgs>>): Prisma__fuel_level_eventClient<$Result.GetResult<Prisma.$fuel_level_eventPayload<ExtArgs>, T, "findFirst"> | null, null, ExtArgs>

    /**
     * Find the first Fuel_level_event that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {fuel_level_eventFindFirstOrThrowArgs} args - Arguments to find a Fuel_level_event
     * @example
     * // Get one Fuel_level_event
     * const fuel_level_event = await prisma.fuel_level_event.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends fuel_level_eventFindFirstOrThrowArgs>(args?: SelectSubset<T, fuel_level_eventFindFirstOrThrowArgs<ExtArgs>>): Prisma__fuel_level_eventClient<$Result.GetResult<Prisma.$fuel_level_eventPayload<ExtArgs>, T, "findFirstOrThrow">, never, ExtArgs>

    /**
     * Find zero or more Fuel_level_events that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {fuel_level_eventFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all Fuel_level_events
     * const fuel_level_events = await prisma.fuel_level_event.findMany()
     * 
     * // Get first 10 Fuel_level_events
     * const fuel_level_events = await prisma.fuel_level_event.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const fuel_level_eventWithIdOnly = await prisma.fuel_level_event.findMany({ select: { id: true } })
     * 
     */
    findMany<T extends fuel_level_eventFindManyArgs>(args?: SelectSubset<T, fuel_level_eventFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$fuel_level_eventPayload<ExtArgs>, T, "findMany">>

    /**
     * Create a Fuel_level_event.
     * @param {fuel_level_eventCreateArgs} args - Arguments to create a Fuel_level_event.
     * @example
     * // Create one Fuel_level_event
     * const Fuel_level_event = await prisma.fuel_level_event.create({
     *   data: {
     *     // ... data to create a Fuel_level_event
     *   }
     * })
     * 
     */
    create<T extends fuel_level_eventCreateArgs>(args: SelectSubset<T, fuel_level_eventCreateArgs<ExtArgs>>): Prisma__fuel_level_eventClient<$Result.GetResult<Prisma.$fuel_level_eventPayload<ExtArgs>, T, "create">, never, ExtArgs>

    /**
     * Create many Fuel_level_events.
     * @param {fuel_level_eventCreateManyArgs} args - Arguments to create many Fuel_level_events.
     * @example
     * // Create many Fuel_level_events
     * const fuel_level_event = await prisma.fuel_level_event.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends fuel_level_eventCreateManyArgs>(args?: SelectSubset<T, fuel_level_eventCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create many Fuel_level_events and returns the data saved in the database.
     * @param {fuel_level_eventCreateManyAndReturnArgs} args - Arguments to create many Fuel_level_events.
     * @example
     * // Create many Fuel_level_events
     * const fuel_level_event = await prisma.fuel_level_event.createManyAndReturn({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Create many Fuel_level_events and only return the `id`
     * const fuel_level_eventWithIdOnly = await prisma.fuel_level_event.createManyAndReturn({ 
     *   select: { id: true },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    createManyAndReturn<T extends fuel_level_eventCreateManyAndReturnArgs>(args?: SelectSubset<T, fuel_level_eventCreateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$fuel_level_eventPayload<ExtArgs>, T, "createManyAndReturn">>

    /**
     * Delete a Fuel_level_event.
     * @param {fuel_level_eventDeleteArgs} args - Arguments to delete one Fuel_level_event.
     * @example
     * // Delete one Fuel_level_event
     * const Fuel_level_event = await prisma.fuel_level_event.delete({
     *   where: {
     *     // ... filter to delete one Fuel_level_event
     *   }
     * })
     * 
     */
    delete<T extends fuel_level_eventDeleteArgs>(args: SelectSubset<T, fuel_level_eventDeleteArgs<ExtArgs>>): Prisma__fuel_level_eventClient<$Result.GetResult<Prisma.$fuel_level_eventPayload<ExtArgs>, T, "delete">, never, ExtArgs>

    /**
     * Update one Fuel_level_event.
     * @param {fuel_level_eventUpdateArgs} args - Arguments to update one Fuel_level_event.
     * @example
     * // Update one Fuel_level_event
     * const fuel_level_event = await prisma.fuel_level_event.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends fuel_level_eventUpdateArgs>(args: SelectSubset<T, fuel_level_eventUpdateArgs<ExtArgs>>): Prisma__fuel_level_eventClient<$Result.GetResult<Prisma.$fuel_level_eventPayload<ExtArgs>, T, "update">, never, ExtArgs>

    /**
     * Delete zero or more Fuel_level_events.
     * @param {fuel_level_eventDeleteManyArgs} args - Arguments to filter Fuel_level_events to delete.
     * @example
     * // Delete a few Fuel_level_events
     * const { count } = await prisma.fuel_level_event.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends fuel_level_eventDeleteManyArgs>(args?: SelectSubset<T, fuel_level_eventDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Fuel_level_events.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {fuel_level_eventUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many Fuel_level_events
     * const fuel_level_event = await prisma.fuel_level_event.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends fuel_level_eventUpdateManyArgs>(args: SelectSubset<T, fuel_level_eventUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create or update one Fuel_level_event.
     * @param {fuel_level_eventUpsertArgs} args - Arguments to update or create a Fuel_level_event.
     * @example
     * // Update or create a Fuel_level_event
     * const fuel_level_event = await prisma.fuel_level_event.upsert({
     *   create: {
     *     // ... data to create a Fuel_level_event
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the Fuel_level_event we want to update
     *   }
     * })
     */
    upsert<T extends fuel_level_eventUpsertArgs>(args: SelectSubset<T, fuel_level_eventUpsertArgs<ExtArgs>>): Prisma__fuel_level_eventClient<$Result.GetResult<Prisma.$fuel_level_eventPayload<ExtArgs>, T, "upsert">, never, ExtArgs>


    /**
     * Count the number of Fuel_level_events.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {fuel_level_eventCountArgs} args - Arguments to filter Fuel_level_events to count.
     * @example
     * // Count the number of Fuel_level_events
     * const count = await prisma.fuel_level_event.count({
     *   where: {
     *     // ... the filter for the Fuel_level_events we want to count
     *   }
     * })
    **/
    count<T extends fuel_level_eventCountArgs>(
      args?: Subset<T, fuel_level_eventCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], Fuel_level_eventCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a Fuel_level_event.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {Fuel_level_eventAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends Fuel_level_eventAggregateArgs>(args: Subset<T, Fuel_level_eventAggregateArgs>): Prisma.PrismaPromise<GetFuel_level_eventAggregateType<T>>

    /**
     * Group by Fuel_level_event.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {fuel_level_eventGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends fuel_level_eventGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: fuel_level_eventGroupByArgs['orderBy'] }
        : { orderBy?: fuel_level_eventGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, fuel_level_eventGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetFuel_level_eventGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the fuel_level_event model
   */
  readonly fields: fuel_level_eventFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for fuel_level_event.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__fuel_level_eventClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    truck<T extends truckDefaultArgs<ExtArgs> = {}>(args?: Subset<T, truckDefaultArgs<ExtArgs>>): Prisma__truckClient<$Result.GetResult<Prisma.$truckPayload<ExtArgs>, T, "findUniqueOrThrow"> | Null, Null, ExtArgs>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the fuel_level_event model
   */ 
  interface fuel_level_eventFieldRefs {
    readonly id: FieldRef<"fuel_level_event", 'String'>
    readonly truck_id: FieldRef<"fuel_level_event", 'String'>
    readonly fuel_percent: FieldRef<"fuel_level_event", 'Float'>
    readonly changed_at: FieldRef<"fuel_level_event", 'DateTime'>
    readonly source: FieldRef<"fuel_level_event", 'String'>
    readonly created_by: FieldRef<"fuel_level_event", 'String'>
  }
    

  // Custom InputTypes
  /**
   * fuel_level_event findUnique
   */
  export type fuel_level_eventFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the fuel_level_event
     */
    select?: fuel_level_eventSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: fuel_level_eventInclude<ExtArgs> | null
    /**
     * Filter, which fuel_level_event to fetch.
     */
    where: fuel_level_eventWhereUniqueInput
  }

  /**
   * fuel_level_event findUniqueOrThrow
   */
  export type fuel_level_eventFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the fuel_level_event
     */
    select?: fuel_level_eventSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: fuel_level_eventInclude<ExtArgs> | null
    /**
     * Filter, which fuel_level_event to fetch.
     */
    where: fuel_level_eventWhereUniqueInput
  }

  /**
   * fuel_level_event findFirst
   */
  export type fuel_level_eventFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the fuel_level_event
     */
    select?: fuel_level_eventSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: fuel_level_eventInclude<ExtArgs> | null
    /**
     * Filter, which fuel_level_event to fetch.
     */
    where?: fuel_level_eventWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of fuel_level_events to fetch.
     */
    orderBy?: fuel_level_eventOrderByWithRelationInput | fuel_level_eventOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for fuel_level_events.
     */
    cursor?: fuel_level_eventWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` fuel_level_events from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` fuel_level_events.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of fuel_level_events.
     */
    distinct?: Fuel_level_eventScalarFieldEnum | Fuel_level_eventScalarFieldEnum[]
  }

  /**
   * fuel_level_event findFirstOrThrow
   */
  export type fuel_level_eventFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the fuel_level_event
     */
    select?: fuel_level_eventSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: fuel_level_eventInclude<ExtArgs> | null
    /**
     * Filter, which fuel_level_event to fetch.
     */
    where?: fuel_level_eventWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of fuel_level_events to fetch.
     */
    orderBy?: fuel_level_eventOrderByWithRelationInput | fuel_level_eventOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for fuel_level_events.
     */
    cursor?: fuel_level_eventWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` fuel_level_events from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` fuel_level_events.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of fuel_level_events.
     */
    distinct?: Fuel_level_eventScalarFieldEnum | Fuel_level_eventScalarFieldEnum[]
  }

  /**
   * fuel_level_event findMany
   */
  export type fuel_level_eventFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the fuel_level_event
     */
    select?: fuel_level_eventSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: fuel_level_eventInclude<ExtArgs> | null
    /**
     * Filter, which fuel_level_events to fetch.
     */
    where?: fuel_level_eventWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of fuel_level_events to fetch.
     */
    orderBy?: fuel_level_eventOrderByWithRelationInput | fuel_level_eventOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing fuel_level_events.
     */
    cursor?: fuel_level_eventWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` fuel_level_events from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` fuel_level_events.
     */
    skip?: number
    distinct?: Fuel_level_eventScalarFieldEnum | Fuel_level_eventScalarFieldEnum[]
  }

  /**
   * fuel_level_event create
   */
  export type fuel_level_eventCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the fuel_level_event
     */
    select?: fuel_level_eventSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: fuel_level_eventInclude<ExtArgs> | null
    /**
     * The data needed to create a fuel_level_event.
     */
    data: XOR<fuel_level_eventCreateInput, fuel_level_eventUncheckedCreateInput>
  }

  /**
   * fuel_level_event createMany
   */
  export type fuel_level_eventCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many fuel_level_events.
     */
    data: fuel_level_eventCreateManyInput | fuel_level_eventCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * fuel_level_event createManyAndReturn
   */
  export type fuel_level_eventCreateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the fuel_level_event
     */
    select?: fuel_level_eventSelectCreateManyAndReturn<ExtArgs> | null
    /**
     * The data used to create many fuel_level_events.
     */
    data: fuel_level_eventCreateManyInput | fuel_level_eventCreateManyInput[]
    skipDuplicates?: boolean
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: fuel_level_eventIncludeCreateManyAndReturn<ExtArgs> | null
  }

  /**
   * fuel_level_event update
   */
  export type fuel_level_eventUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the fuel_level_event
     */
    select?: fuel_level_eventSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: fuel_level_eventInclude<ExtArgs> | null
    /**
     * The data needed to update a fuel_level_event.
     */
    data: XOR<fuel_level_eventUpdateInput, fuel_level_eventUncheckedUpdateInput>
    /**
     * Choose, which fuel_level_event to update.
     */
    where: fuel_level_eventWhereUniqueInput
  }

  /**
   * fuel_level_event updateMany
   */
  export type fuel_level_eventUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update fuel_level_events.
     */
    data: XOR<fuel_level_eventUpdateManyMutationInput, fuel_level_eventUncheckedUpdateManyInput>
    /**
     * Filter which fuel_level_events to update
     */
    where?: fuel_level_eventWhereInput
  }

  /**
   * fuel_level_event upsert
   */
  export type fuel_level_eventUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the fuel_level_event
     */
    select?: fuel_level_eventSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: fuel_level_eventInclude<ExtArgs> | null
    /**
     * The filter to search for the fuel_level_event to update in case it exists.
     */
    where: fuel_level_eventWhereUniqueInput
    /**
     * In case the fuel_level_event found by the `where` argument doesn't exist, create a new fuel_level_event with this data.
     */
    create: XOR<fuel_level_eventCreateInput, fuel_level_eventUncheckedCreateInput>
    /**
     * In case the fuel_level_event was found with the provided `where` argument, update it with this data.
     */
    update: XOR<fuel_level_eventUpdateInput, fuel_level_eventUncheckedUpdateInput>
  }

  /**
   * fuel_level_event delete
   */
  export type fuel_level_eventDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the fuel_level_event
     */
    select?: fuel_level_eventSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: fuel_level_eventInclude<ExtArgs> | null
    /**
     * Filter which fuel_level_event to delete.
     */
    where: fuel_level_eventWhereUniqueInput
  }

  /**
   * fuel_level_event deleteMany
   */
  export type fuel_level_eventDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which fuel_level_events to delete
     */
    where?: fuel_level_eventWhereInput
  }

  /**
   * fuel_level_event without action
   */
  export type fuel_level_eventDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the fuel_level_event
     */
    select?: fuel_level_eventSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: fuel_level_eventInclude<ExtArgs> | null
  }


  /**
   * Model geofence
   */

  export type AggregateGeofence = {
    _count: GeofenceCountAggregateOutputType | null
    _min: GeofenceMinAggregateOutputType | null
    _max: GeofenceMaxAggregateOutputType | null
  }

  export type GeofenceMinAggregateOutputType = {
    id: string | null
    name: string | null
    created_by: string | null
    created_at: Date | null
  }

  export type GeofenceMaxAggregateOutputType = {
    id: string | null
    name: string | null
    created_by: string | null
    created_at: Date | null
  }

  export type GeofenceCountAggregateOutputType = {
    id: number
    name: number
    created_by: number
    created_at: number
    _all: number
  }


  export type GeofenceMinAggregateInputType = {
    id?: true
    name?: true
    created_by?: true
    created_at?: true
  }

  export type GeofenceMaxAggregateInputType = {
    id?: true
    name?: true
    created_by?: true
    created_at?: true
  }

  export type GeofenceCountAggregateInputType = {
    id?: true
    name?: true
    created_by?: true
    created_at?: true
    _all?: true
  }

  export type GeofenceAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which geofence to aggregate.
     */
    where?: geofenceWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of geofences to fetch.
     */
    orderBy?: geofenceOrderByWithRelationInput | geofenceOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: geofenceWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` geofences from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` geofences.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned geofences
    **/
    _count?: true | GeofenceCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: GeofenceMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: GeofenceMaxAggregateInputType
  }

  export type GetGeofenceAggregateType<T extends GeofenceAggregateArgs> = {
        [P in keyof T & keyof AggregateGeofence]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateGeofence[P]>
      : GetScalarType<T[P], AggregateGeofence[P]>
  }




  export type geofenceGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: geofenceWhereInput
    orderBy?: geofenceOrderByWithAggregationInput | geofenceOrderByWithAggregationInput[]
    by: GeofenceScalarFieldEnum[] | GeofenceScalarFieldEnum
    having?: geofenceScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: GeofenceCountAggregateInputType | true
    _min?: GeofenceMinAggregateInputType
    _max?: GeofenceMaxAggregateInputType
  }

  export type GeofenceGroupByOutputType = {
    id: string
    name: string
    created_by: string | null
    created_at: Date | null
    _count: GeofenceCountAggregateOutputType | null
    _min: GeofenceMinAggregateOutputType | null
    _max: GeofenceMaxAggregateOutputType | null
  }

  type GetGeofenceGroupByPayload<T extends geofenceGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<GeofenceGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof GeofenceGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], GeofenceGroupByOutputType[P]>
            : GetScalarType<T[P], GeofenceGroupByOutputType[P]>
        }
      >
    >


  export type geofenceSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    name?: boolean
    created_by?: boolean
    created_at?: boolean
  }, ExtArgs["result"]["geofence"]>


  export type geofenceSelectScalar = {
    id?: boolean
    name?: boolean
    created_by?: boolean
    created_at?: boolean
  }


  export type $geofencePayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "geofence"
    objects: {}
    scalars: $Extensions.GetPayloadResult<{
      id: string
      name: string
      created_by: string | null
      created_at: Date | null
    }, ExtArgs["result"]["geofence"]>
    composites: {}
  }

  type geofenceGetPayload<S extends boolean | null | undefined | geofenceDefaultArgs> = $Result.GetResult<Prisma.$geofencePayload, S>

  type geofenceCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = 
    Omit<geofenceFindManyArgs, 'select' | 'include' | 'distinct'> & {
      select?: GeofenceCountAggregateInputType | true
    }

  export interface geofenceDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['geofence'], meta: { name: 'geofence' } }
    /**
     * Find zero or one Geofence that matches the filter.
     * @param {geofenceFindUniqueArgs} args - Arguments to find a Geofence
     * @example
     * // Get one Geofence
     * const geofence = await prisma.geofence.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends geofenceFindUniqueArgs>(args: SelectSubset<T, geofenceFindUniqueArgs<ExtArgs>>): Prisma__geofenceClient<$Result.GetResult<Prisma.$geofencePayload<ExtArgs>, T, "findUnique"> | null, null, ExtArgs>

    /**
     * Find one Geofence that matches the filter or throw an error with `error.code='P2025'` 
     * if no matches were found.
     * @param {geofenceFindUniqueOrThrowArgs} args - Arguments to find a Geofence
     * @example
     * // Get one Geofence
     * const geofence = await prisma.geofence.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends geofenceFindUniqueOrThrowArgs>(args: SelectSubset<T, geofenceFindUniqueOrThrowArgs<ExtArgs>>): Prisma__geofenceClient<$Result.GetResult<Prisma.$geofencePayload<ExtArgs>, T, "findUniqueOrThrow">, never, ExtArgs>

    /**
     * Find the first Geofence that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {geofenceFindFirstArgs} args - Arguments to find a Geofence
     * @example
     * // Get one Geofence
     * const geofence = await prisma.geofence.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends geofenceFindFirstArgs>(args?: SelectSubset<T, geofenceFindFirstArgs<ExtArgs>>): Prisma__geofenceClient<$Result.GetResult<Prisma.$geofencePayload<ExtArgs>, T, "findFirst"> | null, null, ExtArgs>

    /**
     * Find the first Geofence that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {geofenceFindFirstOrThrowArgs} args - Arguments to find a Geofence
     * @example
     * // Get one Geofence
     * const geofence = await prisma.geofence.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends geofenceFindFirstOrThrowArgs>(args?: SelectSubset<T, geofenceFindFirstOrThrowArgs<ExtArgs>>): Prisma__geofenceClient<$Result.GetResult<Prisma.$geofencePayload<ExtArgs>, T, "findFirstOrThrow">, never, ExtArgs>

    /**
     * Find zero or more Geofences that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {geofenceFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all Geofences
     * const geofences = await prisma.geofence.findMany()
     * 
     * // Get first 10 Geofences
     * const geofences = await prisma.geofence.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const geofenceWithIdOnly = await prisma.geofence.findMany({ select: { id: true } })
     * 
     */
    findMany<T extends geofenceFindManyArgs>(args?: SelectSubset<T, geofenceFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$geofencePayload<ExtArgs>, T, "findMany">>

    /**
     * Delete a Geofence.
     * @param {geofenceDeleteArgs} args - Arguments to delete one Geofence.
     * @example
     * // Delete one Geofence
     * const Geofence = await prisma.geofence.delete({
     *   where: {
     *     // ... filter to delete one Geofence
     *   }
     * })
     * 
     */
    delete<T extends geofenceDeleteArgs>(args: SelectSubset<T, geofenceDeleteArgs<ExtArgs>>): Prisma__geofenceClient<$Result.GetResult<Prisma.$geofencePayload<ExtArgs>, T, "delete">, never, ExtArgs>

    /**
     * Update one Geofence.
     * @param {geofenceUpdateArgs} args - Arguments to update one Geofence.
     * @example
     * // Update one Geofence
     * const geofence = await prisma.geofence.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends geofenceUpdateArgs>(args: SelectSubset<T, geofenceUpdateArgs<ExtArgs>>): Prisma__geofenceClient<$Result.GetResult<Prisma.$geofencePayload<ExtArgs>, T, "update">, never, ExtArgs>

    /**
     * Delete zero or more Geofences.
     * @param {geofenceDeleteManyArgs} args - Arguments to filter Geofences to delete.
     * @example
     * // Delete a few Geofences
     * const { count } = await prisma.geofence.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends geofenceDeleteManyArgs>(args?: SelectSubset<T, geofenceDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Geofences.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {geofenceUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many Geofences
     * const geofence = await prisma.geofence.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends geofenceUpdateManyArgs>(args: SelectSubset<T, geofenceUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>


    /**
     * Count the number of Geofences.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {geofenceCountArgs} args - Arguments to filter Geofences to count.
     * @example
     * // Count the number of Geofences
     * const count = await prisma.geofence.count({
     *   where: {
     *     // ... the filter for the Geofences we want to count
     *   }
     * })
    **/
    count<T extends geofenceCountArgs>(
      args?: Subset<T, geofenceCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], GeofenceCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a Geofence.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {GeofenceAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends GeofenceAggregateArgs>(args: Subset<T, GeofenceAggregateArgs>): Prisma.PrismaPromise<GetGeofenceAggregateType<T>>

    /**
     * Group by Geofence.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {geofenceGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends geofenceGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: geofenceGroupByArgs['orderBy'] }
        : { orderBy?: geofenceGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, geofenceGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetGeofenceGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the geofence model
   */
  readonly fields: geofenceFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for geofence.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__geofenceClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the geofence model
   */ 
  interface geofenceFieldRefs {
    readonly id: FieldRef<"geofence", 'String'>
    readonly name: FieldRef<"geofence", 'String'>
    readonly created_by: FieldRef<"geofence", 'String'>
    readonly created_at: FieldRef<"geofence", 'DateTime'>
  }
    

  // Custom InputTypes
  /**
   * geofence findUnique
   */
  export type geofenceFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the geofence
     */
    select?: geofenceSelect<ExtArgs> | null
    /**
     * Filter, which geofence to fetch.
     */
    where: geofenceWhereUniqueInput
  }

  /**
   * geofence findUniqueOrThrow
   */
  export type geofenceFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the geofence
     */
    select?: geofenceSelect<ExtArgs> | null
    /**
     * Filter, which geofence to fetch.
     */
    where: geofenceWhereUniqueInput
  }

  /**
   * geofence findFirst
   */
  export type geofenceFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the geofence
     */
    select?: geofenceSelect<ExtArgs> | null
    /**
     * Filter, which geofence to fetch.
     */
    where?: geofenceWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of geofences to fetch.
     */
    orderBy?: geofenceOrderByWithRelationInput | geofenceOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for geofences.
     */
    cursor?: geofenceWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` geofences from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` geofences.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of geofences.
     */
    distinct?: GeofenceScalarFieldEnum | GeofenceScalarFieldEnum[]
  }

  /**
   * geofence findFirstOrThrow
   */
  export type geofenceFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the geofence
     */
    select?: geofenceSelect<ExtArgs> | null
    /**
     * Filter, which geofence to fetch.
     */
    where?: geofenceWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of geofences to fetch.
     */
    orderBy?: geofenceOrderByWithRelationInput | geofenceOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for geofences.
     */
    cursor?: geofenceWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` geofences from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` geofences.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of geofences.
     */
    distinct?: GeofenceScalarFieldEnum | GeofenceScalarFieldEnum[]
  }

  /**
   * geofence findMany
   */
  export type geofenceFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the geofence
     */
    select?: geofenceSelect<ExtArgs> | null
    /**
     * Filter, which geofences to fetch.
     */
    where?: geofenceWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of geofences to fetch.
     */
    orderBy?: geofenceOrderByWithRelationInput | geofenceOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing geofences.
     */
    cursor?: geofenceWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` geofences from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` geofences.
     */
    skip?: number
    distinct?: GeofenceScalarFieldEnum | GeofenceScalarFieldEnum[]
  }

  /**
   * geofence update
   */
  export type geofenceUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the geofence
     */
    select?: geofenceSelect<ExtArgs> | null
    /**
     * The data needed to update a geofence.
     */
    data: XOR<geofenceUpdateInput, geofenceUncheckedUpdateInput>
    /**
     * Choose, which geofence to update.
     */
    where: geofenceWhereUniqueInput
  }

  /**
   * geofence updateMany
   */
  export type geofenceUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update geofences.
     */
    data: XOR<geofenceUpdateManyMutationInput, geofenceUncheckedUpdateManyInput>
    /**
     * Filter which geofences to update
     */
    where?: geofenceWhereInput
  }

  /**
   * geofence delete
   */
  export type geofenceDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the geofence
     */
    select?: geofenceSelect<ExtArgs> | null
    /**
     * Filter which geofence to delete.
     */
    where: geofenceWhereUniqueInput
  }

  /**
   * geofence deleteMany
   */
  export type geofenceDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which geofences to delete
     */
    where?: geofenceWhereInput
  }

  /**
   * geofence without action
   */
  export type geofenceDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the geofence
     */
    select?: geofenceSelect<ExtArgs> | null
  }


  /**
   * Model gps_position
   */

  export type AggregateGps_position = {
    _count: Gps_positionCountAggregateOutputType | null
    _avg: Gps_positionAvgAggregateOutputType | null
    _sum: Gps_positionSumAggregateOutputType | null
    _min: Gps_positionMinAggregateOutputType | null
    _max: Gps_positionMaxAggregateOutputType | null
  }

  export type Gps_positionAvgAggregateOutputType = {
    id: number | null
    speed_kph: number | null
    heading_deg: number | null
    hdop: number | null
  }

  export type Gps_positionSumAggregateOutputType = {
    id: bigint | null
    speed_kph: number | null
    heading_deg: number | null
    hdop: number | null
  }

  export type Gps_positionMinAggregateOutputType = {
    id: bigint | null
    device_id: string | null
    truck_id: string | null
    ts: Date | null
    speed_kph: number | null
    heading_deg: number | null
    hdop: number | null
    source: string | null
  }

  export type Gps_positionMaxAggregateOutputType = {
    id: bigint | null
    device_id: string | null
    truck_id: string | null
    ts: Date | null
    speed_kph: number | null
    heading_deg: number | null
    hdop: number | null
    source: string | null
  }

  export type Gps_positionCountAggregateOutputType = {
    id: number
    device_id: number
    truck_id: number
    ts: number
    speed_kph: number
    heading_deg: number
    hdop: number
    source: number
    _all: number
  }


  export type Gps_positionAvgAggregateInputType = {
    id?: true
    speed_kph?: true
    heading_deg?: true
    hdop?: true
  }

  export type Gps_positionSumAggregateInputType = {
    id?: true
    speed_kph?: true
    heading_deg?: true
    hdop?: true
  }

  export type Gps_positionMinAggregateInputType = {
    id?: true
    device_id?: true
    truck_id?: true
    ts?: true
    speed_kph?: true
    heading_deg?: true
    hdop?: true
    source?: true
  }

  export type Gps_positionMaxAggregateInputType = {
    id?: true
    device_id?: true
    truck_id?: true
    ts?: true
    speed_kph?: true
    heading_deg?: true
    hdop?: true
    source?: true
  }

  export type Gps_positionCountAggregateInputType = {
    id?: true
    device_id?: true
    truck_id?: true
    ts?: true
    speed_kph?: true
    heading_deg?: true
    hdop?: true
    source?: true
    _all?: true
  }

  export type Gps_positionAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which gps_position to aggregate.
     */
    where?: gps_positionWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of gps_positions to fetch.
     */
    orderBy?: gps_positionOrderByWithRelationInput | gps_positionOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: gps_positionWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` gps_positions from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` gps_positions.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned gps_positions
    **/
    _count?: true | Gps_positionCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: Gps_positionAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: Gps_positionSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: Gps_positionMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: Gps_positionMaxAggregateInputType
  }

  export type GetGps_positionAggregateType<T extends Gps_positionAggregateArgs> = {
        [P in keyof T & keyof AggregateGps_position]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateGps_position[P]>
      : GetScalarType<T[P], AggregateGps_position[P]>
  }




  export type gps_positionGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: gps_positionWhereInput
    orderBy?: gps_positionOrderByWithAggregationInput | gps_positionOrderByWithAggregationInput[]
    by: Gps_positionScalarFieldEnum[] | Gps_positionScalarFieldEnum
    having?: gps_positionScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: Gps_positionCountAggregateInputType | true
    _avg?: Gps_positionAvgAggregateInputType
    _sum?: Gps_positionSumAggregateInputType
    _min?: Gps_positionMinAggregateInputType
    _max?: Gps_positionMaxAggregateInputType
  }

  export type Gps_positionGroupByOutputType = {
    id: bigint
    device_id: string | null
    truck_id: string
    ts: Date
    speed_kph: number | null
    heading_deg: number | null
    hdop: number | null
    source: string | null
    _count: Gps_positionCountAggregateOutputType | null
    _avg: Gps_positionAvgAggregateOutputType | null
    _sum: Gps_positionSumAggregateOutputType | null
    _min: Gps_positionMinAggregateOutputType | null
    _max: Gps_positionMaxAggregateOutputType | null
  }

  type GetGps_positionGroupByPayload<T extends gps_positionGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<Gps_positionGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof Gps_positionGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], Gps_positionGroupByOutputType[P]>
            : GetScalarType<T[P], Gps_positionGroupByOutputType[P]>
        }
      >
    >


  export type gps_positionSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    device_id?: boolean
    truck_id?: boolean
    ts?: boolean
    speed_kph?: boolean
    heading_deg?: boolean
    hdop?: boolean
    source?: boolean
    device?: boolean | gps_position$deviceArgs<ExtArgs>
    truck?: boolean | truckDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["gps_position"]>


  export type gps_positionSelectScalar = {
    id?: boolean
    device_id?: boolean
    truck_id?: boolean
    ts?: boolean
    speed_kph?: boolean
    heading_deg?: boolean
    hdop?: boolean
    source?: boolean
  }

  export type gps_positionInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    device?: boolean | gps_position$deviceArgs<ExtArgs>
    truck?: boolean | truckDefaultArgs<ExtArgs>
  }

  export type $gps_positionPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "gps_position"
    objects: {
      device: Prisma.$devicePayload<ExtArgs> | null
      truck: Prisma.$truckPayload<ExtArgs>
    }
    scalars: $Extensions.GetPayloadResult<{
      id: bigint
      device_id: string | null
      truck_id: string
      ts: Date
      speed_kph: number | null
      heading_deg: number | null
      hdop: number | null
      source: string | null
    }, ExtArgs["result"]["gps_position"]>
    composites: {}
  }

  type gps_positionGetPayload<S extends boolean | null | undefined | gps_positionDefaultArgs> = $Result.GetResult<Prisma.$gps_positionPayload, S>

  type gps_positionCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = 
    Omit<gps_positionFindManyArgs, 'select' | 'include' | 'distinct'> & {
      select?: Gps_positionCountAggregateInputType | true
    }

  export interface gps_positionDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['gps_position'], meta: { name: 'gps_position' } }
    /**
     * Find zero or one Gps_position that matches the filter.
     * @param {gps_positionFindUniqueArgs} args - Arguments to find a Gps_position
     * @example
     * // Get one Gps_position
     * const gps_position = await prisma.gps_position.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends gps_positionFindUniqueArgs>(args: SelectSubset<T, gps_positionFindUniqueArgs<ExtArgs>>): Prisma__gps_positionClient<$Result.GetResult<Prisma.$gps_positionPayload<ExtArgs>, T, "findUnique"> | null, null, ExtArgs>

    /**
     * Find one Gps_position that matches the filter or throw an error with `error.code='P2025'` 
     * if no matches were found.
     * @param {gps_positionFindUniqueOrThrowArgs} args - Arguments to find a Gps_position
     * @example
     * // Get one Gps_position
     * const gps_position = await prisma.gps_position.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends gps_positionFindUniqueOrThrowArgs>(args: SelectSubset<T, gps_positionFindUniqueOrThrowArgs<ExtArgs>>): Prisma__gps_positionClient<$Result.GetResult<Prisma.$gps_positionPayload<ExtArgs>, T, "findUniqueOrThrow">, never, ExtArgs>

    /**
     * Find the first Gps_position that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {gps_positionFindFirstArgs} args - Arguments to find a Gps_position
     * @example
     * // Get one Gps_position
     * const gps_position = await prisma.gps_position.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends gps_positionFindFirstArgs>(args?: SelectSubset<T, gps_positionFindFirstArgs<ExtArgs>>): Prisma__gps_positionClient<$Result.GetResult<Prisma.$gps_positionPayload<ExtArgs>, T, "findFirst"> | null, null, ExtArgs>

    /**
     * Find the first Gps_position that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {gps_positionFindFirstOrThrowArgs} args - Arguments to find a Gps_position
     * @example
     * // Get one Gps_position
     * const gps_position = await prisma.gps_position.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends gps_positionFindFirstOrThrowArgs>(args?: SelectSubset<T, gps_positionFindFirstOrThrowArgs<ExtArgs>>): Prisma__gps_positionClient<$Result.GetResult<Prisma.$gps_positionPayload<ExtArgs>, T, "findFirstOrThrow">, never, ExtArgs>

    /**
     * Find zero or more Gps_positions that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {gps_positionFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all Gps_positions
     * const gps_positions = await prisma.gps_position.findMany()
     * 
     * // Get first 10 Gps_positions
     * const gps_positions = await prisma.gps_position.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const gps_positionWithIdOnly = await prisma.gps_position.findMany({ select: { id: true } })
     * 
     */
    findMany<T extends gps_positionFindManyArgs>(args?: SelectSubset<T, gps_positionFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$gps_positionPayload<ExtArgs>, T, "findMany">>

    /**
     * Delete a Gps_position.
     * @param {gps_positionDeleteArgs} args - Arguments to delete one Gps_position.
     * @example
     * // Delete one Gps_position
     * const Gps_position = await prisma.gps_position.delete({
     *   where: {
     *     // ... filter to delete one Gps_position
     *   }
     * })
     * 
     */
    delete<T extends gps_positionDeleteArgs>(args: SelectSubset<T, gps_positionDeleteArgs<ExtArgs>>): Prisma__gps_positionClient<$Result.GetResult<Prisma.$gps_positionPayload<ExtArgs>, T, "delete">, never, ExtArgs>

    /**
     * Update one Gps_position.
     * @param {gps_positionUpdateArgs} args - Arguments to update one Gps_position.
     * @example
     * // Update one Gps_position
     * const gps_position = await prisma.gps_position.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends gps_positionUpdateArgs>(args: SelectSubset<T, gps_positionUpdateArgs<ExtArgs>>): Prisma__gps_positionClient<$Result.GetResult<Prisma.$gps_positionPayload<ExtArgs>, T, "update">, never, ExtArgs>

    /**
     * Delete zero or more Gps_positions.
     * @param {gps_positionDeleteManyArgs} args - Arguments to filter Gps_positions to delete.
     * @example
     * // Delete a few Gps_positions
     * const { count } = await prisma.gps_position.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends gps_positionDeleteManyArgs>(args?: SelectSubset<T, gps_positionDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Gps_positions.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {gps_positionUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many Gps_positions
     * const gps_position = await prisma.gps_position.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends gps_positionUpdateManyArgs>(args: SelectSubset<T, gps_positionUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>


    /**
     * Count the number of Gps_positions.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {gps_positionCountArgs} args - Arguments to filter Gps_positions to count.
     * @example
     * // Count the number of Gps_positions
     * const count = await prisma.gps_position.count({
     *   where: {
     *     // ... the filter for the Gps_positions we want to count
     *   }
     * })
    **/
    count<T extends gps_positionCountArgs>(
      args?: Subset<T, gps_positionCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], Gps_positionCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a Gps_position.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {Gps_positionAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends Gps_positionAggregateArgs>(args: Subset<T, Gps_positionAggregateArgs>): Prisma.PrismaPromise<GetGps_positionAggregateType<T>>

    /**
     * Group by Gps_position.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {gps_positionGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends gps_positionGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: gps_positionGroupByArgs['orderBy'] }
        : { orderBy?: gps_positionGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, gps_positionGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetGps_positionGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the gps_position model
   */
  readonly fields: gps_positionFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for gps_position.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__gps_positionClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    device<T extends gps_position$deviceArgs<ExtArgs> = {}>(args?: Subset<T, gps_position$deviceArgs<ExtArgs>>): Prisma__deviceClient<$Result.GetResult<Prisma.$devicePayload<ExtArgs>, T, "findUniqueOrThrow"> | null, null, ExtArgs>
    truck<T extends truckDefaultArgs<ExtArgs> = {}>(args?: Subset<T, truckDefaultArgs<ExtArgs>>): Prisma__truckClient<$Result.GetResult<Prisma.$truckPayload<ExtArgs>, T, "findUniqueOrThrow"> | Null, Null, ExtArgs>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the gps_position model
   */ 
  interface gps_positionFieldRefs {
    readonly id: FieldRef<"gps_position", 'BigInt'>
    readonly device_id: FieldRef<"gps_position", 'String'>
    readonly truck_id: FieldRef<"gps_position", 'String'>
    readonly ts: FieldRef<"gps_position", 'DateTime'>
    readonly speed_kph: FieldRef<"gps_position", 'Float'>
    readonly heading_deg: FieldRef<"gps_position", 'Float'>
    readonly hdop: FieldRef<"gps_position", 'Float'>
    readonly source: FieldRef<"gps_position", 'String'>
  }
    

  // Custom InputTypes
  /**
   * gps_position findUnique
   */
  export type gps_positionFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the gps_position
     */
    select?: gps_positionSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: gps_positionInclude<ExtArgs> | null
    /**
     * Filter, which gps_position to fetch.
     */
    where: gps_positionWhereUniqueInput
  }

  /**
   * gps_position findUniqueOrThrow
   */
  export type gps_positionFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the gps_position
     */
    select?: gps_positionSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: gps_positionInclude<ExtArgs> | null
    /**
     * Filter, which gps_position to fetch.
     */
    where: gps_positionWhereUniqueInput
  }

  /**
   * gps_position findFirst
   */
  export type gps_positionFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the gps_position
     */
    select?: gps_positionSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: gps_positionInclude<ExtArgs> | null
    /**
     * Filter, which gps_position to fetch.
     */
    where?: gps_positionWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of gps_positions to fetch.
     */
    orderBy?: gps_positionOrderByWithRelationInput | gps_positionOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for gps_positions.
     */
    cursor?: gps_positionWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` gps_positions from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` gps_positions.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of gps_positions.
     */
    distinct?: Gps_positionScalarFieldEnum | Gps_positionScalarFieldEnum[]
  }

  /**
   * gps_position findFirstOrThrow
   */
  export type gps_positionFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the gps_position
     */
    select?: gps_positionSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: gps_positionInclude<ExtArgs> | null
    /**
     * Filter, which gps_position to fetch.
     */
    where?: gps_positionWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of gps_positions to fetch.
     */
    orderBy?: gps_positionOrderByWithRelationInput | gps_positionOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for gps_positions.
     */
    cursor?: gps_positionWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` gps_positions from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` gps_positions.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of gps_positions.
     */
    distinct?: Gps_positionScalarFieldEnum | Gps_positionScalarFieldEnum[]
  }

  /**
   * gps_position findMany
   */
  export type gps_positionFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the gps_position
     */
    select?: gps_positionSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: gps_positionInclude<ExtArgs> | null
    /**
     * Filter, which gps_positions to fetch.
     */
    where?: gps_positionWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of gps_positions to fetch.
     */
    orderBy?: gps_positionOrderByWithRelationInput | gps_positionOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing gps_positions.
     */
    cursor?: gps_positionWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` gps_positions from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` gps_positions.
     */
    skip?: number
    distinct?: Gps_positionScalarFieldEnum | Gps_positionScalarFieldEnum[]
  }

  /**
   * gps_position update
   */
  export type gps_positionUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the gps_position
     */
    select?: gps_positionSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: gps_positionInclude<ExtArgs> | null
    /**
     * The data needed to update a gps_position.
     */
    data: XOR<gps_positionUpdateInput, gps_positionUncheckedUpdateInput>
    /**
     * Choose, which gps_position to update.
     */
    where: gps_positionWhereUniqueInput
  }

  /**
   * gps_position updateMany
   */
  export type gps_positionUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update gps_positions.
     */
    data: XOR<gps_positionUpdateManyMutationInput, gps_positionUncheckedUpdateManyInput>
    /**
     * Filter which gps_positions to update
     */
    where?: gps_positionWhereInput
  }

  /**
   * gps_position delete
   */
  export type gps_positionDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the gps_position
     */
    select?: gps_positionSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: gps_positionInclude<ExtArgs> | null
    /**
     * Filter which gps_position to delete.
     */
    where: gps_positionWhereUniqueInput
  }

  /**
   * gps_position deleteMany
   */
  export type gps_positionDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which gps_positions to delete
     */
    where?: gps_positionWhereInput
  }

  /**
   * gps_position.device
   */
  export type gps_position$deviceArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the device
     */
    select?: deviceSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: deviceInclude<ExtArgs> | null
    where?: deviceWhereInput
  }

  /**
   * gps_position without action
   */
  export type gps_positionDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the gps_position
     */
    select?: gps_positionSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: gps_positionInclude<ExtArgs> | null
  }


  /**
   * Model hub_temperature_event
   */

  export type AggregateHub_temperature_event = {
    _count: Hub_temperature_eventCountAggregateOutputType | null
    _avg: Hub_temperature_eventAvgAggregateOutputType | null
    _sum: Hub_temperature_eventSumAggregateOutputType | null
    _min: Hub_temperature_eventMinAggregateOutputType | null
    _max: Hub_temperature_eventMaxAggregateOutputType | null
  }

  export type Hub_temperature_eventAvgAggregateOutputType = {
    hub_no: number | null
    temp_celsius: number | null
    battery_level: number | null
  }

  export type Hub_temperature_eventSumAggregateOutputType = {
    hub_no: number | null
    temp_celsius: number | null
    battery_level: number | null
  }

  export type Hub_temperature_eventMinAggregateOutputType = {
    id: string | null
    device_id: string | null
    truck_id: string | null
    hub_no: number | null
    temp_celsius: number | null
    ex_type: string | null
    battery_level: number | null
    changed_at: Date | null
    created_by: string | null
  }

  export type Hub_temperature_eventMaxAggregateOutputType = {
    id: string | null
    device_id: string | null
    truck_id: string | null
    hub_no: number | null
    temp_celsius: number | null
    ex_type: string | null
    battery_level: number | null
    changed_at: Date | null
    created_by: string | null
  }

  export type Hub_temperature_eventCountAggregateOutputType = {
    id: number
    device_id: number
    truck_id: number
    hub_no: number
    temp_celsius: number
    ex_type: number
    battery_level: number
    changed_at: number
    created_by: number
    _all: number
  }


  export type Hub_temperature_eventAvgAggregateInputType = {
    hub_no?: true
    temp_celsius?: true
    battery_level?: true
  }

  export type Hub_temperature_eventSumAggregateInputType = {
    hub_no?: true
    temp_celsius?: true
    battery_level?: true
  }

  export type Hub_temperature_eventMinAggregateInputType = {
    id?: true
    device_id?: true
    truck_id?: true
    hub_no?: true
    temp_celsius?: true
    ex_type?: true
    battery_level?: true
    changed_at?: true
    created_by?: true
  }

  export type Hub_temperature_eventMaxAggregateInputType = {
    id?: true
    device_id?: true
    truck_id?: true
    hub_no?: true
    temp_celsius?: true
    ex_type?: true
    battery_level?: true
    changed_at?: true
    created_by?: true
  }

  export type Hub_temperature_eventCountAggregateInputType = {
    id?: true
    device_id?: true
    truck_id?: true
    hub_no?: true
    temp_celsius?: true
    ex_type?: true
    battery_level?: true
    changed_at?: true
    created_by?: true
    _all?: true
  }

  export type Hub_temperature_eventAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which hub_temperature_event to aggregate.
     */
    where?: hub_temperature_eventWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of hub_temperature_events to fetch.
     */
    orderBy?: hub_temperature_eventOrderByWithRelationInput | hub_temperature_eventOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: hub_temperature_eventWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` hub_temperature_events from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` hub_temperature_events.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned hub_temperature_events
    **/
    _count?: true | Hub_temperature_eventCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: Hub_temperature_eventAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: Hub_temperature_eventSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: Hub_temperature_eventMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: Hub_temperature_eventMaxAggregateInputType
  }

  export type GetHub_temperature_eventAggregateType<T extends Hub_temperature_eventAggregateArgs> = {
        [P in keyof T & keyof AggregateHub_temperature_event]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateHub_temperature_event[P]>
      : GetScalarType<T[P], AggregateHub_temperature_event[P]>
  }




  export type hub_temperature_eventGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: hub_temperature_eventWhereInput
    orderBy?: hub_temperature_eventOrderByWithAggregationInput | hub_temperature_eventOrderByWithAggregationInput[]
    by: Hub_temperature_eventScalarFieldEnum[] | Hub_temperature_eventScalarFieldEnum
    having?: hub_temperature_eventScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: Hub_temperature_eventCountAggregateInputType | true
    _avg?: Hub_temperature_eventAvgAggregateInputType
    _sum?: Hub_temperature_eventSumAggregateInputType
    _min?: Hub_temperature_eventMinAggregateInputType
    _max?: Hub_temperature_eventMaxAggregateInputType
  }

  export type Hub_temperature_eventGroupByOutputType = {
    id: string
    device_id: string
    truck_id: string
    hub_no: number | null
    temp_celsius: number | null
    ex_type: string | null
    battery_level: number | null
    changed_at: Date
    created_by: string | null
    _count: Hub_temperature_eventCountAggregateOutputType | null
    _avg: Hub_temperature_eventAvgAggregateOutputType | null
    _sum: Hub_temperature_eventSumAggregateOutputType | null
    _min: Hub_temperature_eventMinAggregateOutputType | null
    _max: Hub_temperature_eventMaxAggregateOutputType | null
  }

  type GetHub_temperature_eventGroupByPayload<T extends hub_temperature_eventGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<Hub_temperature_eventGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof Hub_temperature_eventGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], Hub_temperature_eventGroupByOutputType[P]>
            : GetScalarType<T[P], Hub_temperature_eventGroupByOutputType[P]>
        }
      >
    >


  export type hub_temperature_eventSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    device_id?: boolean
    truck_id?: boolean
    hub_no?: boolean
    temp_celsius?: boolean
    ex_type?: boolean
    battery_level?: boolean
    changed_at?: boolean
    created_by?: boolean
    device?: boolean | deviceDefaultArgs<ExtArgs>
    truck?: boolean | truckDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["hub_temperature_event"]>

  export type hub_temperature_eventSelectCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    device_id?: boolean
    truck_id?: boolean
    hub_no?: boolean
    temp_celsius?: boolean
    ex_type?: boolean
    battery_level?: boolean
    changed_at?: boolean
    created_by?: boolean
    device?: boolean | deviceDefaultArgs<ExtArgs>
    truck?: boolean | truckDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["hub_temperature_event"]>

  export type hub_temperature_eventSelectScalar = {
    id?: boolean
    device_id?: boolean
    truck_id?: boolean
    hub_no?: boolean
    temp_celsius?: boolean
    ex_type?: boolean
    battery_level?: boolean
    changed_at?: boolean
    created_by?: boolean
  }

  export type hub_temperature_eventInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    device?: boolean | deviceDefaultArgs<ExtArgs>
    truck?: boolean | truckDefaultArgs<ExtArgs>
  }
  export type hub_temperature_eventIncludeCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    device?: boolean | deviceDefaultArgs<ExtArgs>
    truck?: boolean | truckDefaultArgs<ExtArgs>
  }

  export type $hub_temperature_eventPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "hub_temperature_event"
    objects: {
      device: Prisma.$devicePayload<ExtArgs>
      truck: Prisma.$truckPayload<ExtArgs>
    }
    scalars: $Extensions.GetPayloadResult<{
      id: string
      device_id: string
      truck_id: string
      hub_no: number | null
      temp_celsius: number | null
      ex_type: string | null
      battery_level: number | null
      changed_at: Date
      created_by: string | null
    }, ExtArgs["result"]["hub_temperature_event"]>
    composites: {}
  }

  type hub_temperature_eventGetPayload<S extends boolean | null | undefined | hub_temperature_eventDefaultArgs> = $Result.GetResult<Prisma.$hub_temperature_eventPayload, S>

  type hub_temperature_eventCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = 
    Omit<hub_temperature_eventFindManyArgs, 'select' | 'include' | 'distinct'> & {
      select?: Hub_temperature_eventCountAggregateInputType | true
    }

  export interface hub_temperature_eventDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['hub_temperature_event'], meta: { name: 'hub_temperature_event' } }
    /**
     * Find zero or one Hub_temperature_event that matches the filter.
     * @param {hub_temperature_eventFindUniqueArgs} args - Arguments to find a Hub_temperature_event
     * @example
     * // Get one Hub_temperature_event
     * const hub_temperature_event = await prisma.hub_temperature_event.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends hub_temperature_eventFindUniqueArgs>(args: SelectSubset<T, hub_temperature_eventFindUniqueArgs<ExtArgs>>): Prisma__hub_temperature_eventClient<$Result.GetResult<Prisma.$hub_temperature_eventPayload<ExtArgs>, T, "findUnique"> | null, null, ExtArgs>

    /**
     * Find one Hub_temperature_event that matches the filter or throw an error with `error.code='P2025'` 
     * if no matches were found.
     * @param {hub_temperature_eventFindUniqueOrThrowArgs} args - Arguments to find a Hub_temperature_event
     * @example
     * // Get one Hub_temperature_event
     * const hub_temperature_event = await prisma.hub_temperature_event.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends hub_temperature_eventFindUniqueOrThrowArgs>(args: SelectSubset<T, hub_temperature_eventFindUniqueOrThrowArgs<ExtArgs>>): Prisma__hub_temperature_eventClient<$Result.GetResult<Prisma.$hub_temperature_eventPayload<ExtArgs>, T, "findUniqueOrThrow">, never, ExtArgs>

    /**
     * Find the first Hub_temperature_event that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {hub_temperature_eventFindFirstArgs} args - Arguments to find a Hub_temperature_event
     * @example
     * // Get one Hub_temperature_event
     * const hub_temperature_event = await prisma.hub_temperature_event.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends hub_temperature_eventFindFirstArgs>(args?: SelectSubset<T, hub_temperature_eventFindFirstArgs<ExtArgs>>): Prisma__hub_temperature_eventClient<$Result.GetResult<Prisma.$hub_temperature_eventPayload<ExtArgs>, T, "findFirst"> | null, null, ExtArgs>

    /**
     * Find the first Hub_temperature_event that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {hub_temperature_eventFindFirstOrThrowArgs} args - Arguments to find a Hub_temperature_event
     * @example
     * // Get one Hub_temperature_event
     * const hub_temperature_event = await prisma.hub_temperature_event.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends hub_temperature_eventFindFirstOrThrowArgs>(args?: SelectSubset<T, hub_temperature_eventFindFirstOrThrowArgs<ExtArgs>>): Prisma__hub_temperature_eventClient<$Result.GetResult<Prisma.$hub_temperature_eventPayload<ExtArgs>, T, "findFirstOrThrow">, never, ExtArgs>

    /**
     * Find zero or more Hub_temperature_events that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {hub_temperature_eventFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all Hub_temperature_events
     * const hub_temperature_events = await prisma.hub_temperature_event.findMany()
     * 
     * // Get first 10 Hub_temperature_events
     * const hub_temperature_events = await prisma.hub_temperature_event.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const hub_temperature_eventWithIdOnly = await prisma.hub_temperature_event.findMany({ select: { id: true } })
     * 
     */
    findMany<T extends hub_temperature_eventFindManyArgs>(args?: SelectSubset<T, hub_temperature_eventFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$hub_temperature_eventPayload<ExtArgs>, T, "findMany">>

    /**
     * Create a Hub_temperature_event.
     * @param {hub_temperature_eventCreateArgs} args - Arguments to create a Hub_temperature_event.
     * @example
     * // Create one Hub_temperature_event
     * const Hub_temperature_event = await prisma.hub_temperature_event.create({
     *   data: {
     *     // ... data to create a Hub_temperature_event
     *   }
     * })
     * 
     */
    create<T extends hub_temperature_eventCreateArgs>(args: SelectSubset<T, hub_temperature_eventCreateArgs<ExtArgs>>): Prisma__hub_temperature_eventClient<$Result.GetResult<Prisma.$hub_temperature_eventPayload<ExtArgs>, T, "create">, never, ExtArgs>

    /**
     * Create many Hub_temperature_events.
     * @param {hub_temperature_eventCreateManyArgs} args - Arguments to create many Hub_temperature_events.
     * @example
     * // Create many Hub_temperature_events
     * const hub_temperature_event = await prisma.hub_temperature_event.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends hub_temperature_eventCreateManyArgs>(args?: SelectSubset<T, hub_temperature_eventCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create many Hub_temperature_events and returns the data saved in the database.
     * @param {hub_temperature_eventCreateManyAndReturnArgs} args - Arguments to create many Hub_temperature_events.
     * @example
     * // Create many Hub_temperature_events
     * const hub_temperature_event = await prisma.hub_temperature_event.createManyAndReturn({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Create many Hub_temperature_events and only return the `id`
     * const hub_temperature_eventWithIdOnly = await prisma.hub_temperature_event.createManyAndReturn({ 
     *   select: { id: true },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    createManyAndReturn<T extends hub_temperature_eventCreateManyAndReturnArgs>(args?: SelectSubset<T, hub_temperature_eventCreateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$hub_temperature_eventPayload<ExtArgs>, T, "createManyAndReturn">>

    /**
     * Delete a Hub_temperature_event.
     * @param {hub_temperature_eventDeleteArgs} args - Arguments to delete one Hub_temperature_event.
     * @example
     * // Delete one Hub_temperature_event
     * const Hub_temperature_event = await prisma.hub_temperature_event.delete({
     *   where: {
     *     // ... filter to delete one Hub_temperature_event
     *   }
     * })
     * 
     */
    delete<T extends hub_temperature_eventDeleteArgs>(args: SelectSubset<T, hub_temperature_eventDeleteArgs<ExtArgs>>): Prisma__hub_temperature_eventClient<$Result.GetResult<Prisma.$hub_temperature_eventPayload<ExtArgs>, T, "delete">, never, ExtArgs>

    /**
     * Update one Hub_temperature_event.
     * @param {hub_temperature_eventUpdateArgs} args - Arguments to update one Hub_temperature_event.
     * @example
     * // Update one Hub_temperature_event
     * const hub_temperature_event = await prisma.hub_temperature_event.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends hub_temperature_eventUpdateArgs>(args: SelectSubset<T, hub_temperature_eventUpdateArgs<ExtArgs>>): Prisma__hub_temperature_eventClient<$Result.GetResult<Prisma.$hub_temperature_eventPayload<ExtArgs>, T, "update">, never, ExtArgs>

    /**
     * Delete zero or more Hub_temperature_events.
     * @param {hub_temperature_eventDeleteManyArgs} args - Arguments to filter Hub_temperature_events to delete.
     * @example
     * // Delete a few Hub_temperature_events
     * const { count } = await prisma.hub_temperature_event.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends hub_temperature_eventDeleteManyArgs>(args?: SelectSubset<T, hub_temperature_eventDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Hub_temperature_events.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {hub_temperature_eventUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many Hub_temperature_events
     * const hub_temperature_event = await prisma.hub_temperature_event.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends hub_temperature_eventUpdateManyArgs>(args: SelectSubset<T, hub_temperature_eventUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create or update one Hub_temperature_event.
     * @param {hub_temperature_eventUpsertArgs} args - Arguments to update or create a Hub_temperature_event.
     * @example
     * // Update or create a Hub_temperature_event
     * const hub_temperature_event = await prisma.hub_temperature_event.upsert({
     *   create: {
     *     // ... data to create a Hub_temperature_event
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the Hub_temperature_event we want to update
     *   }
     * })
     */
    upsert<T extends hub_temperature_eventUpsertArgs>(args: SelectSubset<T, hub_temperature_eventUpsertArgs<ExtArgs>>): Prisma__hub_temperature_eventClient<$Result.GetResult<Prisma.$hub_temperature_eventPayload<ExtArgs>, T, "upsert">, never, ExtArgs>


    /**
     * Count the number of Hub_temperature_events.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {hub_temperature_eventCountArgs} args - Arguments to filter Hub_temperature_events to count.
     * @example
     * // Count the number of Hub_temperature_events
     * const count = await prisma.hub_temperature_event.count({
     *   where: {
     *     // ... the filter for the Hub_temperature_events we want to count
     *   }
     * })
    **/
    count<T extends hub_temperature_eventCountArgs>(
      args?: Subset<T, hub_temperature_eventCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], Hub_temperature_eventCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a Hub_temperature_event.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {Hub_temperature_eventAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends Hub_temperature_eventAggregateArgs>(args: Subset<T, Hub_temperature_eventAggregateArgs>): Prisma.PrismaPromise<GetHub_temperature_eventAggregateType<T>>

    /**
     * Group by Hub_temperature_event.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {hub_temperature_eventGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends hub_temperature_eventGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: hub_temperature_eventGroupByArgs['orderBy'] }
        : { orderBy?: hub_temperature_eventGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, hub_temperature_eventGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetHub_temperature_eventGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the hub_temperature_event model
   */
  readonly fields: hub_temperature_eventFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for hub_temperature_event.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__hub_temperature_eventClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    device<T extends deviceDefaultArgs<ExtArgs> = {}>(args?: Subset<T, deviceDefaultArgs<ExtArgs>>): Prisma__deviceClient<$Result.GetResult<Prisma.$devicePayload<ExtArgs>, T, "findUniqueOrThrow"> | Null, Null, ExtArgs>
    truck<T extends truckDefaultArgs<ExtArgs> = {}>(args?: Subset<T, truckDefaultArgs<ExtArgs>>): Prisma__truckClient<$Result.GetResult<Prisma.$truckPayload<ExtArgs>, T, "findUniqueOrThrow"> | Null, Null, ExtArgs>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the hub_temperature_event model
   */ 
  interface hub_temperature_eventFieldRefs {
    readonly id: FieldRef<"hub_temperature_event", 'String'>
    readonly device_id: FieldRef<"hub_temperature_event", 'String'>
    readonly truck_id: FieldRef<"hub_temperature_event", 'String'>
    readonly hub_no: FieldRef<"hub_temperature_event", 'Int'>
    readonly temp_celsius: FieldRef<"hub_temperature_event", 'Float'>
    readonly ex_type: FieldRef<"hub_temperature_event", 'String'>
    readonly battery_level: FieldRef<"hub_temperature_event", 'Int'>
    readonly changed_at: FieldRef<"hub_temperature_event", 'DateTime'>
    readonly created_by: FieldRef<"hub_temperature_event", 'String'>
  }
    

  // Custom InputTypes
  /**
   * hub_temperature_event findUnique
   */
  export type hub_temperature_eventFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the hub_temperature_event
     */
    select?: hub_temperature_eventSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: hub_temperature_eventInclude<ExtArgs> | null
    /**
     * Filter, which hub_temperature_event to fetch.
     */
    where: hub_temperature_eventWhereUniqueInput
  }

  /**
   * hub_temperature_event findUniqueOrThrow
   */
  export type hub_temperature_eventFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the hub_temperature_event
     */
    select?: hub_temperature_eventSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: hub_temperature_eventInclude<ExtArgs> | null
    /**
     * Filter, which hub_temperature_event to fetch.
     */
    where: hub_temperature_eventWhereUniqueInput
  }

  /**
   * hub_temperature_event findFirst
   */
  export type hub_temperature_eventFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the hub_temperature_event
     */
    select?: hub_temperature_eventSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: hub_temperature_eventInclude<ExtArgs> | null
    /**
     * Filter, which hub_temperature_event to fetch.
     */
    where?: hub_temperature_eventWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of hub_temperature_events to fetch.
     */
    orderBy?: hub_temperature_eventOrderByWithRelationInput | hub_temperature_eventOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for hub_temperature_events.
     */
    cursor?: hub_temperature_eventWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` hub_temperature_events from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` hub_temperature_events.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of hub_temperature_events.
     */
    distinct?: Hub_temperature_eventScalarFieldEnum | Hub_temperature_eventScalarFieldEnum[]
  }

  /**
   * hub_temperature_event findFirstOrThrow
   */
  export type hub_temperature_eventFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the hub_temperature_event
     */
    select?: hub_temperature_eventSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: hub_temperature_eventInclude<ExtArgs> | null
    /**
     * Filter, which hub_temperature_event to fetch.
     */
    where?: hub_temperature_eventWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of hub_temperature_events to fetch.
     */
    orderBy?: hub_temperature_eventOrderByWithRelationInput | hub_temperature_eventOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for hub_temperature_events.
     */
    cursor?: hub_temperature_eventWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` hub_temperature_events from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` hub_temperature_events.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of hub_temperature_events.
     */
    distinct?: Hub_temperature_eventScalarFieldEnum | Hub_temperature_eventScalarFieldEnum[]
  }

  /**
   * hub_temperature_event findMany
   */
  export type hub_temperature_eventFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the hub_temperature_event
     */
    select?: hub_temperature_eventSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: hub_temperature_eventInclude<ExtArgs> | null
    /**
     * Filter, which hub_temperature_events to fetch.
     */
    where?: hub_temperature_eventWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of hub_temperature_events to fetch.
     */
    orderBy?: hub_temperature_eventOrderByWithRelationInput | hub_temperature_eventOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing hub_temperature_events.
     */
    cursor?: hub_temperature_eventWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` hub_temperature_events from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` hub_temperature_events.
     */
    skip?: number
    distinct?: Hub_temperature_eventScalarFieldEnum | Hub_temperature_eventScalarFieldEnum[]
  }

  /**
   * hub_temperature_event create
   */
  export type hub_temperature_eventCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the hub_temperature_event
     */
    select?: hub_temperature_eventSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: hub_temperature_eventInclude<ExtArgs> | null
    /**
     * The data needed to create a hub_temperature_event.
     */
    data: XOR<hub_temperature_eventCreateInput, hub_temperature_eventUncheckedCreateInput>
  }

  /**
   * hub_temperature_event createMany
   */
  export type hub_temperature_eventCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many hub_temperature_events.
     */
    data: hub_temperature_eventCreateManyInput | hub_temperature_eventCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * hub_temperature_event createManyAndReturn
   */
  export type hub_temperature_eventCreateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the hub_temperature_event
     */
    select?: hub_temperature_eventSelectCreateManyAndReturn<ExtArgs> | null
    /**
     * The data used to create many hub_temperature_events.
     */
    data: hub_temperature_eventCreateManyInput | hub_temperature_eventCreateManyInput[]
    skipDuplicates?: boolean
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: hub_temperature_eventIncludeCreateManyAndReturn<ExtArgs> | null
  }

  /**
   * hub_temperature_event update
   */
  export type hub_temperature_eventUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the hub_temperature_event
     */
    select?: hub_temperature_eventSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: hub_temperature_eventInclude<ExtArgs> | null
    /**
     * The data needed to update a hub_temperature_event.
     */
    data: XOR<hub_temperature_eventUpdateInput, hub_temperature_eventUncheckedUpdateInput>
    /**
     * Choose, which hub_temperature_event to update.
     */
    where: hub_temperature_eventWhereUniqueInput
  }

  /**
   * hub_temperature_event updateMany
   */
  export type hub_temperature_eventUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update hub_temperature_events.
     */
    data: XOR<hub_temperature_eventUpdateManyMutationInput, hub_temperature_eventUncheckedUpdateManyInput>
    /**
     * Filter which hub_temperature_events to update
     */
    where?: hub_temperature_eventWhereInput
  }

  /**
   * hub_temperature_event upsert
   */
  export type hub_temperature_eventUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the hub_temperature_event
     */
    select?: hub_temperature_eventSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: hub_temperature_eventInclude<ExtArgs> | null
    /**
     * The filter to search for the hub_temperature_event to update in case it exists.
     */
    where: hub_temperature_eventWhereUniqueInput
    /**
     * In case the hub_temperature_event found by the `where` argument doesn't exist, create a new hub_temperature_event with this data.
     */
    create: XOR<hub_temperature_eventCreateInput, hub_temperature_eventUncheckedCreateInput>
    /**
     * In case the hub_temperature_event was found with the provided `where` argument, update it with this data.
     */
    update: XOR<hub_temperature_eventUpdateInput, hub_temperature_eventUncheckedUpdateInput>
  }

  /**
   * hub_temperature_event delete
   */
  export type hub_temperature_eventDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the hub_temperature_event
     */
    select?: hub_temperature_eventSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: hub_temperature_eventInclude<ExtArgs> | null
    /**
     * Filter which hub_temperature_event to delete.
     */
    where: hub_temperature_eventWhereUniqueInput
  }

  /**
   * hub_temperature_event deleteMany
   */
  export type hub_temperature_eventDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which hub_temperature_events to delete
     */
    where?: hub_temperature_eventWhereInput
  }

  /**
   * hub_temperature_event without action
   */
  export type hub_temperature_eventDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the hub_temperature_event
     */
    select?: hub_temperature_eventSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: hub_temperature_eventInclude<ExtArgs> | null
  }


  /**
   * Model lock_event
   */

  export type AggregateLock_event = {
    _count: Lock_eventCountAggregateOutputType | null
    _avg: Lock_eventAvgAggregateOutputType | null
    _sum: Lock_eventSumAggregateOutputType | null
    _min: Lock_eventMinAggregateOutputType | null
    _max: Lock_eventMaxAggregateOutputType | null
  }

  export type Lock_eventAvgAggregateOutputType = {
    is_lock: number | null
  }

  export type Lock_eventSumAggregateOutputType = {
    is_lock: number | null
  }

  export type Lock_eventMinAggregateOutputType = {
    id: string | null
    device_id: string | null
    truck_id: string | null
    is_lock: number | null
    reported_at: Date | null
    created_by: string | null
  }

  export type Lock_eventMaxAggregateOutputType = {
    id: string | null
    device_id: string | null
    truck_id: string | null
    is_lock: number | null
    reported_at: Date | null
    created_by: string | null
  }

  export type Lock_eventCountAggregateOutputType = {
    id: number
    device_id: number
    truck_id: number
    is_lock: number
    reported_at: number
    created_by: number
    _all: number
  }


  export type Lock_eventAvgAggregateInputType = {
    is_lock?: true
  }

  export type Lock_eventSumAggregateInputType = {
    is_lock?: true
  }

  export type Lock_eventMinAggregateInputType = {
    id?: true
    device_id?: true
    truck_id?: true
    is_lock?: true
    reported_at?: true
    created_by?: true
  }

  export type Lock_eventMaxAggregateInputType = {
    id?: true
    device_id?: true
    truck_id?: true
    is_lock?: true
    reported_at?: true
    created_by?: true
  }

  export type Lock_eventCountAggregateInputType = {
    id?: true
    device_id?: true
    truck_id?: true
    is_lock?: true
    reported_at?: true
    created_by?: true
    _all?: true
  }

  export type Lock_eventAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which lock_event to aggregate.
     */
    where?: lock_eventWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of lock_events to fetch.
     */
    orderBy?: lock_eventOrderByWithRelationInput | lock_eventOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: lock_eventWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` lock_events from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` lock_events.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned lock_events
    **/
    _count?: true | Lock_eventCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: Lock_eventAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: Lock_eventSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: Lock_eventMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: Lock_eventMaxAggregateInputType
  }

  export type GetLock_eventAggregateType<T extends Lock_eventAggregateArgs> = {
        [P in keyof T & keyof AggregateLock_event]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateLock_event[P]>
      : GetScalarType<T[P], AggregateLock_event[P]>
  }




  export type lock_eventGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: lock_eventWhereInput
    orderBy?: lock_eventOrderByWithAggregationInput | lock_eventOrderByWithAggregationInput[]
    by: Lock_eventScalarFieldEnum[] | Lock_eventScalarFieldEnum
    having?: lock_eventScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: Lock_eventCountAggregateInputType | true
    _avg?: Lock_eventAvgAggregateInputType
    _sum?: Lock_eventSumAggregateInputType
    _min?: Lock_eventMinAggregateInputType
    _max?: Lock_eventMaxAggregateInputType
  }

  export type Lock_eventGroupByOutputType = {
    id: string
    device_id: string
    truck_id: string
    is_lock: number | null
    reported_at: Date
    created_by: string | null
    _count: Lock_eventCountAggregateOutputType | null
    _avg: Lock_eventAvgAggregateOutputType | null
    _sum: Lock_eventSumAggregateOutputType | null
    _min: Lock_eventMinAggregateOutputType | null
    _max: Lock_eventMaxAggregateOutputType | null
  }

  type GetLock_eventGroupByPayload<T extends lock_eventGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<Lock_eventGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof Lock_eventGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], Lock_eventGroupByOutputType[P]>
            : GetScalarType<T[P], Lock_eventGroupByOutputType[P]>
        }
      >
    >


  export type lock_eventSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    device_id?: boolean
    truck_id?: boolean
    is_lock?: boolean
    reported_at?: boolean
    created_by?: boolean
    device?: boolean | deviceDefaultArgs<ExtArgs>
    truck?: boolean | truckDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["lock_event"]>

  export type lock_eventSelectCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    device_id?: boolean
    truck_id?: boolean
    is_lock?: boolean
    reported_at?: boolean
    created_by?: boolean
    device?: boolean | deviceDefaultArgs<ExtArgs>
    truck?: boolean | truckDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["lock_event"]>

  export type lock_eventSelectScalar = {
    id?: boolean
    device_id?: boolean
    truck_id?: boolean
    is_lock?: boolean
    reported_at?: boolean
    created_by?: boolean
  }

  export type lock_eventInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    device?: boolean | deviceDefaultArgs<ExtArgs>
    truck?: boolean | truckDefaultArgs<ExtArgs>
  }
  export type lock_eventIncludeCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    device?: boolean | deviceDefaultArgs<ExtArgs>
    truck?: boolean | truckDefaultArgs<ExtArgs>
  }

  export type $lock_eventPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "lock_event"
    objects: {
      device: Prisma.$devicePayload<ExtArgs>
      truck: Prisma.$truckPayload<ExtArgs>
    }
    scalars: $Extensions.GetPayloadResult<{
      id: string
      device_id: string
      truck_id: string
      is_lock: number | null
      reported_at: Date
      created_by: string | null
    }, ExtArgs["result"]["lock_event"]>
    composites: {}
  }

  type lock_eventGetPayload<S extends boolean | null | undefined | lock_eventDefaultArgs> = $Result.GetResult<Prisma.$lock_eventPayload, S>

  type lock_eventCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = 
    Omit<lock_eventFindManyArgs, 'select' | 'include' | 'distinct'> & {
      select?: Lock_eventCountAggregateInputType | true
    }

  export interface lock_eventDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['lock_event'], meta: { name: 'lock_event' } }
    /**
     * Find zero or one Lock_event that matches the filter.
     * @param {lock_eventFindUniqueArgs} args - Arguments to find a Lock_event
     * @example
     * // Get one Lock_event
     * const lock_event = await prisma.lock_event.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends lock_eventFindUniqueArgs>(args: SelectSubset<T, lock_eventFindUniqueArgs<ExtArgs>>): Prisma__lock_eventClient<$Result.GetResult<Prisma.$lock_eventPayload<ExtArgs>, T, "findUnique"> | null, null, ExtArgs>

    /**
     * Find one Lock_event that matches the filter or throw an error with `error.code='P2025'` 
     * if no matches were found.
     * @param {lock_eventFindUniqueOrThrowArgs} args - Arguments to find a Lock_event
     * @example
     * // Get one Lock_event
     * const lock_event = await prisma.lock_event.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends lock_eventFindUniqueOrThrowArgs>(args: SelectSubset<T, lock_eventFindUniqueOrThrowArgs<ExtArgs>>): Prisma__lock_eventClient<$Result.GetResult<Prisma.$lock_eventPayload<ExtArgs>, T, "findUniqueOrThrow">, never, ExtArgs>

    /**
     * Find the first Lock_event that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {lock_eventFindFirstArgs} args - Arguments to find a Lock_event
     * @example
     * // Get one Lock_event
     * const lock_event = await prisma.lock_event.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends lock_eventFindFirstArgs>(args?: SelectSubset<T, lock_eventFindFirstArgs<ExtArgs>>): Prisma__lock_eventClient<$Result.GetResult<Prisma.$lock_eventPayload<ExtArgs>, T, "findFirst"> | null, null, ExtArgs>

    /**
     * Find the first Lock_event that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {lock_eventFindFirstOrThrowArgs} args - Arguments to find a Lock_event
     * @example
     * // Get one Lock_event
     * const lock_event = await prisma.lock_event.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends lock_eventFindFirstOrThrowArgs>(args?: SelectSubset<T, lock_eventFindFirstOrThrowArgs<ExtArgs>>): Prisma__lock_eventClient<$Result.GetResult<Prisma.$lock_eventPayload<ExtArgs>, T, "findFirstOrThrow">, never, ExtArgs>

    /**
     * Find zero or more Lock_events that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {lock_eventFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all Lock_events
     * const lock_events = await prisma.lock_event.findMany()
     * 
     * // Get first 10 Lock_events
     * const lock_events = await prisma.lock_event.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const lock_eventWithIdOnly = await prisma.lock_event.findMany({ select: { id: true } })
     * 
     */
    findMany<T extends lock_eventFindManyArgs>(args?: SelectSubset<T, lock_eventFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$lock_eventPayload<ExtArgs>, T, "findMany">>

    /**
     * Create a Lock_event.
     * @param {lock_eventCreateArgs} args - Arguments to create a Lock_event.
     * @example
     * // Create one Lock_event
     * const Lock_event = await prisma.lock_event.create({
     *   data: {
     *     // ... data to create a Lock_event
     *   }
     * })
     * 
     */
    create<T extends lock_eventCreateArgs>(args: SelectSubset<T, lock_eventCreateArgs<ExtArgs>>): Prisma__lock_eventClient<$Result.GetResult<Prisma.$lock_eventPayload<ExtArgs>, T, "create">, never, ExtArgs>

    /**
     * Create many Lock_events.
     * @param {lock_eventCreateManyArgs} args - Arguments to create many Lock_events.
     * @example
     * // Create many Lock_events
     * const lock_event = await prisma.lock_event.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends lock_eventCreateManyArgs>(args?: SelectSubset<T, lock_eventCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create many Lock_events and returns the data saved in the database.
     * @param {lock_eventCreateManyAndReturnArgs} args - Arguments to create many Lock_events.
     * @example
     * // Create many Lock_events
     * const lock_event = await prisma.lock_event.createManyAndReturn({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Create many Lock_events and only return the `id`
     * const lock_eventWithIdOnly = await prisma.lock_event.createManyAndReturn({ 
     *   select: { id: true },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    createManyAndReturn<T extends lock_eventCreateManyAndReturnArgs>(args?: SelectSubset<T, lock_eventCreateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$lock_eventPayload<ExtArgs>, T, "createManyAndReturn">>

    /**
     * Delete a Lock_event.
     * @param {lock_eventDeleteArgs} args - Arguments to delete one Lock_event.
     * @example
     * // Delete one Lock_event
     * const Lock_event = await prisma.lock_event.delete({
     *   where: {
     *     // ... filter to delete one Lock_event
     *   }
     * })
     * 
     */
    delete<T extends lock_eventDeleteArgs>(args: SelectSubset<T, lock_eventDeleteArgs<ExtArgs>>): Prisma__lock_eventClient<$Result.GetResult<Prisma.$lock_eventPayload<ExtArgs>, T, "delete">, never, ExtArgs>

    /**
     * Update one Lock_event.
     * @param {lock_eventUpdateArgs} args - Arguments to update one Lock_event.
     * @example
     * // Update one Lock_event
     * const lock_event = await prisma.lock_event.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends lock_eventUpdateArgs>(args: SelectSubset<T, lock_eventUpdateArgs<ExtArgs>>): Prisma__lock_eventClient<$Result.GetResult<Prisma.$lock_eventPayload<ExtArgs>, T, "update">, never, ExtArgs>

    /**
     * Delete zero or more Lock_events.
     * @param {lock_eventDeleteManyArgs} args - Arguments to filter Lock_events to delete.
     * @example
     * // Delete a few Lock_events
     * const { count } = await prisma.lock_event.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends lock_eventDeleteManyArgs>(args?: SelectSubset<T, lock_eventDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Lock_events.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {lock_eventUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many Lock_events
     * const lock_event = await prisma.lock_event.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends lock_eventUpdateManyArgs>(args: SelectSubset<T, lock_eventUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create or update one Lock_event.
     * @param {lock_eventUpsertArgs} args - Arguments to update or create a Lock_event.
     * @example
     * // Update or create a Lock_event
     * const lock_event = await prisma.lock_event.upsert({
     *   create: {
     *     // ... data to create a Lock_event
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the Lock_event we want to update
     *   }
     * })
     */
    upsert<T extends lock_eventUpsertArgs>(args: SelectSubset<T, lock_eventUpsertArgs<ExtArgs>>): Prisma__lock_eventClient<$Result.GetResult<Prisma.$lock_eventPayload<ExtArgs>, T, "upsert">, never, ExtArgs>


    /**
     * Count the number of Lock_events.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {lock_eventCountArgs} args - Arguments to filter Lock_events to count.
     * @example
     * // Count the number of Lock_events
     * const count = await prisma.lock_event.count({
     *   where: {
     *     // ... the filter for the Lock_events we want to count
     *   }
     * })
    **/
    count<T extends lock_eventCountArgs>(
      args?: Subset<T, lock_eventCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], Lock_eventCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a Lock_event.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {Lock_eventAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends Lock_eventAggregateArgs>(args: Subset<T, Lock_eventAggregateArgs>): Prisma.PrismaPromise<GetLock_eventAggregateType<T>>

    /**
     * Group by Lock_event.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {lock_eventGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends lock_eventGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: lock_eventGroupByArgs['orderBy'] }
        : { orderBy?: lock_eventGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, lock_eventGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetLock_eventGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the lock_event model
   */
  readonly fields: lock_eventFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for lock_event.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__lock_eventClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    device<T extends deviceDefaultArgs<ExtArgs> = {}>(args?: Subset<T, deviceDefaultArgs<ExtArgs>>): Prisma__deviceClient<$Result.GetResult<Prisma.$devicePayload<ExtArgs>, T, "findUniqueOrThrow"> | Null, Null, ExtArgs>
    truck<T extends truckDefaultArgs<ExtArgs> = {}>(args?: Subset<T, truckDefaultArgs<ExtArgs>>): Prisma__truckClient<$Result.GetResult<Prisma.$truckPayload<ExtArgs>, T, "findUniqueOrThrow"> | Null, Null, ExtArgs>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the lock_event model
   */ 
  interface lock_eventFieldRefs {
    readonly id: FieldRef<"lock_event", 'String'>
    readonly device_id: FieldRef<"lock_event", 'String'>
    readonly truck_id: FieldRef<"lock_event", 'String'>
    readonly is_lock: FieldRef<"lock_event", 'Int'>
    readonly reported_at: FieldRef<"lock_event", 'DateTime'>
    readonly created_by: FieldRef<"lock_event", 'String'>
  }
    

  // Custom InputTypes
  /**
   * lock_event findUnique
   */
  export type lock_eventFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the lock_event
     */
    select?: lock_eventSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: lock_eventInclude<ExtArgs> | null
    /**
     * Filter, which lock_event to fetch.
     */
    where: lock_eventWhereUniqueInput
  }

  /**
   * lock_event findUniqueOrThrow
   */
  export type lock_eventFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the lock_event
     */
    select?: lock_eventSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: lock_eventInclude<ExtArgs> | null
    /**
     * Filter, which lock_event to fetch.
     */
    where: lock_eventWhereUniqueInput
  }

  /**
   * lock_event findFirst
   */
  export type lock_eventFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the lock_event
     */
    select?: lock_eventSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: lock_eventInclude<ExtArgs> | null
    /**
     * Filter, which lock_event to fetch.
     */
    where?: lock_eventWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of lock_events to fetch.
     */
    orderBy?: lock_eventOrderByWithRelationInput | lock_eventOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for lock_events.
     */
    cursor?: lock_eventWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` lock_events from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` lock_events.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of lock_events.
     */
    distinct?: Lock_eventScalarFieldEnum | Lock_eventScalarFieldEnum[]
  }

  /**
   * lock_event findFirstOrThrow
   */
  export type lock_eventFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the lock_event
     */
    select?: lock_eventSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: lock_eventInclude<ExtArgs> | null
    /**
     * Filter, which lock_event to fetch.
     */
    where?: lock_eventWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of lock_events to fetch.
     */
    orderBy?: lock_eventOrderByWithRelationInput | lock_eventOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for lock_events.
     */
    cursor?: lock_eventWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` lock_events from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` lock_events.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of lock_events.
     */
    distinct?: Lock_eventScalarFieldEnum | Lock_eventScalarFieldEnum[]
  }

  /**
   * lock_event findMany
   */
  export type lock_eventFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the lock_event
     */
    select?: lock_eventSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: lock_eventInclude<ExtArgs> | null
    /**
     * Filter, which lock_events to fetch.
     */
    where?: lock_eventWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of lock_events to fetch.
     */
    orderBy?: lock_eventOrderByWithRelationInput | lock_eventOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing lock_events.
     */
    cursor?: lock_eventWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` lock_events from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` lock_events.
     */
    skip?: number
    distinct?: Lock_eventScalarFieldEnum | Lock_eventScalarFieldEnum[]
  }

  /**
   * lock_event create
   */
  export type lock_eventCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the lock_event
     */
    select?: lock_eventSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: lock_eventInclude<ExtArgs> | null
    /**
     * The data needed to create a lock_event.
     */
    data: XOR<lock_eventCreateInput, lock_eventUncheckedCreateInput>
  }

  /**
   * lock_event createMany
   */
  export type lock_eventCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many lock_events.
     */
    data: lock_eventCreateManyInput | lock_eventCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * lock_event createManyAndReturn
   */
  export type lock_eventCreateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the lock_event
     */
    select?: lock_eventSelectCreateManyAndReturn<ExtArgs> | null
    /**
     * The data used to create many lock_events.
     */
    data: lock_eventCreateManyInput | lock_eventCreateManyInput[]
    skipDuplicates?: boolean
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: lock_eventIncludeCreateManyAndReturn<ExtArgs> | null
  }

  /**
   * lock_event update
   */
  export type lock_eventUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the lock_event
     */
    select?: lock_eventSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: lock_eventInclude<ExtArgs> | null
    /**
     * The data needed to update a lock_event.
     */
    data: XOR<lock_eventUpdateInput, lock_eventUncheckedUpdateInput>
    /**
     * Choose, which lock_event to update.
     */
    where: lock_eventWhereUniqueInput
  }

  /**
   * lock_event updateMany
   */
  export type lock_eventUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update lock_events.
     */
    data: XOR<lock_eventUpdateManyMutationInput, lock_eventUncheckedUpdateManyInput>
    /**
     * Filter which lock_events to update
     */
    where?: lock_eventWhereInput
  }

  /**
   * lock_event upsert
   */
  export type lock_eventUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the lock_event
     */
    select?: lock_eventSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: lock_eventInclude<ExtArgs> | null
    /**
     * The filter to search for the lock_event to update in case it exists.
     */
    where: lock_eventWhereUniqueInput
    /**
     * In case the lock_event found by the `where` argument doesn't exist, create a new lock_event with this data.
     */
    create: XOR<lock_eventCreateInput, lock_eventUncheckedCreateInput>
    /**
     * In case the lock_event was found with the provided `where` argument, update it with this data.
     */
    update: XOR<lock_eventUpdateInput, lock_eventUncheckedUpdateInput>
  }

  /**
   * lock_event delete
   */
  export type lock_eventDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the lock_event
     */
    select?: lock_eventSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: lock_eventInclude<ExtArgs> | null
    /**
     * Filter which lock_event to delete.
     */
    where: lock_eventWhereUniqueInput
  }

  /**
   * lock_event deleteMany
   */
  export type lock_eventDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which lock_events to delete
     */
    where?: lock_eventWhereInput
  }

  /**
   * lock_event without action
   */
  export type lock_eventDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the lock_event
     */
    select?: lock_eventSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: lock_eventInclude<ExtArgs> | null
  }


  /**
   * Model sensor
   */

  export type AggregateSensor = {
    _count: SensorCountAggregateOutputType | null
    _avg: SensorAvgAggregateOutputType | null
    _sum: SensorSumAggregateOutputType | null
    _min: SensorMinAggregateOutputType | null
    _max: SensorMaxAggregateOutputType | null
  }

  export type SensorAvgAggregateOutputType = {
    position_no: number | null
  }

  export type SensorSumAggregateOutputType = {
    position_no: number | null
  }

  export type SensorMinAggregateOutputType = {
    id: string | null
    device_id: string | null
    type: string | null
    position_no: number | null
    sn: string | null
    installed_at: Date | null
    removed_at: Date | null
    created_by: string | null
    updated_by: string | null
  }

  export type SensorMaxAggregateOutputType = {
    id: string | null
    device_id: string | null
    type: string | null
    position_no: number | null
    sn: string | null
    installed_at: Date | null
    removed_at: Date | null
    created_by: string | null
    updated_by: string | null
  }

  export type SensorCountAggregateOutputType = {
    id: number
    device_id: number
    type: number
    position_no: number
    sn: number
    installed_at: number
    removed_at: number
    created_by: number
    updated_by: number
    _all: number
  }


  export type SensorAvgAggregateInputType = {
    position_no?: true
  }

  export type SensorSumAggregateInputType = {
    position_no?: true
  }

  export type SensorMinAggregateInputType = {
    id?: true
    device_id?: true
    type?: true
    position_no?: true
    sn?: true
    installed_at?: true
    removed_at?: true
    created_by?: true
    updated_by?: true
  }

  export type SensorMaxAggregateInputType = {
    id?: true
    device_id?: true
    type?: true
    position_no?: true
    sn?: true
    installed_at?: true
    removed_at?: true
    created_by?: true
    updated_by?: true
  }

  export type SensorCountAggregateInputType = {
    id?: true
    device_id?: true
    type?: true
    position_no?: true
    sn?: true
    installed_at?: true
    removed_at?: true
    created_by?: true
    updated_by?: true
    _all?: true
  }

  export type SensorAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which sensor to aggregate.
     */
    where?: sensorWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of sensors to fetch.
     */
    orderBy?: sensorOrderByWithRelationInput | sensorOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: sensorWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` sensors from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` sensors.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned sensors
    **/
    _count?: true | SensorCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: SensorAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: SensorSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: SensorMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: SensorMaxAggregateInputType
  }

  export type GetSensorAggregateType<T extends SensorAggregateArgs> = {
        [P in keyof T & keyof AggregateSensor]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateSensor[P]>
      : GetScalarType<T[P], AggregateSensor[P]>
  }




  export type sensorGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: sensorWhereInput
    orderBy?: sensorOrderByWithAggregationInput | sensorOrderByWithAggregationInput[]
    by: SensorScalarFieldEnum[] | SensorScalarFieldEnum
    having?: sensorScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: SensorCountAggregateInputType | true
    _avg?: SensorAvgAggregateInputType
    _sum?: SensorSumAggregateInputType
    _min?: SensorMinAggregateInputType
    _max?: SensorMaxAggregateInputType
  }

  export type SensorGroupByOutputType = {
    id: string
    device_id: string
    type: string | null
    position_no: number
    sn: string | null
    installed_at: Date | null
    removed_at: Date | null
    created_by: string | null
    updated_by: string | null
    _count: SensorCountAggregateOutputType | null
    _avg: SensorAvgAggregateOutputType | null
    _sum: SensorSumAggregateOutputType | null
    _min: SensorMinAggregateOutputType | null
    _max: SensorMaxAggregateOutputType | null
  }

  type GetSensorGroupByPayload<T extends sensorGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<SensorGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof SensorGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], SensorGroupByOutputType[P]>
            : GetScalarType<T[P], SensorGroupByOutputType[P]>
        }
      >
    >


  export type sensorSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    device_id?: boolean
    type?: boolean
    position_no?: boolean
    sn?: boolean
    installed_at?: boolean
    removed_at?: boolean
    created_by?: boolean
    updated_by?: boolean
    device?: boolean | deviceDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["sensor"]>

  export type sensorSelectCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    device_id?: boolean
    type?: boolean
    position_no?: boolean
    sn?: boolean
    installed_at?: boolean
    removed_at?: boolean
    created_by?: boolean
    updated_by?: boolean
    device?: boolean | deviceDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["sensor"]>

  export type sensorSelectScalar = {
    id?: boolean
    device_id?: boolean
    type?: boolean
    position_no?: boolean
    sn?: boolean
    installed_at?: boolean
    removed_at?: boolean
    created_by?: boolean
    updated_by?: boolean
  }

  export type sensorInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    device?: boolean | deviceDefaultArgs<ExtArgs>
  }
  export type sensorIncludeCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    device?: boolean | deviceDefaultArgs<ExtArgs>
  }

  export type $sensorPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "sensor"
    objects: {
      device: Prisma.$devicePayload<ExtArgs>
    }
    scalars: $Extensions.GetPayloadResult<{
      id: string
      device_id: string
      type: string | null
      position_no: number
      sn: string | null
      installed_at: Date | null
      removed_at: Date | null
      created_by: string | null
      updated_by: string | null
    }, ExtArgs["result"]["sensor"]>
    composites: {}
  }

  type sensorGetPayload<S extends boolean | null | undefined | sensorDefaultArgs> = $Result.GetResult<Prisma.$sensorPayload, S>

  type sensorCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = 
    Omit<sensorFindManyArgs, 'select' | 'include' | 'distinct'> & {
      select?: SensorCountAggregateInputType | true
    }

  export interface sensorDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['sensor'], meta: { name: 'sensor' } }
    /**
     * Find zero or one Sensor that matches the filter.
     * @param {sensorFindUniqueArgs} args - Arguments to find a Sensor
     * @example
     * // Get one Sensor
     * const sensor = await prisma.sensor.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends sensorFindUniqueArgs>(args: SelectSubset<T, sensorFindUniqueArgs<ExtArgs>>): Prisma__sensorClient<$Result.GetResult<Prisma.$sensorPayload<ExtArgs>, T, "findUnique"> | null, null, ExtArgs>

    /**
     * Find one Sensor that matches the filter or throw an error with `error.code='P2025'` 
     * if no matches were found.
     * @param {sensorFindUniqueOrThrowArgs} args - Arguments to find a Sensor
     * @example
     * // Get one Sensor
     * const sensor = await prisma.sensor.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends sensorFindUniqueOrThrowArgs>(args: SelectSubset<T, sensorFindUniqueOrThrowArgs<ExtArgs>>): Prisma__sensorClient<$Result.GetResult<Prisma.$sensorPayload<ExtArgs>, T, "findUniqueOrThrow">, never, ExtArgs>

    /**
     * Find the first Sensor that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {sensorFindFirstArgs} args - Arguments to find a Sensor
     * @example
     * // Get one Sensor
     * const sensor = await prisma.sensor.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends sensorFindFirstArgs>(args?: SelectSubset<T, sensorFindFirstArgs<ExtArgs>>): Prisma__sensorClient<$Result.GetResult<Prisma.$sensorPayload<ExtArgs>, T, "findFirst"> | null, null, ExtArgs>

    /**
     * Find the first Sensor that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {sensorFindFirstOrThrowArgs} args - Arguments to find a Sensor
     * @example
     * // Get one Sensor
     * const sensor = await prisma.sensor.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends sensorFindFirstOrThrowArgs>(args?: SelectSubset<T, sensorFindFirstOrThrowArgs<ExtArgs>>): Prisma__sensorClient<$Result.GetResult<Prisma.$sensorPayload<ExtArgs>, T, "findFirstOrThrow">, never, ExtArgs>

    /**
     * Find zero or more Sensors that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {sensorFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all Sensors
     * const sensors = await prisma.sensor.findMany()
     * 
     * // Get first 10 Sensors
     * const sensors = await prisma.sensor.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const sensorWithIdOnly = await prisma.sensor.findMany({ select: { id: true } })
     * 
     */
    findMany<T extends sensorFindManyArgs>(args?: SelectSubset<T, sensorFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$sensorPayload<ExtArgs>, T, "findMany">>

    /**
     * Create a Sensor.
     * @param {sensorCreateArgs} args - Arguments to create a Sensor.
     * @example
     * // Create one Sensor
     * const Sensor = await prisma.sensor.create({
     *   data: {
     *     // ... data to create a Sensor
     *   }
     * })
     * 
     */
    create<T extends sensorCreateArgs>(args: SelectSubset<T, sensorCreateArgs<ExtArgs>>): Prisma__sensorClient<$Result.GetResult<Prisma.$sensorPayload<ExtArgs>, T, "create">, never, ExtArgs>

    /**
     * Create many Sensors.
     * @param {sensorCreateManyArgs} args - Arguments to create many Sensors.
     * @example
     * // Create many Sensors
     * const sensor = await prisma.sensor.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends sensorCreateManyArgs>(args?: SelectSubset<T, sensorCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create many Sensors and returns the data saved in the database.
     * @param {sensorCreateManyAndReturnArgs} args - Arguments to create many Sensors.
     * @example
     * // Create many Sensors
     * const sensor = await prisma.sensor.createManyAndReturn({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Create many Sensors and only return the `id`
     * const sensorWithIdOnly = await prisma.sensor.createManyAndReturn({ 
     *   select: { id: true },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    createManyAndReturn<T extends sensorCreateManyAndReturnArgs>(args?: SelectSubset<T, sensorCreateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$sensorPayload<ExtArgs>, T, "createManyAndReturn">>

    /**
     * Delete a Sensor.
     * @param {sensorDeleteArgs} args - Arguments to delete one Sensor.
     * @example
     * // Delete one Sensor
     * const Sensor = await prisma.sensor.delete({
     *   where: {
     *     // ... filter to delete one Sensor
     *   }
     * })
     * 
     */
    delete<T extends sensorDeleteArgs>(args: SelectSubset<T, sensorDeleteArgs<ExtArgs>>): Prisma__sensorClient<$Result.GetResult<Prisma.$sensorPayload<ExtArgs>, T, "delete">, never, ExtArgs>

    /**
     * Update one Sensor.
     * @param {sensorUpdateArgs} args - Arguments to update one Sensor.
     * @example
     * // Update one Sensor
     * const sensor = await prisma.sensor.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends sensorUpdateArgs>(args: SelectSubset<T, sensorUpdateArgs<ExtArgs>>): Prisma__sensorClient<$Result.GetResult<Prisma.$sensorPayload<ExtArgs>, T, "update">, never, ExtArgs>

    /**
     * Delete zero or more Sensors.
     * @param {sensorDeleteManyArgs} args - Arguments to filter Sensors to delete.
     * @example
     * // Delete a few Sensors
     * const { count } = await prisma.sensor.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends sensorDeleteManyArgs>(args?: SelectSubset<T, sensorDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Sensors.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {sensorUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many Sensors
     * const sensor = await prisma.sensor.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends sensorUpdateManyArgs>(args: SelectSubset<T, sensorUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create or update one Sensor.
     * @param {sensorUpsertArgs} args - Arguments to update or create a Sensor.
     * @example
     * // Update or create a Sensor
     * const sensor = await prisma.sensor.upsert({
     *   create: {
     *     // ... data to create a Sensor
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the Sensor we want to update
     *   }
     * })
     */
    upsert<T extends sensorUpsertArgs>(args: SelectSubset<T, sensorUpsertArgs<ExtArgs>>): Prisma__sensorClient<$Result.GetResult<Prisma.$sensorPayload<ExtArgs>, T, "upsert">, never, ExtArgs>


    /**
     * Count the number of Sensors.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {sensorCountArgs} args - Arguments to filter Sensors to count.
     * @example
     * // Count the number of Sensors
     * const count = await prisma.sensor.count({
     *   where: {
     *     // ... the filter for the Sensors we want to count
     *   }
     * })
    **/
    count<T extends sensorCountArgs>(
      args?: Subset<T, sensorCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], SensorCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a Sensor.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {SensorAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends SensorAggregateArgs>(args: Subset<T, SensorAggregateArgs>): Prisma.PrismaPromise<GetSensorAggregateType<T>>

    /**
     * Group by Sensor.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {sensorGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends sensorGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: sensorGroupByArgs['orderBy'] }
        : { orderBy?: sensorGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, sensorGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetSensorGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the sensor model
   */
  readonly fields: sensorFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for sensor.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__sensorClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    device<T extends deviceDefaultArgs<ExtArgs> = {}>(args?: Subset<T, deviceDefaultArgs<ExtArgs>>): Prisma__deviceClient<$Result.GetResult<Prisma.$devicePayload<ExtArgs>, T, "findUniqueOrThrow"> | Null, Null, ExtArgs>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the sensor model
   */ 
  interface sensorFieldRefs {
    readonly id: FieldRef<"sensor", 'String'>
    readonly device_id: FieldRef<"sensor", 'String'>
    readonly type: FieldRef<"sensor", 'String'>
    readonly position_no: FieldRef<"sensor", 'Int'>
    readonly sn: FieldRef<"sensor", 'String'>
    readonly installed_at: FieldRef<"sensor", 'DateTime'>
    readonly removed_at: FieldRef<"sensor", 'DateTime'>
    readonly created_by: FieldRef<"sensor", 'String'>
    readonly updated_by: FieldRef<"sensor", 'String'>
  }
    

  // Custom InputTypes
  /**
   * sensor findUnique
   */
  export type sensorFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the sensor
     */
    select?: sensorSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: sensorInclude<ExtArgs> | null
    /**
     * Filter, which sensor to fetch.
     */
    where: sensorWhereUniqueInput
  }

  /**
   * sensor findUniqueOrThrow
   */
  export type sensorFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the sensor
     */
    select?: sensorSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: sensorInclude<ExtArgs> | null
    /**
     * Filter, which sensor to fetch.
     */
    where: sensorWhereUniqueInput
  }

  /**
   * sensor findFirst
   */
  export type sensorFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the sensor
     */
    select?: sensorSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: sensorInclude<ExtArgs> | null
    /**
     * Filter, which sensor to fetch.
     */
    where?: sensorWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of sensors to fetch.
     */
    orderBy?: sensorOrderByWithRelationInput | sensorOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for sensors.
     */
    cursor?: sensorWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` sensors from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` sensors.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of sensors.
     */
    distinct?: SensorScalarFieldEnum | SensorScalarFieldEnum[]
  }

  /**
   * sensor findFirstOrThrow
   */
  export type sensorFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the sensor
     */
    select?: sensorSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: sensorInclude<ExtArgs> | null
    /**
     * Filter, which sensor to fetch.
     */
    where?: sensorWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of sensors to fetch.
     */
    orderBy?: sensorOrderByWithRelationInput | sensorOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for sensors.
     */
    cursor?: sensorWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` sensors from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` sensors.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of sensors.
     */
    distinct?: SensorScalarFieldEnum | SensorScalarFieldEnum[]
  }

  /**
   * sensor findMany
   */
  export type sensorFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the sensor
     */
    select?: sensorSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: sensorInclude<ExtArgs> | null
    /**
     * Filter, which sensors to fetch.
     */
    where?: sensorWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of sensors to fetch.
     */
    orderBy?: sensorOrderByWithRelationInput | sensorOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing sensors.
     */
    cursor?: sensorWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` sensors from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` sensors.
     */
    skip?: number
    distinct?: SensorScalarFieldEnum | SensorScalarFieldEnum[]
  }

  /**
   * sensor create
   */
  export type sensorCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the sensor
     */
    select?: sensorSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: sensorInclude<ExtArgs> | null
    /**
     * The data needed to create a sensor.
     */
    data: XOR<sensorCreateInput, sensorUncheckedCreateInput>
  }

  /**
   * sensor createMany
   */
  export type sensorCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many sensors.
     */
    data: sensorCreateManyInput | sensorCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * sensor createManyAndReturn
   */
  export type sensorCreateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the sensor
     */
    select?: sensorSelectCreateManyAndReturn<ExtArgs> | null
    /**
     * The data used to create many sensors.
     */
    data: sensorCreateManyInput | sensorCreateManyInput[]
    skipDuplicates?: boolean
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: sensorIncludeCreateManyAndReturn<ExtArgs> | null
  }

  /**
   * sensor update
   */
  export type sensorUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the sensor
     */
    select?: sensorSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: sensorInclude<ExtArgs> | null
    /**
     * The data needed to update a sensor.
     */
    data: XOR<sensorUpdateInput, sensorUncheckedUpdateInput>
    /**
     * Choose, which sensor to update.
     */
    where: sensorWhereUniqueInput
  }

  /**
   * sensor updateMany
   */
  export type sensorUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update sensors.
     */
    data: XOR<sensorUpdateManyMutationInput, sensorUncheckedUpdateManyInput>
    /**
     * Filter which sensors to update
     */
    where?: sensorWhereInput
  }

  /**
   * sensor upsert
   */
  export type sensorUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the sensor
     */
    select?: sensorSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: sensorInclude<ExtArgs> | null
    /**
     * The filter to search for the sensor to update in case it exists.
     */
    where: sensorWhereUniqueInput
    /**
     * In case the sensor found by the `where` argument doesn't exist, create a new sensor with this data.
     */
    create: XOR<sensorCreateInput, sensorUncheckedCreateInput>
    /**
     * In case the sensor was found with the provided `where` argument, update it with this data.
     */
    update: XOR<sensorUpdateInput, sensorUncheckedUpdateInput>
  }

  /**
   * sensor delete
   */
  export type sensorDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the sensor
     */
    select?: sensorSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: sensorInclude<ExtArgs> | null
    /**
     * Filter which sensor to delete.
     */
    where: sensorWhereUniqueInput
  }

  /**
   * sensor deleteMany
   */
  export type sensorDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which sensors to delete
     */
    where?: sensorWhereInput
  }

  /**
   * sensor without action
   */
  export type sensorDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the sensor
     */
    select?: sensorSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: sensorInclude<ExtArgs> | null
  }


  /**
   * Model sensor_data_raw
   */

  export type AggregateSensor_data_raw = {
    _count: Sensor_data_rawCountAggregateOutputType | null
    _avg: Sensor_data_rawAvgAggregateOutputType | null
    _sum: Sensor_data_rawSumAggregateOutputType | null
    _min: Sensor_data_rawMinAggregateOutputType | null
    _max: Sensor_data_rawMaxAggregateOutputType | null
  }

  export type Sensor_data_rawAvgAggregateOutputType = {
    tire_no: number | null
  }

  export type Sensor_data_rawSumAggregateOutputType = {
    tire_no: number | null
  }

  export type Sensor_data_rawMinAggregateOutputType = {
    id: string | null
    device_sn: string | null
    cmd_type: string | null
    truck_id: string | null
    tire_no: number | null
    processed: boolean | null
    received_at: Date | null
    processed_at: Date | null
  }

  export type Sensor_data_rawMaxAggregateOutputType = {
    id: string | null
    device_sn: string | null
    cmd_type: string | null
    truck_id: string | null
    tire_no: number | null
    processed: boolean | null
    received_at: Date | null
    processed_at: Date | null
  }

  export type Sensor_data_rawCountAggregateOutputType = {
    id: number
    device_sn: number
    cmd_type: number
    truck_id: number
    tire_no: number
    raw_json: number
    processed: number
    received_at: number
    processed_at: number
    _all: number
  }


  export type Sensor_data_rawAvgAggregateInputType = {
    tire_no?: true
  }

  export type Sensor_data_rawSumAggregateInputType = {
    tire_no?: true
  }

  export type Sensor_data_rawMinAggregateInputType = {
    id?: true
    device_sn?: true
    cmd_type?: true
    truck_id?: true
    tire_no?: true
    processed?: true
    received_at?: true
    processed_at?: true
  }

  export type Sensor_data_rawMaxAggregateInputType = {
    id?: true
    device_sn?: true
    cmd_type?: true
    truck_id?: true
    tire_no?: true
    processed?: true
    received_at?: true
    processed_at?: true
  }

  export type Sensor_data_rawCountAggregateInputType = {
    id?: true
    device_sn?: true
    cmd_type?: true
    truck_id?: true
    tire_no?: true
    raw_json?: true
    processed?: true
    received_at?: true
    processed_at?: true
    _all?: true
  }

  export type Sensor_data_rawAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which sensor_data_raw to aggregate.
     */
    where?: sensor_data_rawWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of sensor_data_raws to fetch.
     */
    orderBy?: sensor_data_rawOrderByWithRelationInput | sensor_data_rawOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: sensor_data_rawWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` sensor_data_raws from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` sensor_data_raws.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned sensor_data_raws
    **/
    _count?: true | Sensor_data_rawCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: Sensor_data_rawAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: Sensor_data_rawSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: Sensor_data_rawMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: Sensor_data_rawMaxAggregateInputType
  }

  export type GetSensor_data_rawAggregateType<T extends Sensor_data_rawAggregateArgs> = {
        [P in keyof T & keyof AggregateSensor_data_raw]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateSensor_data_raw[P]>
      : GetScalarType<T[P], AggregateSensor_data_raw[P]>
  }




  export type sensor_data_rawGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: sensor_data_rawWhereInput
    orderBy?: sensor_data_rawOrderByWithAggregationInput | sensor_data_rawOrderByWithAggregationInput[]
    by: Sensor_data_rawScalarFieldEnum[] | Sensor_data_rawScalarFieldEnum
    having?: sensor_data_rawScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: Sensor_data_rawCountAggregateInputType | true
    _avg?: Sensor_data_rawAvgAggregateInputType
    _sum?: Sensor_data_rawSumAggregateInputType
    _min?: Sensor_data_rawMinAggregateInputType
    _max?: Sensor_data_rawMaxAggregateInputType
  }

  export type Sensor_data_rawGroupByOutputType = {
    id: string
    device_sn: string
    cmd_type: string
    truck_id: string | null
    tire_no: number | null
    raw_json: JsonValue
    processed: boolean | null
    received_at: Date
    processed_at: Date | null
    _count: Sensor_data_rawCountAggregateOutputType | null
    _avg: Sensor_data_rawAvgAggregateOutputType | null
    _sum: Sensor_data_rawSumAggregateOutputType | null
    _min: Sensor_data_rawMinAggregateOutputType | null
    _max: Sensor_data_rawMaxAggregateOutputType | null
  }

  type GetSensor_data_rawGroupByPayload<T extends sensor_data_rawGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<Sensor_data_rawGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof Sensor_data_rawGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], Sensor_data_rawGroupByOutputType[P]>
            : GetScalarType<T[P], Sensor_data_rawGroupByOutputType[P]>
        }
      >
    >


  export type sensor_data_rawSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    device_sn?: boolean
    cmd_type?: boolean
    truck_id?: boolean
    tire_no?: boolean
    raw_json?: boolean
    processed?: boolean
    received_at?: boolean
    processed_at?: boolean
    truck?: boolean | sensor_data_raw$truckArgs<ExtArgs>
    sensor_processing_queue?: boolean | sensor_data_raw$sensor_processing_queueArgs<ExtArgs>
    _count?: boolean | Sensor_data_rawCountOutputTypeDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["sensor_data_raw"]>

  export type sensor_data_rawSelectCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    device_sn?: boolean
    cmd_type?: boolean
    truck_id?: boolean
    tire_no?: boolean
    raw_json?: boolean
    processed?: boolean
    received_at?: boolean
    processed_at?: boolean
    truck?: boolean | sensor_data_raw$truckArgs<ExtArgs>
  }, ExtArgs["result"]["sensor_data_raw"]>

  export type sensor_data_rawSelectScalar = {
    id?: boolean
    device_sn?: boolean
    cmd_type?: boolean
    truck_id?: boolean
    tire_no?: boolean
    raw_json?: boolean
    processed?: boolean
    received_at?: boolean
    processed_at?: boolean
  }

  export type sensor_data_rawInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    truck?: boolean | sensor_data_raw$truckArgs<ExtArgs>
    sensor_processing_queue?: boolean | sensor_data_raw$sensor_processing_queueArgs<ExtArgs>
    _count?: boolean | Sensor_data_rawCountOutputTypeDefaultArgs<ExtArgs>
  }
  export type sensor_data_rawIncludeCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    truck?: boolean | sensor_data_raw$truckArgs<ExtArgs>
  }

  export type $sensor_data_rawPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "sensor_data_raw"
    objects: {
      truck: Prisma.$truckPayload<ExtArgs> | null
      sensor_processing_queue: Prisma.$sensor_processing_queuePayload<ExtArgs>[]
    }
    scalars: $Extensions.GetPayloadResult<{
      id: string
      device_sn: string
      cmd_type: string
      truck_id: string | null
      tire_no: number | null
      raw_json: Prisma.JsonValue
      processed: boolean | null
      received_at: Date
      processed_at: Date | null
    }, ExtArgs["result"]["sensor_data_raw"]>
    composites: {}
  }

  type sensor_data_rawGetPayload<S extends boolean | null | undefined | sensor_data_rawDefaultArgs> = $Result.GetResult<Prisma.$sensor_data_rawPayload, S>

  type sensor_data_rawCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = 
    Omit<sensor_data_rawFindManyArgs, 'select' | 'include' | 'distinct'> & {
      select?: Sensor_data_rawCountAggregateInputType | true
    }

  export interface sensor_data_rawDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['sensor_data_raw'], meta: { name: 'sensor_data_raw' } }
    /**
     * Find zero or one Sensor_data_raw that matches the filter.
     * @param {sensor_data_rawFindUniqueArgs} args - Arguments to find a Sensor_data_raw
     * @example
     * // Get one Sensor_data_raw
     * const sensor_data_raw = await prisma.sensor_data_raw.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends sensor_data_rawFindUniqueArgs>(args: SelectSubset<T, sensor_data_rawFindUniqueArgs<ExtArgs>>): Prisma__sensor_data_rawClient<$Result.GetResult<Prisma.$sensor_data_rawPayload<ExtArgs>, T, "findUnique"> | null, null, ExtArgs>

    /**
     * Find one Sensor_data_raw that matches the filter or throw an error with `error.code='P2025'` 
     * if no matches were found.
     * @param {sensor_data_rawFindUniqueOrThrowArgs} args - Arguments to find a Sensor_data_raw
     * @example
     * // Get one Sensor_data_raw
     * const sensor_data_raw = await prisma.sensor_data_raw.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends sensor_data_rawFindUniqueOrThrowArgs>(args: SelectSubset<T, sensor_data_rawFindUniqueOrThrowArgs<ExtArgs>>): Prisma__sensor_data_rawClient<$Result.GetResult<Prisma.$sensor_data_rawPayload<ExtArgs>, T, "findUniqueOrThrow">, never, ExtArgs>

    /**
     * Find the first Sensor_data_raw that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {sensor_data_rawFindFirstArgs} args - Arguments to find a Sensor_data_raw
     * @example
     * // Get one Sensor_data_raw
     * const sensor_data_raw = await prisma.sensor_data_raw.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends sensor_data_rawFindFirstArgs>(args?: SelectSubset<T, sensor_data_rawFindFirstArgs<ExtArgs>>): Prisma__sensor_data_rawClient<$Result.GetResult<Prisma.$sensor_data_rawPayload<ExtArgs>, T, "findFirst"> | null, null, ExtArgs>

    /**
     * Find the first Sensor_data_raw that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {sensor_data_rawFindFirstOrThrowArgs} args - Arguments to find a Sensor_data_raw
     * @example
     * // Get one Sensor_data_raw
     * const sensor_data_raw = await prisma.sensor_data_raw.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends sensor_data_rawFindFirstOrThrowArgs>(args?: SelectSubset<T, sensor_data_rawFindFirstOrThrowArgs<ExtArgs>>): Prisma__sensor_data_rawClient<$Result.GetResult<Prisma.$sensor_data_rawPayload<ExtArgs>, T, "findFirstOrThrow">, never, ExtArgs>

    /**
     * Find zero or more Sensor_data_raws that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {sensor_data_rawFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all Sensor_data_raws
     * const sensor_data_raws = await prisma.sensor_data_raw.findMany()
     * 
     * // Get first 10 Sensor_data_raws
     * const sensor_data_raws = await prisma.sensor_data_raw.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const sensor_data_rawWithIdOnly = await prisma.sensor_data_raw.findMany({ select: { id: true } })
     * 
     */
    findMany<T extends sensor_data_rawFindManyArgs>(args?: SelectSubset<T, sensor_data_rawFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$sensor_data_rawPayload<ExtArgs>, T, "findMany">>

    /**
     * Create a Sensor_data_raw.
     * @param {sensor_data_rawCreateArgs} args - Arguments to create a Sensor_data_raw.
     * @example
     * // Create one Sensor_data_raw
     * const Sensor_data_raw = await prisma.sensor_data_raw.create({
     *   data: {
     *     // ... data to create a Sensor_data_raw
     *   }
     * })
     * 
     */
    create<T extends sensor_data_rawCreateArgs>(args: SelectSubset<T, sensor_data_rawCreateArgs<ExtArgs>>): Prisma__sensor_data_rawClient<$Result.GetResult<Prisma.$sensor_data_rawPayload<ExtArgs>, T, "create">, never, ExtArgs>

    /**
     * Create many Sensor_data_raws.
     * @param {sensor_data_rawCreateManyArgs} args - Arguments to create many Sensor_data_raws.
     * @example
     * // Create many Sensor_data_raws
     * const sensor_data_raw = await prisma.sensor_data_raw.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends sensor_data_rawCreateManyArgs>(args?: SelectSubset<T, sensor_data_rawCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create many Sensor_data_raws and returns the data saved in the database.
     * @param {sensor_data_rawCreateManyAndReturnArgs} args - Arguments to create many Sensor_data_raws.
     * @example
     * // Create many Sensor_data_raws
     * const sensor_data_raw = await prisma.sensor_data_raw.createManyAndReturn({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Create many Sensor_data_raws and only return the `id`
     * const sensor_data_rawWithIdOnly = await prisma.sensor_data_raw.createManyAndReturn({ 
     *   select: { id: true },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    createManyAndReturn<T extends sensor_data_rawCreateManyAndReturnArgs>(args?: SelectSubset<T, sensor_data_rawCreateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$sensor_data_rawPayload<ExtArgs>, T, "createManyAndReturn">>

    /**
     * Delete a Sensor_data_raw.
     * @param {sensor_data_rawDeleteArgs} args - Arguments to delete one Sensor_data_raw.
     * @example
     * // Delete one Sensor_data_raw
     * const Sensor_data_raw = await prisma.sensor_data_raw.delete({
     *   where: {
     *     // ... filter to delete one Sensor_data_raw
     *   }
     * })
     * 
     */
    delete<T extends sensor_data_rawDeleteArgs>(args: SelectSubset<T, sensor_data_rawDeleteArgs<ExtArgs>>): Prisma__sensor_data_rawClient<$Result.GetResult<Prisma.$sensor_data_rawPayload<ExtArgs>, T, "delete">, never, ExtArgs>

    /**
     * Update one Sensor_data_raw.
     * @param {sensor_data_rawUpdateArgs} args - Arguments to update one Sensor_data_raw.
     * @example
     * // Update one Sensor_data_raw
     * const sensor_data_raw = await prisma.sensor_data_raw.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends sensor_data_rawUpdateArgs>(args: SelectSubset<T, sensor_data_rawUpdateArgs<ExtArgs>>): Prisma__sensor_data_rawClient<$Result.GetResult<Prisma.$sensor_data_rawPayload<ExtArgs>, T, "update">, never, ExtArgs>

    /**
     * Delete zero or more Sensor_data_raws.
     * @param {sensor_data_rawDeleteManyArgs} args - Arguments to filter Sensor_data_raws to delete.
     * @example
     * // Delete a few Sensor_data_raws
     * const { count } = await prisma.sensor_data_raw.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends sensor_data_rawDeleteManyArgs>(args?: SelectSubset<T, sensor_data_rawDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Sensor_data_raws.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {sensor_data_rawUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many Sensor_data_raws
     * const sensor_data_raw = await prisma.sensor_data_raw.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends sensor_data_rawUpdateManyArgs>(args: SelectSubset<T, sensor_data_rawUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create or update one Sensor_data_raw.
     * @param {sensor_data_rawUpsertArgs} args - Arguments to update or create a Sensor_data_raw.
     * @example
     * // Update or create a Sensor_data_raw
     * const sensor_data_raw = await prisma.sensor_data_raw.upsert({
     *   create: {
     *     // ... data to create a Sensor_data_raw
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the Sensor_data_raw we want to update
     *   }
     * })
     */
    upsert<T extends sensor_data_rawUpsertArgs>(args: SelectSubset<T, sensor_data_rawUpsertArgs<ExtArgs>>): Prisma__sensor_data_rawClient<$Result.GetResult<Prisma.$sensor_data_rawPayload<ExtArgs>, T, "upsert">, never, ExtArgs>


    /**
     * Count the number of Sensor_data_raws.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {sensor_data_rawCountArgs} args - Arguments to filter Sensor_data_raws to count.
     * @example
     * // Count the number of Sensor_data_raws
     * const count = await prisma.sensor_data_raw.count({
     *   where: {
     *     // ... the filter for the Sensor_data_raws we want to count
     *   }
     * })
    **/
    count<T extends sensor_data_rawCountArgs>(
      args?: Subset<T, sensor_data_rawCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], Sensor_data_rawCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a Sensor_data_raw.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {Sensor_data_rawAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends Sensor_data_rawAggregateArgs>(args: Subset<T, Sensor_data_rawAggregateArgs>): Prisma.PrismaPromise<GetSensor_data_rawAggregateType<T>>

    /**
     * Group by Sensor_data_raw.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {sensor_data_rawGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends sensor_data_rawGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: sensor_data_rawGroupByArgs['orderBy'] }
        : { orderBy?: sensor_data_rawGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, sensor_data_rawGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetSensor_data_rawGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the sensor_data_raw model
   */
  readonly fields: sensor_data_rawFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for sensor_data_raw.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__sensor_data_rawClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    truck<T extends sensor_data_raw$truckArgs<ExtArgs> = {}>(args?: Subset<T, sensor_data_raw$truckArgs<ExtArgs>>): Prisma__truckClient<$Result.GetResult<Prisma.$truckPayload<ExtArgs>, T, "findUniqueOrThrow"> | null, null, ExtArgs>
    sensor_processing_queue<T extends sensor_data_raw$sensor_processing_queueArgs<ExtArgs> = {}>(args?: Subset<T, sensor_data_raw$sensor_processing_queueArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$sensor_processing_queuePayload<ExtArgs>, T, "findMany"> | Null>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the sensor_data_raw model
   */ 
  interface sensor_data_rawFieldRefs {
    readonly id: FieldRef<"sensor_data_raw", 'String'>
    readonly device_sn: FieldRef<"sensor_data_raw", 'String'>
    readonly cmd_type: FieldRef<"sensor_data_raw", 'String'>
    readonly truck_id: FieldRef<"sensor_data_raw", 'String'>
    readonly tire_no: FieldRef<"sensor_data_raw", 'Int'>
    readonly raw_json: FieldRef<"sensor_data_raw", 'Json'>
    readonly processed: FieldRef<"sensor_data_raw", 'Boolean'>
    readonly received_at: FieldRef<"sensor_data_raw", 'DateTime'>
    readonly processed_at: FieldRef<"sensor_data_raw", 'DateTime'>
  }
    

  // Custom InputTypes
  /**
   * sensor_data_raw findUnique
   */
  export type sensor_data_rawFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the sensor_data_raw
     */
    select?: sensor_data_rawSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: sensor_data_rawInclude<ExtArgs> | null
    /**
     * Filter, which sensor_data_raw to fetch.
     */
    where: sensor_data_rawWhereUniqueInput
  }

  /**
   * sensor_data_raw findUniqueOrThrow
   */
  export type sensor_data_rawFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the sensor_data_raw
     */
    select?: sensor_data_rawSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: sensor_data_rawInclude<ExtArgs> | null
    /**
     * Filter, which sensor_data_raw to fetch.
     */
    where: sensor_data_rawWhereUniqueInput
  }

  /**
   * sensor_data_raw findFirst
   */
  export type sensor_data_rawFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the sensor_data_raw
     */
    select?: sensor_data_rawSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: sensor_data_rawInclude<ExtArgs> | null
    /**
     * Filter, which sensor_data_raw to fetch.
     */
    where?: sensor_data_rawWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of sensor_data_raws to fetch.
     */
    orderBy?: sensor_data_rawOrderByWithRelationInput | sensor_data_rawOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for sensor_data_raws.
     */
    cursor?: sensor_data_rawWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` sensor_data_raws from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` sensor_data_raws.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of sensor_data_raws.
     */
    distinct?: Sensor_data_rawScalarFieldEnum | Sensor_data_rawScalarFieldEnum[]
  }

  /**
   * sensor_data_raw findFirstOrThrow
   */
  export type sensor_data_rawFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the sensor_data_raw
     */
    select?: sensor_data_rawSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: sensor_data_rawInclude<ExtArgs> | null
    /**
     * Filter, which sensor_data_raw to fetch.
     */
    where?: sensor_data_rawWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of sensor_data_raws to fetch.
     */
    orderBy?: sensor_data_rawOrderByWithRelationInput | sensor_data_rawOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for sensor_data_raws.
     */
    cursor?: sensor_data_rawWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` sensor_data_raws from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` sensor_data_raws.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of sensor_data_raws.
     */
    distinct?: Sensor_data_rawScalarFieldEnum | Sensor_data_rawScalarFieldEnum[]
  }

  /**
   * sensor_data_raw findMany
   */
  export type sensor_data_rawFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the sensor_data_raw
     */
    select?: sensor_data_rawSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: sensor_data_rawInclude<ExtArgs> | null
    /**
     * Filter, which sensor_data_raws to fetch.
     */
    where?: sensor_data_rawWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of sensor_data_raws to fetch.
     */
    orderBy?: sensor_data_rawOrderByWithRelationInput | sensor_data_rawOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing sensor_data_raws.
     */
    cursor?: sensor_data_rawWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` sensor_data_raws from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` sensor_data_raws.
     */
    skip?: number
    distinct?: Sensor_data_rawScalarFieldEnum | Sensor_data_rawScalarFieldEnum[]
  }

  /**
   * sensor_data_raw create
   */
  export type sensor_data_rawCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the sensor_data_raw
     */
    select?: sensor_data_rawSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: sensor_data_rawInclude<ExtArgs> | null
    /**
     * The data needed to create a sensor_data_raw.
     */
    data: XOR<sensor_data_rawCreateInput, sensor_data_rawUncheckedCreateInput>
  }

  /**
   * sensor_data_raw createMany
   */
  export type sensor_data_rawCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many sensor_data_raws.
     */
    data: sensor_data_rawCreateManyInput | sensor_data_rawCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * sensor_data_raw createManyAndReturn
   */
  export type sensor_data_rawCreateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the sensor_data_raw
     */
    select?: sensor_data_rawSelectCreateManyAndReturn<ExtArgs> | null
    /**
     * The data used to create many sensor_data_raws.
     */
    data: sensor_data_rawCreateManyInput | sensor_data_rawCreateManyInput[]
    skipDuplicates?: boolean
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: sensor_data_rawIncludeCreateManyAndReturn<ExtArgs> | null
  }

  /**
   * sensor_data_raw update
   */
  export type sensor_data_rawUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the sensor_data_raw
     */
    select?: sensor_data_rawSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: sensor_data_rawInclude<ExtArgs> | null
    /**
     * The data needed to update a sensor_data_raw.
     */
    data: XOR<sensor_data_rawUpdateInput, sensor_data_rawUncheckedUpdateInput>
    /**
     * Choose, which sensor_data_raw to update.
     */
    where: sensor_data_rawWhereUniqueInput
  }

  /**
   * sensor_data_raw updateMany
   */
  export type sensor_data_rawUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update sensor_data_raws.
     */
    data: XOR<sensor_data_rawUpdateManyMutationInput, sensor_data_rawUncheckedUpdateManyInput>
    /**
     * Filter which sensor_data_raws to update
     */
    where?: sensor_data_rawWhereInput
  }

  /**
   * sensor_data_raw upsert
   */
  export type sensor_data_rawUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the sensor_data_raw
     */
    select?: sensor_data_rawSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: sensor_data_rawInclude<ExtArgs> | null
    /**
     * The filter to search for the sensor_data_raw to update in case it exists.
     */
    where: sensor_data_rawWhereUniqueInput
    /**
     * In case the sensor_data_raw found by the `where` argument doesn't exist, create a new sensor_data_raw with this data.
     */
    create: XOR<sensor_data_rawCreateInput, sensor_data_rawUncheckedCreateInput>
    /**
     * In case the sensor_data_raw was found with the provided `where` argument, update it with this data.
     */
    update: XOR<sensor_data_rawUpdateInput, sensor_data_rawUncheckedUpdateInput>
  }

  /**
   * sensor_data_raw delete
   */
  export type sensor_data_rawDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the sensor_data_raw
     */
    select?: sensor_data_rawSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: sensor_data_rawInclude<ExtArgs> | null
    /**
     * Filter which sensor_data_raw to delete.
     */
    where: sensor_data_rawWhereUniqueInput
  }

  /**
   * sensor_data_raw deleteMany
   */
  export type sensor_data_rawDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which sensor_data_raws to delete
     */
    where?: sensor_data_rawWhereInput
  }

  /**
   * sensor_data_raw.truck
   */
  export type sensor_data_raw$truckArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the truck
     */
    select?: truckSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: truckInclude<ExtArgs> | null
    where?: truckWhereInput
  }

  /**
   * sensor_data_raw.sensor_processing_queue
   */
  export type sensor_data_raw$sensor_processing_queueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the sensor_processing_queue
     */
    select?: sensor_processing_queueSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: sensor_processing_queueInclude<ExtArgs> | null
    where?: sensor_processing_queueWhereInput
    orderBy?: sensor_processing_queueOrderByWithRelationInput | sensor_processing_queueOrderByWithRelationInput[]
    cursor?: sensor_processing_queueWhereUniqueInput
    take?: number
    skip?: number
    distinct?: Sensor_processing_queueScalarFieldEnum | Sensor_processing_queueScalarFieldEnum[]
  }

  /**
   * sensor_data_raw without action
   */
  export type sensor_data_rawDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the sensor_data_raw
     */
    select?: sensor_data_rawSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: sensor_data_rawInclude<ExtArgs> | null
  }


  /**
   * Model sensor_processing_queue
   */

  export type AggregateSensor_processing_queue = {
    _count: Sensor_processing_queueCountAggregateOutputType | null
    _avg: Sensor_processing_queueAvgAggregateOutputType | null
    _sum: Sensor_processing_queueSumAggregateOutputType | null
    _min: Sensor_processing_queueMinAggregateOutputType | null
    _max: Sensor_processing_queueMaxAggregateOutputType | null
  }

  export type Sensor_processing_queueAvgAggregateOutputType = {
    priority: number | null
    attempts: number | null
    max_attempts: number | null
  }

  export type Sensor_processing_queueSumAggregateOutputType = {
    priority: number | null
    attempts: number | null
    max_attempts: number | null
  }

  export type Sensor_processing_queueMinAggregateOutputType = {
    id: string | null
    raw_data_id: string | null
    priority: number | null
    attempts: number | null
    max_attempts: number | null
    error_message: string | null
    created_at: Date | null
    processed_at: Date | null
  }

  export type Sensor_processing_queueMaxAggregateOutputType = {
    id: string | null
    raw_data_id: string | null
    priority: number | null
    attempts: number | null
    max_attempts: number | null
    error_message: string | null
    created_at: Date | null
    processed_at: Date | null
  }

  export type Sensor_processing_queueCountAggregateOutputType = {
    id: number
    raw_data_id: number
    priority: number
    attempts: number
    max_attempts: number
    error_message: number
    created_at: number
    processed_at: number
    _all: number
  }


  export type Sensor_processing_queueAvgAggregateInputType = {
    priority?: true
    attempts?: true
    max_attempts?: true
  }

  export type Sensor_processing_queueSumAggregateInputType = {
    priority?: true
    attempts?: true
    max_attempts?: true
  }

  export type Sensor_processing_queueMinAggregateInputType = {
    id?: true
    raw_data_id?: true
    priority?: true
    attempts?: true
    max_attempts?: true
    error_message?: true
    created_at?: true
    processed_at?: true
  }

  export type Sensor_processing_queueMaxAggregateInputType = {
    id?: true
    raw_data_id?: true
    priority?: true
    attempts?: true
    max_attempts?: true
    error_message?: true
    created_at?: true
    processed_at?: true
  }

  export type Sensor_processing_queueCountAggregateInputType = {
    id?: true
    raw_data_id?: true
    priority?: true
    attempts?: true
    max_attempts?: true
    error_message?: true
    created_at?: true
    processed_at?: true
    _all?: true
  }

  export type Sensor_processing_queueAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which sensor_processing_queue to aggregate.
     */
    where?: sensor_processing_queueWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of sensor_processing_queues to fetch.
     */
    orderBy?: sensor_processing_queueOrderByWithRelationInput | sensor_processing_queueOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: sensor_processing_queueWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` sensor_processing_queues from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` sensor_processing_queues.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned sensor_processing_queues
    **/
    _count?: true | Sensor_processing_queueCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: Sensor_processing_queueAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: Sensor_processing_queueSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: Sensor_processing_queueMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: Sensor_processing_queueMaxAggregateInputType
  }

  export type GetSensor_processing_queueAggregateType<T extends Sensor_processing_queueAggregateArgs> = {
        [P in keyof T & keyof AggregateSensor_processing_queue]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateSensor_processing_queue[P]>
      : GetScalarType<T[P], AggregateSensor_processing_queue[P]>
  }




  export type sensor_processing_queueGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: sensor_processing_queueWhereInput
    orderBy?: sensor_processing_queueOrderByWithAggregationInput | sensor_processing_queueOrderByWithAggregationInput[]
    by: Sensor_processing_queueScalarFieldEnum[] | Sensor_processing_queueScalarFieldEnum
    having?: sensor_processing_queueScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: Sensor_processing_queueCountAggregateInputType | true
    _avg?: Sensor_processing_queueAvgAggregateInputType
    _sum?: Sensor_processing_queueSumAggregateInputType
    _min?: Sensor_processing_queueMinAggregateInputType
    _max?: Sensor_processing_queueMaxAggregateInputType
  }

  export type Sensor_processing_queueGroupByOutputType = {
    id: string
    raw_data_id: string | null
    priority: number | null
    attempts: number | null
    max_attempts: number | null
    error_message: string | null
    created_at: Date | null
    processed_at: Date | null
    _count: Sensor_processing_queueCountAggregateOutputType | null
    _avg: Sensor_processing_queueAvgAggregateOutputType | null
    _sum: Sensor_processing_queueSumAggregateOutputType | null
    _min: Sensor_processing_queueMinAggregateOutputType | null
    _max: Sensor_processing_queueMaxAggregateOutputType | null
  }

  type GetSensor_processing_queueGroupByPayload<T extends sensor_processing_queueGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<Sensor_processing_queueGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof Sensor_processing_queueGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], Sensor_processing_queueGroupByOutputType[P]>
            : GetScalarType<T[P], Sensor_processing_queueGroupByOutputType[P]>
        }
      >
    >


  export type sensor_processing_queueSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    raw_data_id?: boolean
    priority?: boolean
    attempts?: boolean
    max_attempts?: boolean
    error_message?: boolean
    created_at?: boolean
    processed_at?: boolean
    sensor_data_raw?: boolean | sensor_processing_queue$sensor_data_rawArgs<ExtArgs>
  }, ExtArgs["result"]["sensor_processing_queue"]>

  export type sensor_processing_queueSelectCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    raw_data_id?: boolean
    priority?: boolean
    attempts?: boolean
    max_attempts?: boolean
    error_message?: boolean
    created_at?: boolean
    processed_at?: boolean
    sensor_data_raw?: boolean | sensor_processing_queue$sensor_data_rawArgs<ExtArgs>
  }, ExtArgs["result"]["sensor_processing_queue"]>

  export type sensor_processing_queueSelectScalar = {
    id?: boolean
    raw_data_id?: boolean
    priority?: boolean
    attempts?: boolean
    max_attempts?: boolean
    error_message?: boolean
    created_at?: boolean
    processed_at?: boolean
  }

  export type sensor_processing_queueInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    sensor_data_raw?: boolean | sensor_processing_queue$sensor_data_rawArgs<ExtArgs>
  }
  export type sensor_processing_queueIncludeCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    sensor_data_raw?: boolean | sensor_processing_queue$sensor_data_rawArgs<ExtArgs>
  }

  export type $sensor_processing_queuePayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "sensor_processing_queue"
    objects: {
      sensor_data_raw: Prisma.$sensor_data_rawPayload<ExtArgs> | null
    }
    scalars: $Extensions.GetPayloadResult<{
      id: string
      raw_data_id: string | null
      priority: number | null
      attempts: number | null
      max_attempts: number | null
      error_message: string | null
      created_at: Date | null
      processed_at: Date | null
    }, ExtArgs["result"]["sensor_processing_queue"]>
    composites: {}
  }

  type sensor_processing_queueGetPayload<S extends boolean | null | undefined | sensor_processing_queueDefaultArgs> = $Result.GetResult<Prisma.$sensor_processing_queuePayload, S>

  type sensor_processing_queueCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = 
    Omit<sensor_processing_queueFindManyArgs, 'select' | 'include' | 'distinct'> & {
      select?: Sensor_processing_queueCountAggregateInputType | true
    }

  export interface sensor_processing_queueDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['sensor_processing_queue'], meta: { name: 'sensor_processing_queue' } }
    /**
     * Find zero or one Sensor_processing_queue that matches the filter.
     * @param {sensor_processing_queueFindUniqueArgs} args - Arguments to find a Sensor_processing_queue
     * @example
     * // Get one Sensor_processing_queue
     * const sensor_processing_queue = await prisma.sensor_processing_queue.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends sensor_processing_queueFindUniqueArgs>(args: SelectSubset<T, sensor_processing_queueFindUniqueArgs<ExtArgs>>): Prisma__sensor_processing_queueClient<$Result.GetResult<Prisma.$sensor_processing_queuePayload<ExtArgs>, T, "findUnique"> | null, null, ExtArgs>

    /**
     * Find one Sensor_processing_queue that matches the filter or throw an error with `error.code='P2025'` 
     * if no matches were found.
     * @param {sensor_processing_queueFindUniqueOrThrowArgs} args - Arguments to find a Sensor_processing_queue
     * @example
     * // Get one Sensor_processing_queue
     * const sensor_processing_queue = await prisma.sensor_processing_queue.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends sensor_processing_queueFindUniqueOrThrowArgs>(args: SelectSubset<T, sensor_processing_queueFindUniqueOrThrowArgs<ExtArgs>>): Prisma__sensor_processing_queueClient<$Result.GetResult<Prisma.$sensor_processing_queuePayload<ExtArgs>, T, "findUniqueOrThrow">, never, ExtArgs>

    /**
     * Find the first Sensor_processing_queue that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {sensor_processing_queueFindFirstArgs} args - Arguments to find a Sensor_processing_queue
     * @example
     * // Get one Sensor_processing_queue
     * const sensor_processing_queue = await prisma.sensor_processing_queue.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends sensor_processing_queueFindFirstArgs>(args?: SelectSubset<T, sensor_processing_queueFindFirstArgs<ExtArgs>>): Prisma__sensor_processing_queueClient<$Result.GetResult<Prisma.$sensor_processing_queuePayload<ExtArgs>, T, "findFirst"> | null, null, ExtArgs>

    /**
     * Find the first Sensor_processing_queue that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {sensor_processing_queueFindFirstOrThrowArgs} args - Arguments to find a Sensor_processing_queue
     * @example
     * // Get one Sensor_processing_queue
     * const sensor_processing_queue = await prisma.sensor_processing_queue.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends sensor_processing_queueFindFirstOrThrowArgs>(args?: SelectSubset<T, sensor_processing_queueFindFirstOrThrowArgs<ExtArgs>>): Prisma__sensor_processing_queueClient<$Result.GetResult<Prisma.$sensor_processing_queuePayload<ExtArgs>, T, "findFirstOrThrow">, never, ExtArgs>

    /**
     * Find zero or more Sensor_processing_queues that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {sensor_processing_queueFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all Sensor_processing_queues
     * const sensor_processing_queues = await prisma.sensor_processing_queue.findMany()
     * 
     * // Get first 10 Sensor_processing_queues
     * const sensor_processing_queues = await prisma.sensor_processing_queue.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const sensor_processing_queueWithIdOnly = await prisma.sensor_processing_queue.findMany({ select: { id: true } })
     * 
     */
    findMany<T extends sensor_processing_queueFindManyArgs>(args?: SelectSubset<T, sensor_processing_queueFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$sensor_processing_queuePayload<ExtArgs>, T, "findMany">>

    /**
     * Create a Sensor_processing_queue.
     * @param {sensor_processing_queueCreateArgs} args - Arguments to create a Sensor_processing_queue.
     * @example
     * // Create one Sensor_processing_queue
     * const Sensor_processing_queue = await prisma.sensor_processing_queue.create({
     *   data: {
     *     // ... data to create a Sensor_processing_queue
     *   }
     * })
     * 
     */
    create<T extends sensor_processing_queueCreateArgs>(args: SelectSubset<T, sensor_processing_queueCreateArgs<ExtArgs>>): Prisma__sensor_processing_queueClient<$Result.GetResult<Prisma.$sensor_processing_queuePayload<ExtArgs>, T, "create">, never, ExtArgs>

    /**
     * Create many Sensor_processing_queues.
     * @param {sensor_processing_queueCreateManyArgs} args - Arguments to create many Sensor_processing_queues.
     * @example
     * // Create many Sensor_processing_queues
     * const sensor_processing_queue = await prisma.sensor_processing_queue.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends sensor_processing_queueCreateManyArgs>(args?: SelectSubset<T, sensor_processing_queueCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create many Sensor_processing_queues and returns the data saved in the database.
     * @param {sensor_processing_queueCreateManyAndReturnArgs} args - Arguments to create many Sensor_processing_queues.
     * @example
     * // Create many Sensor_processing_queues
     * const sensor_processing_queue = await prisma.sensor_processing_queue.createManyAndReturn({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Create many Sensor_processing_queues and only return the `id`
     * const sensor_processing_queueWithIdOnly = await prisma.sensor_processing_queue.createManyAndReturn({ 
     *   select: { id: true },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    createManyAndReturn<T extends sensor_processing_queueCreateManyAndReturnArgs>(args?: SelectSubset<T, sensor_processing_queueCreateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$sensor_processing_queuePayload<ExtArgs>, T, "createManyAndReturn">>

    /**
     * Delete a Sensor_processing_queue.
     * @param {sensor_processing_queueDeleteArgs} args - Arguments to delete one Sensor_processing_queue.
     * @example
     * // Delete one Sensor_processing_queue
     * const Sensor_processing_queue = await prisma.sensor_processing_queue.delete({
     *   where: {
     *     // ... filter to delete one Sensor_processing_queue
     *   }
     * })
     * 
     */
    delete<T extends sensor_processing_queueDeleteArgs>(args: SelectSubset<T, sensor_processing_queueDeleteArgs<ExtArgs>>): Prisma__sensor_processing_queueClient<$Result.GetResult<Prisma.$sensor_processing_queuePayload<ExtArgs>, T, "delete">, never, ExtArgs>

    /**
     * Update one Sensor_processing_queue.
     * @param {sensor_processing_queueUpdateArgs} args - Arguments to update one Sensor_processing_queue.
     * @example
     * // Update one Sensor_processing_queue
     * const sensor_processing_queue = await prisma.sensor_processing_queue.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends sensor_processing_queueUpdateArgs>(args: SelectSubset<T, sensor_processing_queueUpdateArgs<ExtArgs>>): Prisma__sensor_processing_queueClient<$Result.GetResult<Prisma.$sensor_processing_queuePayload<ExtArgs>, T, "update">, never, ExtArgs>

    /**
     * Delete zero or more Sensor_processing_queues.
     * @param {sensor_processing_queueDeleteManyArgs} args - Arguments to filter Sensor_processing_queues to delete.
     * @example
     * // Delete a few Sensor_processing_queues
     * const { count } = await prisma.sensor_processing_queue.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends sensor_processing_queueDeleteManyArgs>(args?: SelectSubset<T, sensor_processing_queueDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Sensor_processing_queues.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {sensor_processing_queueUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many Sensor_processing_queues
     * const sensor_processing_queue = await prisma.sensor_processing_queue.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends sensor_processing_queueUpdateManyArgs>(args: SelectSubset<T, sensor_processing_queueUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create or update one Sensor_processing_queue.
     * @param {sensor_processing_queueUpsertArgs} args - Arguments to update or create a Sensor_processing_queue.
     * @example
     * // Update or create a Sensor_processing_queue
     * const sensor_processing_queue = await prisma.sensor_processing_queue.upsert({
     *   create: {
     *     // ... data to create a Sensor_processing_queue
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the Sensor_processing_queue we want to update
     *   }
     * })
     */
    upsert<T extends sensor_processing_queueUpsertArgs>(args: SelectSubset<T, sensor_processing_queueUpsertArgs<ExtArgs>>): Prisma__sensor_processing_queueClient<$Result.GetResult<Prisma.$sensor_processing_queuePayload<ExtArgs>, T, "upsert">, never, ExtArgs>


    /**
     * Count the number of Sensor_processing_queues.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {sensor_processing_queueCountArgs} args - Arguments to filter Sensor_processing_queues to count.
     * @example
     * // Count the number of Sensor_processing_queues
     * const count = await prisma.sensor_processing_queue.count({
     *   where: {
     *     // ... the filter for the Sensor_processing_queues we want to count
     *   }
     * })
    **/
    count<T extends sensor_processing_queueCountArgs>(
      args?: Subset<T, sensor_processing_queueCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], Sensor_processing_queueCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a Sensor_processing_queue.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {Sensor_processing_queueAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends Sensor_processing_queueAggregateArgs>(args: Subset<T, Sensor_processing_queueAggregateArgs>): Prisma.PrismaPromise<GetSensor_processing_queueAggregateType<T>>

    /**
     * Group by Sensor_processing_queue.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {sensor_processing_queueGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends sensor_processing_queueGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: sensor_processing_queueGroupByArgs['orderBy'] }
        : { orderBy?: sensor_processing_queueGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, sensor_processing_queueGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetSensor_processing_queueGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the sensor_processing_queue model
   */
  readonly fields: sensor_processing_queueFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for sensor_processing_queue.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__sensor_processing_queueClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    sensor_data_raw<T extends sensor_processing_queue$sensor_data_rawArgs<ExtArgs> = {}>(args?: Subset<T, sensor_processing_queue$sensor_data_rawArgs<ExtArgs>>): Prisma__sensor_data_rawClient<$Result.GetResult<Prisma.$sensor_data_rawPayload<ExtArgs>, T, "findUniqueOrThrow"> | null, null, ExtArgs>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the sensor_processing_queue model
   */ 
  interface sensor_processing_queueFieldRefs {
    readonly id: FieldRef<"sensor_processing_queue", 'String'>
    readonly raw_data_id: FieldRef<"sensor_processing_queue", 'String'>
    readonly priority: FieldRef<"sensor_processing_queue", 'Int'>
    readonly attempts: FieldRef<"sensor_processing_queue", 'Int'>
    readonly max_attempts: FieldRef<"sensor_processing_queue", 'Int'>
    readonly error_message: FieldRef<"sensor_processing_queue", 'String'>
    readonly created_at: FieldRef<"sensor_processing_queue", 'DateTime'>
    readonly processed_at: FieldRef<"sensor_processing_queue", 'DateTime'>
  }
    

  // Custom InputTypes
  /**
   * sensor_processing_queue findUnique
   */
  export type sensor_processing_queueFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the sensor_processing_queue
     */
    select?: sensor_processing_queueSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: sensor_processing_queueInclude<ExtArgs> | null
    /**
     * Filter, which sensor_processing_queue to fetch.
     */
    where: sensor_processing_queueWhereUniqueInput
  }

  /**
   * sensor_processing_queue findUniqueOrThrow
   */
  export type sensor_processing_queueFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the sensor_processing_queue
     */
    select?: sensor_processing_queueSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: sensor_processing_queueInclude<ExtArgs> | null
    /**
     * Filter, which sensor_processing_queue to fetch.
     */
    where: sensor_processing_queueWhereUniqueInput
  }

  /**
   * sensor_processing_queue findFirst
   */
  export type sensor_processing_queueFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the sensor_processing_queue
     */
    select?: sensor_processing_queueSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: sensor_processing_queueInclude<ExtArgs> | null
    /**
     * Filter, which sensor_processing_queue to fetch.
     */
    where?: sensor_processing_queueWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of sensor_processing_queues to fetch.
     */
    orderBy?: sensor_processing_queueOrderByWithRelationInput | sensor_processing_queueOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for sensor_processing_queues.
     */
    cursor?: sensor_processing_queueWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` sensor_processing_queues from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` sensor_processing_queues.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of sensor_processing_queues.
     */
    distinct?: Sensor_processing_queueScalarFieldEnum | Sensor_processing_queueScalarFieldEnum[]
  }

  /**
   * sensor_processing_queue findFirstOrThrow
   */
  export type sensor_processing_queueFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the sensor_processing_queue
     */
    select?: sensor_processing_queueSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: sensor_processing_queueInclude<ExtArgs> | null
    /**
     * Filter, which sensor_processing_queue to fetch.
     */
    where?: sensor_processing_queueWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of sensor_processing_queues to fetch.
     */
    orderBy?: sensor_processing_queueOrderByWithRelationInput | sensor_processing_queueOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for sensor_processing_queues.
     */
    cursor?: sensor_processing_queueWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` sensor_processing_queues from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` sensor_processing_queues.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of sensor_processing_queues.
     */
    distinct?: Sensor_processing_queueScalarFieldEnum | Sensor_processing_queueScalarFieldEnum[]
  }

  /**
   * sensor_processing_queue findMany
   */
  export type sensor_processing_queueFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the sensor_processing_queue
     */
    select?: sensor_processing_queueSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: sensor_processing_queueInclude<ExtArgs> | null
    /**
     * Filter, which sensor_processing_queues to fetch.
     */
    where?: sensor_processing_queueWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of sensor_processing_queues to fetch.
     */
    orderBy?: sensor_processing_queueOrderByWithRelationInput | sensor_processing_queueOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing sensor_processing_queues.
     */
    cursor?: sensor_processing_queueWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` sensor_processing_queues from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` sensor_processing_queues.
     */
    skip?: number
    distinct?: Sensor_processing_queueScalarFieldEnum | Sensor_processing_queueScalarFieldEnum[]
  }

  /**
   * sensor_processing_queue create
   */
  export type sensor_processing_queueCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the sensor_processing_queue
     */
    select?: sensor_processing_queueSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: sensor_processing_queueInclude<ExtArgs> | null
    /**
     * The data needed to create a sensor_processing_queue.
     */
    data?: XOR<sensor_processing_queueCreateInput, sensor_processing_queueUncheckedCreateInput>
  }

  /**
   * sensor_processing_queue createMany
   */
  export type sensor_processing_queueCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many sensor_processing_queues.
     */
    data: sensor_processing_queueCreateManyInput | sensor_processing_queueCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * sensor_processing_queue createManyAndReturn
   */
  export type sensor_processing_queueCreateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the sensor_processing_queue
     */
    select?: sensor_processing_queueSelectCreateManyAndReturn<ExtArgs> | null
    /**
     * The data used to create many sensor_processing_queues.
     */
    data: sensor_processing_queueCreateManyInput | sensor_processing_queueCreateManyInput[]
    skipDuplicates?: boolean
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: sensor_processing_queueIncludeCreateManyAndReturn<ExtArgs> | null
  }

  /**
   * sensor_processing_queue update
   */
  export type sensor_processing_queueUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the sensor_processing_queue
     */
    select?: sensor_processing_queueSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: sensor_processing_queueInclude<ExtArgs> | null
    /**
     * The data needed to update a sensor_processing_queue.
     */
    data: XOR<sensor_processing_queueUpdateInput, sensor_processing_queueUncheckedUpdateInput>
    /**
     * Choose, which sensor_processing_queue to update.
     */
    where: sensor_processing_queueWhereUniqueInput
  }

  /**
   * sensor_processing_queue updateMany
   */
  export type sensor_processing_queueUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update sensor_processing_queues.
     */
    data: XOR<sensor_processing_queueUpdateManyMutationInput, sensor_processing_queueUncheckedUpdateManyInput>
    /**
     * Filter which sensor_processing_queues to update
     */
    where?: sensor_processing_queueWhereInput
  }

  /**
   * sensor_processing_queue upsert
   */
  export type sensor_processing_queueUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the sensor_processing_queue
     */
    select?: sensor_processing_queueSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: sensor_processing_queueInclude<ExtArgs> | null
    /**
     * The filter to search for the sensor_processing_queue to update in case it exists.
     */
    where: sensor_processing_queueWhereUniqueInput
    /**
     * In case the sensor_processing_queue found by the `where` argument doesn't exist, create a new sensor_processing_queue with this data.
     */
    create: XOR<sensor_processing_queueCreateInput, sensor_processing_queueUncheckedCreateInput>
    /**
     * In case the sensor_processing_queue was found with the provided `where` argument, update it with this data.
     */
    update: XOR<sensor_processing_queueUpdateInput, sensor_processing_queueUncheckedUpdateInput>
  }

  /**
   * sensor_processing_queue delete
   */
  export type sensor_processing_queueDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the sensor_processing_queue
     */
    select?: sensor_processing_queueSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: sensor_processing_queueInclude<ExtArgs> | null
    /**
     * Filter which sensor_processing_queue to delete.
     */
    where: sensor_processing_queueWhereUniqueInput
  }

  /**
   * sensor_processing_queue deleteMany
   */
  export type sensor_processing_queueDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which sensor_processing_queues to delete
     */
    where?: sensor_processing_queueWhereInput
  }

  /**
   * sensor_processing_queue.sensor_data_raw
   */
  export type sensor_processing_queue$sensor_data_rawArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the sensor_data_raw
     */
    select?: sensor_data_rawSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: sensor_data_rawInclude<ExtArgs> | null
    where?: sensor_data_rawWhereInput
  }

  /**
   * sensor_processing_queue without action
   */
  export type sensor_processing_queueDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the sensor_processing_queue
     */
    select?: sensor_processing_queueSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: sensor_processing_queueInclude<ExtArgs> | null
  }


  /**
   * Model spatial_ref_sys
   */

  export type AggregateSpatial_ref_sys = {
    _count: Spatial_ref_sysCountAggregateOutputType | null
    _avg: Spatial_ref_sysAvgAggregateOutputType | null
    _sum: Spatial_ref_sysSumAggregateOutputType | null
    _min: Spatial_ref_sysMinAggregateOutputType | null
    _max: Spatial_ref_sysMaxAggregateOutputType | null
  }

  export type Spatial_ref_sysAvgAggregateOutputType = {
    srid: number | null
    auth_srid: number | null
  }

  export type Spatial_ref_sysSumAggregateOutputType = {
    srid: number | null
    auth_srid: number | null
  }

  export type Spatial_ref_sysMinAggregateOutputType = {
    srid: number | null
    auth_name: string | null
    auth_srid: number | null
    srtext: string | null
    proj4text: string | null
  }

  export type Spatial_ref_sysMaxAggregateOutputType = {
    srid: number | null
    auth_name: string | null
    auth_srid: number | null
    srtext: string | null
    proj4text: string | null
  }

  export type Spatial_ref_sysCountAggregateOutputType = {
    srid: number
    auth_name: number
    auth_srid: number
    srtext: number
    proj4text: number
    _all: number
  }


  export type Spatial_ref_sysAvgAggregateInputType = {
    srid?: true
    auth_srid?: true
  }

  export type Spatial_ref_sysSumAggregateInputType = {
    srid?: true
    auth_srid?: true
  }

  export type Spatial_ref_sysMinAggregateInputType = {
    srid?: true
    auth_name?: true
    auth_srid?: true
    srtext?: true
    proj4text?: true
  }

  export type Spatial_ref_sysMaxAggregateInputType = {
    srid?: true
    auth_name?: true
    auth_srid?: true
    srtext?: true
    proj4text?: true
  }

  export type Spatial_ref_sysCountAggregateInputType = {
    srid?: true
    auth_name?: true
    auth_srid?: true
    srtext?: true
    proj4text?: true
    _all?: true
  }

  export type Spatial_ref_sysAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which spatial_ref_sys to aggregate.
     */
    where?: spatial_ref_sysWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of spatial_ref_sys to fetch.
     */
    orderBy?: spatial_ref_sysOrderByWithRelationInput | spatial_ref_sysOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: spatial_ref_sysWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` spatial_ref_sys from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` spatial_ref_sys.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned spatial_ref_sys
    **/
    _count?: true | Spatial_ref_sysCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: Spatial_ref_sysAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: Spatial_ref_sysSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: Spatial_ref_sysMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: Spatial_ref_sysMaxAggregateInputType
  }

  export type GetSpatial_ref_sysAggregateType<T extends Spatial_ref_sysAggregateArgs> = {
        [P in keyof T & keyof AggregateSpatial_ref_sys]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateSpatial_ref_sys[P]>
      : GetScalarType<T[P], AggregateSpatial_ref_sys[P]>
  }




  export type spatial_ref_sysGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: spatial_ref_sysWhereInput
    orderBy?: spatial_ref_sysOrderByWithAggregationInput | spatial_ref_sysOrderByWithAggregationInput[]
    by: Spatial_ref_sysScalarFieldEnum[] | Spatial_ref_sysScalarFieldEnum
    having?: spatial_ref_sysScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: Spatial_ref_sysCountAggregateInputType | true
    _avg?: Spatial_ref_sysAvgAggregateInputType
    _sum?: Spatial_ref_sysSumAggregateInputType
    _min?: Spatial_ref_sysMinAggregateInputType
    _max?: Spatial_ref_sysMaxAggregateInputType
  }

  export type Spatial_ref_sysGroupByOutputType = {
    srid: number
    auth_name: string | null
    auth_srid: number | null
    srtext: string | null
    proj4text: string | null
    _count: Spatial_ref_sysCountAggregateOutputType | null
    _avg: Spatial_ref_sysAvgAggregateOutputType | null
    _sum: Spatial_ref_sysSumAggregateOutputType | null
    _min: Spatial_ref_sysMinAggregateOutputType | null
    _max: Spatial_ref_sysMaxAggregateOutputType | null
  }

  type GetSpatial_ref_sysGroupByPayload<T extends spatial_ref_sysGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<Spatial_ref_sysGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof Spatial_ref_sysGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], Spatial_ref_sysGroupByOutputType[P]>
            : GetScalarType<T[P], Spatial_ref_sysGroupByOutputType[P]>
        }
      >
    >


  export type spatial_ref_sysSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    srid?: boolean
    auth_name?: boolean
    auth_srid?: boolean
    srtext?: boolean
    proj4text?: boolean
  }, ExtArgs["result"]["spatial_ref_sys"]>

  export type spatial_ref_sysSelectCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    srid?: boolean
    auth_name?: boolean
    auth_srid?: boolean
    srtext?: boolean
    proj4text?: boolean
  }, ExtArgs["result"]["spatial_ref_sys"]>

  export type spatial_ref_sysSelectScalar = {
    srid?: boolean
    auth_name?: boolean
    auth_srid?: boolean
    srtext?: boolean
    proj4text?: boolean
  }


  export type $spatial_ref_sysPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "spatial_ref_sys"
    objects: {}
    scalars: $Extensions.GetPayloadResult<{
      srid: number
      auth_name: string | null
      auth_srid: number | null
      srtext: string | null
      proj4text: string | null
    }, ExtArgs["result"]["spatial_ref_sys"]>
    composites: {}
  }

  type spatial_ref_sysGetPayload<S extends boolean | null | undefined | spatial_ref_sysDefaultArgs> = $Result.GetResult<Prisma.$spatial_ref_sysPayload, S>

  type spatial_ref_sysCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = 
    Omit<spatial_ref_sysFindManyArgs, 'select' | 'include' | 'distinct'> & {
      select?: Spatial_ref_sysCountAggregateInputType | true
    }

  export interface spatial_ref_sysDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['spatial_ref_sys'], meta: { name: 'spatial_ref_sys' } }
    /**
     * Find zero or one Spatial_ref_sys that matches the filter.
     * @param {spatial_ref_sysFindUniqueArgs} args - Arguments to find a Spatial_ref_sys
     * @example
     * // Get one Spatial_ref_sys
     * const spatial_ref_sys = await prisma.spatial_ref_sys.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends spatial_ref_sysFindUniqueArgs>(args: SelectSubset<T, spatial_ref_sysFindUniqueArgs<ExtArgs>>): Prisma__spatial_ref_sysClient<$Result.GetResult<Prisma.$spatial_ref_sysPayload<ExtArgs>, T, "findUnique"> | null, null, ExtArgs>

    /**
     * Find one Spatial_ref_sys that matches the filter or throw an error with `error.code='P2025'` 
     * if no matches were found.
     * @param {spatial_ref_sysFindUniqueOrThrowArgs} args - Arguments to find a Spatial_ref_sys
     * @example
     * // Get one Spatial_ref_sys
     * const spatial_ref_sys = await prisma.spatial_ref_sys.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends spatial_ref_sysFindUniqueOrThrowArgs>(args: SelectSubset<T, spatial_ref_sysFindUniqueOrThrowArgs<ExtArgs>>): Prisma__spatial_ref_sysClient<$Result.GetResult<Prisma.$spatial_ref_sysPayload<ExtArgs>, T, "findUniqueOrThrow">, never, ExtArgs>

    /**
     * Find the first Spatial_ref_sys that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {spatial_ref_sysFindFirstArgs} args - Arguments to find a Spatial_ref_sys
     * @example
     * // Get one Spatial_ref_sys
     * const spatial_ref_sys = await prisma.spatial_ref_sys.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends spatial_ref_sysFindFirstArgs>(args?: SelectSubset<T, spatial_ref_sysFindFirstArgs<ExtArgs>>): Prisma__spatial_ref_sysClient<$Result.GetResult<Prisma.$spatial_ref_sysPayload<ExtArgs>, T, "findFirst"> | null, null, ExtArgs>

    /**
     * Find the first Spatial_ref_sys that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {spatial_ref_sysFindFirstOrThrowArgs} args - Arguments to find a Spatial_ref_sys
     * @example
     * // Get one Spatial_ref_sys
     * const spatial_ref_sys = await prisma.spatial_ref_sys.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends spatial_ref_sysFindFirstOrThrowArgs>(args?: SelectSubset<T, spatial_ref_sysFindFirstOrThrowArgs<ExtArgs>>): Prisma__spatial_ref_sysClient<$Result.GetResult<Prisma.$spatial_ref_sysPayload<ExtArgs>, T, "findFirstOrThrow">, never, ExtArgs>

    /**
     * Find zero or more Spatial_ref_sys that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {spatial_ref_sysFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all Spatial_ref_sys
     * const spatial_ref_sys = await prisma.spatial_ref_sys.findMany()
     * 
     * // Get first 10 Spatial_ref_sys
     * const spatial_ref_sys = await prisma.spatial_ref_sys.findMany({ take: 10 })
     * 
     * // Only select the `srid`
     * const spatial_ref_sysWithSridOnly = await prisma.spatial_ref_sys.findMany({ select: { srid: true } })
     * 
     */
    findMany<T extends spatial_ref_sysFindManyArgs>(args?: SelectSubset<T, spatial_ref_sysFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$spatial_ref_sysPayload<ExtArgs>, T, "findMany">>

    /**
     * Create a Spatial_ref_sys.
     * @param {spatial_ref_sysCreateArgs} args - Arguments to create a Spatial_ref_sys.
     * @example
     * // Create one Spatial_ref_sys
     * const Spatial_ref_sys = await prisma.spatial_ref_sys.create({
     *   data: {
     *     // ... data to create a Spatial_ref_sys
     *   }
     * })
     * 
     */
    create<T extends spatial_ref_sysCreateArgs>(args: SelectSubset<T, spatial_ref_sysCreateArgs<ExtArgs>>): Prisma__spatial_ref_sysClient<$Result.GetResult<Prisma.$spatial_ref_sysPayload<ExtArgs>, T, "create">, never, ExtArgs>

    /**
     * Create many Spatial_ref_sys.
     * @param {spatial_ref_sysCreateManyArgs} args - Arguments to create many Spatial_ref_sys.
     * @example
     * // Create many Spatial_ref_sys
     * const spatial_ref_sys = await prisma.spatial_ref_sys.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends spatial_ref_sysCreateManyArgs>(args?: SelectSubset<T, spatial_ref_sysCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create many Spatial_ref_sys and returns the data saved in the database.
     * @param {spatial_ref_sysCreateManyAndReturnArgs} args - Arguments to create many Spatial_ref_sys.
     * @example
     * // Create many Spatial_ref_sys
     * const spatial_ref_sys = await prisma.spatial_ref_sys.createManyAndReturn({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Create many Spatial_ref_sys and only return the `srid`
     * const spatial_ref_sysWithSridOnly = await prisma.spatial_ref_sys.createManyAndReturn({ 
     *   select: { srid: true },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    createManyAndReturn<T extends spatial_ref_sysCreateManyAndReturnArgs>(args?: SelectSubset<T, spatial_ref_sysCreateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$spatial_ref_sysPayload<ExtArgs>, T, "createManyAndReturn">>

    /**
     * Delete a Spatial_ref_sys.
     * @param {spatial_ref_sysDeleteArgs} args - Arguments to delete one Spatial_ref_sys.
     * @example
     * // Delete one Spatial_ref_sys
     * const Spatial_ref_sys = await prisma.spatial_ref_sys.delete({
     *   where: {
     *     // ... filter to delete one Spatial_ref_sys
     *   }
     * })
     * 
     */
    delete<T extends spatial_ref_sysDeleteArgs>(args: SelectSubset<T, spatial_ref_sysDeleteArgs<ExtArgs>>): Prisma__spatial_ref_sysClient<$Result.GetResult<Prisma.$spatial_ref_sysPayload<ExtArgs>, T, "delete">, never, ExtArgs>

    /**
     * Update one Spatial_ref_sys.
     * @param {spatial_ref_sysUpdateArgs} args - Arguments to update one Spatial_ref_sys.
     * @example
     * // Update one Spatial_ref_sys
     * const spatial_ref_sys = await prisma.spatial_ref_sys.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends spatial_ref_sysUpdateArgs>(args: SelectSubset<T, spatial_ref_sysUpdateArgs<ExtArgs>>): Prisma__spatial_ref_sysClient<$Result.GetResult<Prisma.$spatial_ref_sysPayload<ExtArgs>, T, "update">, never, ExtArgs>

    /**
     * Delete zero or more Spatial_ref_sys.
     * @param {spatial_ref_sysDeleteManyArgs} args - Arguments to filter Spatial_ref_sys to delete.
     * @example
     * // Delete a few Spatial_ref_sys
     * const { count } = await prisma.spatial_ref_sys.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends spatial_ref_sysDeleteManyArgs>(args?: SelectSubset<T, spatial_ref_sysDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Spatial_ref_sys.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {spatial_ref_sysUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many Spatial_ref_sys
     * const spatial_ref_sys = await prisma.spatial_ref_sys.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends spatial_ref_sysUpdateManyArgs>(args: SelectSubset<T, spatial_ref_sysUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create or update one Spatial_ref_sys.
     * @param {spatial_ref_sysUpsertArgs} args - Arguments to update or create a Spatial_ref_sys.
     * @example
     * // Update or create a Spatial_ref_sys
     * const spatial_ref_sys = await prisma.spatial_ref_sys.upsert({
     *   create: {
     *     // ... data to create a Spatial_ref_sys
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the Spatial_ref_sys we want to update
     *   }
     * })
     */
    upsert<T extends spatial_ref_sysUpsertArgs>(args: SelectSubset<T, spatial_ref_sysUpsertArgs<ExtArgs>>): Prisma__spatial_ref_sysClient<$Result.GetResult<Prisma.$spatial_ref_sysPayload<ExtArgs>, T, "upsert">, never, ExtArgs>


    /**
     * Count the number of Spatial_ref_sys.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {spatial_ref_sysCountArgs} args - Arguments to filter Spatial_ref_sys to count.
     * @example
     * // Count the number of Spatial_ref_sys
     * const count = await prisma.spatial_ref_sys.count({
     *   where: {
     *     // ... the filter for the Spatial_ref_sys we want to count
     *   }
     * })
    **/
    count<T extends spatial_ref_sysCountArgs>(
      args?: Subset<T, spatial_ref_sysCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], Spatial_ref_sysCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a Spatial_ref_sys.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {Spatial_ref_sysAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends Spatial_ref_sysAggregateArgs>(args: Subset<T, Spatial_ref_sysAggregateArgs>): Prisma.PrismaPromise<GetSpatial_ref_sysAggregateType<T>>

    /**
     * Group by Spatial_ref_sys.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {spatial_ref_sysGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends spatial_ref_sysGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: spatial_ref_sysGroupByArgs['orderBy'] }
        : { orderBy?: spatial_ref_sysGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, spatial_ref_sysGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetSpatial_ref_sysGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the spatial_ref_sys model
   */
  readonly fields: spatial_ref_sysFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for spatial_ref_sys.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__spatial_ref_sysClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the spatial_ref_sys model
   */ 
  interface spatial_ref_sysFieldRefs {
    readonly srid: FieldRef<"spatial_ref_sys", 'Int'>
    readonly auth_name: FieldRef<"spatial_ref_sys", 'String'>
    readonly auth_srid: FieldRef<"spatial_ref_sys", 'Int'>
    readonly srtext: FieldRef<"spatial_ref_sys", 'String'>
    readonly proj4text: FieldRef<"spatial_ref_sys", 'String'>
  }
    

  // Custom InputTypes
  /**
   * spatial_ref_sys findUnique
   */
  export type spatial_ref_sysFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the spatial_ref_sys
     */
    select?: spatial_ref_sysSelect<ExtArgs> | null
    /**
     * Filter, which spatial_ref_sys to fetch.
     */
    where: spatial_ref_sysWhereUniqueInput
  }

  /**
   * spatial_ref_sys findUniqueOrThrow
   */
  export type spatial_ref_sysFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the spatial_ref_sys
     */
    select?: spatial_ref_sysSelect<ExtArgs> | null
    /**
     * Filter, which spatial_ref_sys to fetch.
     */
    where: spatial_ref_sysWhereUniqueInput
  }

  /**
   * spatial_ref_sys findFirst
   */
  export type spatial_ref_sysFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the spatial_ref_sys
     */
    select?: spatial_ref_sysSelect<ExtArgs> | null
    /**
     * Filter, which spatial_ref_sys to fetch.
     */
    where?: spatial_ref_sysWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of spatial_ref_sys to fetch.
     */
    orderBy?: spatial_ref_sysOrderByWithRelationInput | spatial_ref_sysOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for spatial_ref_sys.
     */
    cursor?: spatial_ref_sysWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` spatial_ref_sys from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` spatial_ref_sys.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of spatial_ref_sys.
     */
    distinct?: Spatial_ref_sysScalarFieldEnum | Spatial_ref_sysScalarFieldEnum[]
  }

  /**
   * spatial_ref_sys findFirstOrThrow
   */
  export type spatial_ref_sysFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the spatial_ref_sys
     */
    select?: spatial_ref_sysSelect<ExtArgs> | null
    /**
     * Filter, which spatial_ref_sys to fetch.
     */
    where?: spatial_ref_sysWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of spatial_ref_sys to fetch.
     */
    orderBy?: spatial_ref_sysOrderByWithRelationInput | spatial_ref_sysOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for spatial_ref_sys.
     */
    cursor?: spatial_ref_sysWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` spatial_ref_sys from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` spatial_ref_sys.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of spatial_ref_sys.
     */
    distinct?: Spatial_ref_sysScalarFieldEnum | Spatial_ref_sysScalarFieldEnum[]
  }

  /**
   * spatial_ref_sys findMany
   */
  export type spatial_ref_sysFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the spatial_ref_sys
     */
    select?: spatial_ref_sysSelect<ExtArgs> | null
    /**
     * Filter, which spatial_ref_sys to fetch.
     */
    where?: spatial_ref_sysWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of spatial_ref_sys to fetch.
     */
    orderBy?: spatial_ref_sysOrderByWithRelationInput | spatial_ref_sysOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing spatial_ref_sys.
     */
    cursor?: spatial_ref_sysWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` spatial_ref_sys from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` spatial_ref_sys.
     */
    skip?: number
    distinct?: Spatial_ref_sysScalarFieldEnum | Spatial_ref_sysScalarFieldEnum[]
  }

  /**
   * spatial_ref_sys create
   */
  export type spatial_ref_sysCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the spatial_ref_sys
     */
    select?: spatial_ref_sysSelect<ExtArgs> | null
    /**
     * The data needed to create a spatial_ref_sys.
     */
    data: XOR<spatial_ref_sysCreateInput, spatial_ref_sysUncheckedCreateInput>
  }

  /**
   * spatial_ref_sys createMany
   */
  export type spatial_ref_sysCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many spatial_ref_sys.
     */
    data: spatial_ref_sysCreateManyInput | spatial_ref_sysCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * spatial_ref_sys createManyAndReturn
   */
  export type spatial_ref_sysCreateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the spatial_ref_sys
     */
    select?: spatial_ref_sysSelectCreateManyAndReturn<ExtArgs> | null
    /**
     * The data used to create many spatial_ref_sys.
     */
    data: spatial_ref_sysCreateManyInput | spatial_ref_sysCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * spatial_ref_sys update
   */
  export type spatial_ref_sysUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the spatial_ref_sys
     */
    select?: spatial_ref_sysSelect<ExtArgs> | null
    /**
     * The data needed to update a spatial_ref_sys.
     */
    data: XOR<spatial_ref_sysUpdateInput, spatial_ref_sysUncheckedUpdateInput>
    /**
     * Choose, which spatial_ref_sys to update.
     */
    where: spatial_ref_sysWhereUniqueInput
  }

  /**
   * spatial_ref_sys updateMany
   */
  export type spatial_ref_sysUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update spatial_ref_sys.
     */
    data: XOR<spatial_ref_sysUpdateManyMutationInput, spatial_ref_sysUncheckedUpdateManyInput>
    /**
     * Filter which spatial_ref_sys to update
     */
    where?: spatial_ref_sysWhereInput
  }

  /**
   * spatial_ref_sys upsert
   */
  export type spatial_ref_sysUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the spatial_ref_sys
     */
    select?: spatial_ref_sysSelect<ExtArgs> | null
    /**
     * The filter to search for the spatial_ref_sys to update in case it exists.
     */
    where: spatial_ref_sysWhereUniqueInput
    /**
     * In case the spatial_ref_sys found by the `where` argument doesn't exist, create a new spatial_ref_sys with this data.
     */
    create: XOR<spatial_ref_sysCreateInput, spatial_ref_sysUncheckedCreateInput>
    /**
     * In case the spatial_ref_sys was found with the provided `where` argument, update it with this data.
     */
    update: XOR<spatial_ref_sysUpdateInput, spatial_ref_sysUncheckedUpdateInput>
  }

  /**
   * spatial_ref_sys delete
   */
  export type spatial_ref_sysDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the spatial_ref_sys
     */
    select?: spatial_ref_sysSelect<ExtArgs> | null
    /**
     * Filter which spatial_ref_sys to delete.
     */
    where: spatial_ref_sysWhereUniqueInput
  }

  /**
   * spatial_ref_sys deleteMany
   */
  export type spatial_ref_sysDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which spatial_ref_sys to delete
     */
    where?: spatial_ref_sysWhereInput
  }

  /**
   * spatial_ref_sys without action
   */
  export type spatial_ref_sysDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the spatial_ref_sys
     */
    select?: spatial_ref_sysSelect<ExtArgs> | null
  }


  /**
   * Model speed_event
   */

  export type AggregateSpeed_event = {
    _count: Speed_eventCountAggregateOutputType | null
    _avg: Speed_eventAvgAggregateOutputType | null
    _sum: Speed_eventSumAggregateOutputType | null
    _min: Speed_eventMinAggregateOutputType | null
    _max: Speed_eventMaxAggregateOutputType | null
  }

  export type Speed_eventAvgAggregateOutputType = {
    speed_kph: number | null
  }

  export type Speed_eventSumAggregateOutputType = {
    speed_kph: number | null
  }

  export type Speed_eventMinAggregateOutputType = {
    id: string | null
    truck_id: string | null
    speed_kph: number | null
    changed_at: Date | null
    source: string | null
    created_by: string | null
  }

  export type Speed_eventMaxAggregateOutputType = {
    id: string | null
    truck_id: string | null
    speed_kph: number | null
    changed_at: Date | null
    source: string | null
    created_by: string | null
  }

  export type Speed_eventCountAggregateOutputType = {
    id: number
    truck_id: number
    speed_kph: number
    changed_at: number
    source: number
    created_by: number
    _all: number
  }


  export type Speed_eventAvgAggregateInputType = {
    speed_kph?: true
  }

  export type Speed_eventSumAggregateInputType = {
    speed_kph?: true
  }

  export type Speed_eventMinAggregateInputType = {
    id?: true
    truck_id?: true
    speed_kph?: true
    changed_at?: true
    source?: true
    created_by?: true
  }

  export type Speed_eventMaxAggregateInputType = {
    id?: true
    truck_id?: true
    speed_kph?: true
    changed_at?: true
    source?: true
    created_by?: true
  }

  export type Speed_eventCountAggregateInputType = {
    id?: true
    truck_id?: true
    speed_kph?: true
    changed_at?: true
    source?: true
    created_by?: true
    _all?: true
  }

  export type Speed_eventAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which speed_event to aggregate.
     */
    where?: speed_eventWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of speed_events to fetch.
     */
    orderBy?: speed_eventOrderByWithRelationInput | speed_eventOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: speed_eventWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` speed_events from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` speed_events.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned speed_events
    **/
    _count?: true | Speed_eventCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: Speed_eventAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: Speed_eventSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: Speed_eventMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: Speed_eventMaxAggregateInputType
  }

  export type GetSpeed_eventAggregateType<T extends Speed_eventAggregateArgs> = {
        [P in keyof T & keyof AggregateSpeed_event]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateSpeed_event[P]>
      : GetScalarType<T[P], AggregateSpeed_event[P]>
  }




  export type speed_eventGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: speed_eventWhereInput
    orderBy?: speed_eventOrderByWithAggregationInput | speed_eventOrderByWithAggregationInput[]
    by: Speed_eventScalarFieldEnum[] | Speed_eventScalarFieldEnum
    having?: speed_eventScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: Speed_eventCountAggregateInputType | true
    _avg?: Speed_eventAvgAggregateInputType
    _sum?: Speed_eventSumAggregateInputType
    _min?: Speed_eventMinAggregateInputType
    _max?: Speed_eventMaxAggregateInputType
  }

  export type Speed_eventGroupByOutputType = {
    id: string
    truck_id: string
    speed_kph: number | null
    changed_at: Date
    source: string | null
    created_by: string | null
    _count: Speed_eventCountAggregateOutputType | null
    _avg: Speed_eventAvgAggregateOutputType | null
    _sum: Speed_eventSumAggregateOutputType | null
    _min: Speed_eventMinAggregateOutputType | null
    _max: Speed_eventMaxAggregateOutputType | null
  }

  type GetSpeed_eventGroupByPayload<T extends speed_eventGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<Speed_eventGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof Speed_eventGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], Speed_eventGroupByOutputType[P]>
            : GetScalarType<T[P], Speed_eventGroupByOutputType[P]>
        }
      >
    >


  export type speed_eventSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    truck_id?: boolean
    speed_kph?: boolean
    changed_at?: boolean
    source?: boolean
    created_by?: boolean
    truck?: boolean | truckDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["speed_event"]>

  export type speed_eventSelectCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    truck_id?: boolean
    speed_kph?: boolean
    changed_at?: boolean
    source?: boolean
    created_by?: boolean
    truck?: boolean | truckDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["speed_event"]>

  export type speed_eventSelectScalar = {
    id?: boolean
    truck_id?: boolean
    speed_kph?: boolean
    changed_at?: boolean
    source?: boolean
    created_by?: boolean
  }

  export type speed_eventInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    truck?: boolean | truckDefaultArgs<ExtArgs>
  }
  export type speed_eventIncludeCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    truck?: boolean | truckDefaultArgs<ExtArgs>
  }

  export type $speed_eventPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "speed_event"
    objects: {
      truck: Prisma.$truckPayload<ExtArgs>
    }
    scalars: $Extensions.GetPayloadResult<{
      id: string
      truck_id: string
      speed_kph: number | null
      changed_at: Date
      source: string | null
      created_by: string | null
    }, ExtArgs["result"]["speed_event"]>
    composites: {}
  }

  type speed_eventGetPayload<S extends boolean | null | undefined | speed_eventDefaultArgs> = $Result.GetResult<Prisma.$speed_eventPayload, S>

  type speed_eventCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = 
    Omit<speed_eventFindManyArgs, 'select' | 'include' | 'distinct'> & {
      select?: Speed_eventCountAggregateInputType | true
    }

  export interface speed_eventDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['speed_event'], meta: { name: 'speed_event' } }
    /**
     * Find zero or one Speed_event that matches the filter.
     * @param {speed_eventFindUniqueArgs} args - Arguments to find a Speed_event
     * @example
     * // Get one Speed_event
     * const speed_event = await prisma.speed_event.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends speed_eventFindUniqueArgs>(args: SelectSubset<T, speed_eventFindUniqueArgs<ExtArgs>>): Prisma__speed_eventClient<$Result.GetResult<Prisma.$speed_eventPayload<ExtArgs>, T, "findUnique"> | null, null, ExtArgs>

    /**
     * Find one Speed_event that matches the filter or throw an error with `error.code='P2025'` 
     * if no matches were found.
     * @param {speed_eventFindUniqueOrThrowArgs} args - Arguments to find a Speed_event
     * @example
     * // Get one Speed_event
     * const speed_event = await prisma.speed_event.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends speed_eventFindUniqueOrThrowArgs>(args: SelectSubset<T, speed_eventFindUniqueOrThrowArgs<ExtArgs>>): Prisma__speed_eventClient<$Result.GetResult<Prisma.$speed_eventPayload<ExtArgs>, T, "findUniqueOrThrow">, never, ExtArgs>

    /**
     * Find the first Speed_event that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {speed_eventFindFirstArgs} args - Arguments to find a Speed_event
     * @example
     * // Get one Speed_event
     * const speed_event = await prisma.speed_event.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends speed_eventFindFirstArgs>(args?: SelectSubset<T, speed_eventFindFirstArgs<ExtArgs>>): Prisma__speed_eventClient<$Result.GetResult<Prisma.$speed_eventPayload<ExtArgs>, T, "findFirst"> | null, null, ExtArgs>

    /**
     * Find the first Speed_event that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {speed_eventFindFirstOrThrowArgs} args - Arguments to find a Speed_event
     * @example
     * // Get one Speed_event
     * const speed_event = await prisma.speed_event.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends speed_eventFindFirstOrThrowArgs>(args?: SelectSubset<T, speed_eventFindFirstOrThrowArgs<ExtArgs>>): Prisma__speed_eventClient<$Result.GetResult<Prisma.$speed_eventPayload<ExtArgs>, T, "findFirstOrThrow">, never, ExtArgs>

    /**
     * Find zero or more Speed_events that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {speed_eventFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all Speed_events
     * const speed_events = await prisma.speed_event.findMany()
     * 
     * // Get first 10 Speed_events
     * const speed_events = await prisma.speed_event.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const speed_eventWithIdOnly = await prisma.speed_event.findMany({ select: { id: true } })
     * 
     */
    findMany<T extends speed_eventFindManyArgs>(args?: SelectSubset<T, speed_eventFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$speed_eventPayload<ExtArgs>, T, "findMany">>

    /**
     * Create a Speed_event.
     * @param {speed_eventCreateArgs} args - Arguments to create a Speed_event.
     * @example
     * // Create one Speed_event
     * const Speed_event = await prisma.speed_event.create({
     *   data: {
     *     // ... data to create a Speed_event
     *   }
     * })
     * 
     */
    create<T extends speed_eventCreateArgs>(args: SelectSubset<T, speed_eventCreateArgs<ExtArgs>>): Prisma__speed_eventClient<$Result.GetResult<Prisma.$speed_eventPayload<ExtArgs>, T, "create">, never, ExtArgs>

    /**
     * Create many Speed_events.
     * @param {speed_eventCreateManyArgs} args - Arguments to create many Speed_events.
     * @example
     * // Create many Speed_events
     * const speed_event = await prisma.speed_event.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends speed_eventCreateManyArgs>(args?: SelectSubset<T, speed_eventCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create many Speed_events and returns the data saved in the database.
     * @param {speed_eventCreateManyAndReturnArgs} args - Arguments to create many Speed_events.
     * @example
     * // Create many Speed_events
     * const speed_event = await prisma.speed_event.createManyAndReturn({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Create many Speed_events and only return the `id`
     * const speed_eventWithIdOnly = await prisma.speed_event.createManyAndReturn({ 
     *   select: { id: true },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    createManyAndReturn<T extends speed_eventCreateManyAndReturnArgs>(args?: SelectSubset<T, speed_eventCreateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$speed_eventPayload<ExtArgs>, T, "createManyAndReturn">>

    /**
     * Delete a Speed_event.
     * @param {speed_eventDeleteArgs} args - Arguments to delete one Speed_event.
     * @example
     * // Delete one Speed_event
     * const Speed_event = await prisma.speed_event.delete({
     *   where: {
     *     // ... filter to delete one Speed_event
     *   }
     * })
     * 
     */
    delete<T extends speed_eventDeleteArgs>(args: SelectSubset<T, speed_eventDeleteArgs<ExtArgs>>): Prisma__speed_eventClient<$Result.GetResult<Prisma.$speed_eventPayload<ExtArgs>, T, "delete">, never, ExtArgs>

    /**
     * Update one Speed_event.
     * @param {speed_eventUpdateArgs} args - Arguments to update one Speed_event.
     * @example
     * // Update one Speed_event
     * const speed_event = await prisma.speed_event.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends speed_eventUpdateArgs>(args: SelectSubset<T, speed_eventUpdateArgs<ExtArgs>>): Prisma__speed_eventClient<$Result.GetResult<Prisma.$speed_eventPayload<ExtArgs>, T, "update">, never, ExtArgs>

    /**
     * Delete zero or more Speed_events.
     * @param {speed_eventDeleteManyArgs} args - Arguments to filter Speed_events to delete.
     * @example
     * // Delete a few Speed_events
     * const { count } = await prisma.speed_event.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends speed_eventDeleteManyArgs>(args?: SelectSubset<T, speed_eventDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Speed_events.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {speed_eventUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many Speed_events
     * const speed_event = await prisma.speed_event.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends speed_eventUpdateManyArgs>(args: SelectSubset<T, speed_eventUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create or update one Speed_event.
     * @param {speed_eventUpsertArgs} args - Arguments to update or create a Speed_event.
     * @example
     * // Update or create a Speed_event
     * const speed_event = await prisma.speed_event.upsert({
     *   create: {
     *     // ... data to create a Speed_event
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the Speed_event we want to update
     *   }
     * })
     */
    upsert<T extends speed_eventUpsertArgs>(args: SelectSubset<T, speed_eventUpsertArgs<ExtArgs>>): Prisma__speed_eventClient<$Result.GetResult<Prisma.$speed_eventPayload<ExtArgs>, T, "upsert">, never, ExtArgs>


    /**
     * Count the number of Speed_events.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {speed_eventCountArgs} args - Arguments to filter Speed_events to count.
     * @example
     * // Count the number of Speed_events
     * const count = await prisma.speed_event.count({
     *   where: {
     *     // ... the filter for the Speed_events we want to count
     *   }
     * })
    **/
    count<T extends speed_eventCountArgs>(
      args?: Subset<T, speed_eventCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], Speed_eventCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a Speed_event.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {Speed_eventAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends Speed_eventAggregateArgs>(args: Subset<T, Speed_eventAggregateArgs>): Prisma.PrismaPromise<GetSpeed_eventAggregateType<T>>

    /**
     * Group by Speed_event.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {speed_eventGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends speed_eventGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: speed_eventGroupByArgs['orderBy'] }
        : { orderBy?: speed_eventGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, speed_eventGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetSpeed_eventGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the speed_event model
   */
  readonly fields: speed_eventFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for speed_event.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__speed_eventClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    truck<T extends truckDefaultArgs<ExtArgs> = {}>(args?: Subset<T, truckDefaultArgs<ExtArgs>>): Prisma__truckClient<$Result.GetResult<Prisma.$truckPayload<ExtArgs>, T, "findUniqueOrThrow"> | Null, Null, ExtArgs>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the speed_event model
   */ 
  interface speed_eventFieldRefs {
    readonly id: FieldRef<"speed_event", 'String'>
    readonly truck_id: FieldRef<"speed_event", 'String'>
    readonly speed_kph: FieldRef<"speed_event", 'Float'>
    readonly changed_at: FieldRef<"speed_event", 'DateTime'>
    readonly source: FieldRef<"speed_event", 'String'>
    readonly created_by: FieldRef<"speed_event", 'String'>
  }
    

  // Custom InputTypes
  /**
   * speed_event findUnique
   */
  export type speed_eventFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the speed_event
     */
    select?: speed_eventSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: speed_eventInclude<ExtArgs> | null
    /**
     * Filter, which speed_event to fetch.
     */
    where: speed_eventWhereUniqueInput
  }

  /**
   * speed_event findUniqueOrThrow
   */
  export type speed_eventFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the speed_event
     */
    select?: speed_eventSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: speed_eventInclude<ExtArgs> | null
    /**
     * Filter, which speed_event to fetch.
     */
    where: speed_eventWhereUniqueInput
  }

  /**
   * speed_event findFirst
   */
  export type speed_eventFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the speed_event
     */
    select?: speed_eventSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: speed_eventInclude<ExtArgs> | null
    /**
     * Filter, which speed_event to fetch.
     */
    where?: speed_eventWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of speed_events to fetch.
     */
    orderBy?: speed_eventOrderByWithRelationInput | speed_eventOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for speed_events.
     */
    cursor?: speed_eventWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` speed_events from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` speed_events.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of speed_events.
     */
    distinct?: Speed_eventScalarFieldEnum | Speed_eventScalarFieldEnum[]
  }

  /**
   * speed_event findFirstOrThrow
   */
  export type speed_eventFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the speed_event
     */
    select?: speed_eventSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: speed_eventInclude<ExtArgs> | null
    /**
     * Filter, which speed_event to fetch.
     */
    where?: speed_eventWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of speed_events to fetch.
     */
    orderBy?: speed_eventOrderByWithRelationInput | speed_eventOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for speed_events.
     */
    cursor?: speed_eventWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` speed_events from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` speed_events.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of speed_events.
     */
    distinct?: Speed_eventScalarFieldEnum | Speed_eventScalarFieldEnum[]
  }

  /**
   * speed_event findMany
   */
  export type speed_eventFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the speed_event
     */
    select?: speed_eventSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: speed_eventInclude<ExtArgs> | null
    /**
     * Filter, which speed_events to fetch.
     */
    where?: speed_eventWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of speed_events to fetch.
     */
    orderBy?: speed_eventOrderByWithRelationInput | speed_eventOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing speed_events.
     */
    cursor?: speed_eventWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` speed_events from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` speed_events.
     */
    skip?: number
    distinct?: Speed_eventScalarFieldEnum | Speed_eventScalarFieldEnum[]
  }

  /**
   * speed_event create
   */
  export type speed_eventCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the speed_event
     */
    select?: speed_eventSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: speed_eventInclude<ExtArgs> | null
    /**
     * The data needed to create a speed_event.
     */
    data: XOR<speed_eventCreateInput, speed_eventUncheckedCreateInput>
  }

  /**
   * speed_event createMany
   */
  export type speed_eventCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many speed_events.
     */
    data: speed_eventCreateManyInput | speed_eventCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * speed_event createManyAndReturn
   */
  export type speed_eventCreateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the speed_event
     */
    select?: speed_eventSelectCreateManyAndReturn<ExtArgs> | null
    /**
     * The data used to create many speed_events.
     */
    data: speed_eventCreateManyInput | speed_eventCreateManyInput[]
    skipDuplicates?: boolean
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: speed_eventIncludeCreateManyAndReturn<ExtArgs> | null
  }

  /**
   * speed_event update
   */
  export type speed_eventUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the speed_event
     */
    select?: speed_eventSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: speed_eventInclude<ExtArgs> | null
    /**
     * The data needed to update a speed_event.
     */
    data: XOR<speed_eventUpdateInput, speed_eventUncheckedUpdateInput>
    /**
     * Choose, which speed_event to update.
     */
    where: speed_eventWhereUniqueInput
  }

  /**
   * speed_event updateMany
   */
  export type speed_eventUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update speed_events.
     */
    data: XOR<speed_eventUpdateManyMutationInput, speed_eventUncheckedUpdateManyInput>
    /**
     * Filter which speed_events to update
     */
    where?: speed_eventWhereInput
  }

  /**
   * speed_event upsert
   */
  export type speed_eventUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the speed_event
     */
    select?: speed_eventSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: speed_eventInclude<ExtArgs> | null
    /**
     * The filter to search for the speed_event to update in case it exists.
     */
    where: speed_eventWhereUniqueInput
    /**
     * In case the speed_event found by the `where` argument doesn't exist, create a new speed_event with this data.
     */
    create: XOR<speed_eventCreateInput, speed_eventUncheckedCreateInput>
    /**
     * In case the speed_event was found with the provided `where` argument, update it with this data.
     */
    update: XOR<speed_eventUpdateInput, speed_eventUncheckedUpdateInput>
  }

  /**
   * speed_event delete
   */
  export type speed_eventDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the speed_event
     */
    select?: speed_eventSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: speed_eventInclude<ExtArgs> | null
    /**
     * Filter which speed_event to delete.
     */
    where: speed_eventWhereUniqueInput
  }

  /**
   * speed_event deleteMany
   */
  export type speed_eventDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which speed_events to delete
     */
    where?: speed_eventWhereInput
  }

  /**
   * speed_event without action
   */
  export type speed_eventDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the speed_event
     */
    select?: speed_eventSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: speed_eventInclude<ExtArgs> | null
  }


  /**
   * Model tire_error_code
   */

  export type AggregateTire_error_code = {
    _count: Tire_error_codeCountAggregateOutputType | null
    _avg: Tire_error_codeAvgAggregateOutputType | null
    _sum: Tire_error_codeSumAggregateOutputType | null
    _min: Tire_error_codeMinAggregateOutputType | null
    _max: Tire_error_codeMaxAggregateOutputType | null
  }

  export type Tire_error_codeAvgAggregateOutputType = {
    code: number | null
  }

  export type Tire_error_codeSumAggregateOutputType = {
    code: number | null
  }

  export type Tire_error_codeMinAggregateOutputType = {
    code: number | null
    description: string | null
  }

  export type Tire_error_codeMaxAggregateOutputType = {
    code: number | null
    description: string | null
  }

  export type Tire_error_codeCountAggregateOutputType = {
    code: number
    description: number
    _all: number
  }


  export type Tire_error_codeAvgAggregateInputType = {
    code?: true
  }

  export type Tire_error_codeSumAggregateInputType = {
    code?: true
  }

  export type Tire_error_codeMinAggregateInputType = {
    code?: true
    description?: true
  }

  export type Tire_error_codeMaxAggregateInputType = {
    code?: true
    description?: true
  }

  export type Tire_error_codeCountAggregateInputType = {
    code?: true
    description?: true
    _all?: true
  }

  export type Tire_error_codeAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which tire_error_code to aggregate.
     */
    where?: tire_error_codeWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of tire_error_codes to fetch.
     */
    orderBy?: tire_error_codeOrderByWithRelationInput | tire_error_codeOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: tire_error_codeWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` tire_error_codes from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` tire_error_codes.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned tire_error_codes
    **/
    _count?: true | Tire_error_codeCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: Tire_error_codeAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: Tire_error_codeSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: Tire_error_codeMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: Tire_error_codeMaxAggregateInputType
  }

  export type GetTire_error_codeAggregateType<T extends Tire_error_codeAggregateArgs> = {
        [P in keyof T & keyof AggregateTire_error_code]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateTire_error_code[P]>
      : GetScalarType<T[P], AggregateTire_error_code[P]>
  }




  export type tire_error_codeGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: tire_error_codeWhereInput
    orderBy?: tire_error_codeOrderByWithAggregationInput | tire_error_codeOrderByWithAggregationInput[]
    by: Tire_error_codeScalarFieldEnum[] | Tire_error_codeScalarFieldEnum
    having?: tire_error_codeScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: Tire_error_codeCountAggregateInputType | true
    _avg?: Tire_error_codeAvgAggregateInputType
    _sum?: Tire_error_codeSumAggregateInputType
    _min?: Tire_error_codeMinAggregateInputType
    _max?: Tire_error_codeMaxAggregateInputType
  }

  export type Tire_error_codeGroupByOutputType = {
    code: number
    description: string | null
    _count: Tire_error_codeCountAggregateOutputType | null
    _avg: Tire_error_codeAvgAggregateOutputType | null
    _sum: Tire_error_codeSumAggregateOutputType | null
    _min: Tire_error_codeMinAggregateOutputType | null
    _max: Tire_error_codeMaxAggregateOutputType | null
  }

  type GetTire_error_codeGroupByPayload<T extends tire_error_codeGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<Tire_error_codeGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof Tire_error_codeGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], Tire_error_codeGroupByOutputType[P]>
            : GetScalarType<T[P], Tire_error_codeGroupByOutputType[P]>
        }
      >
    >


  export type tire_error_codeSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    code?: boolean
    description?: boolean
  }, ExtArgs["result"]["tire_error_code"]>

  export type tire_error_codeSelectCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    code?: boolean
    description?: boolean
  }, ExtArgs["result"]["tire_error_code"]>

  export type tire_error_codeSelectScalar = {
    code?: boolean
    description?: boolean
  }


  export type $tire_error_codePayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "tire_error_code"
    objects: {}
    scalars: $Extensions.GetPayloadResult<{
      code: number
      description: string | null
    }, ExtArgs["result"]["tire_error_code"]>
    composites: {}
  }

  type tire_error_codeGetPayload<S extends boolean | null | undefined | tire_error_codeDefaultArgs> = $Result.GetResult<Prisma.$tire_error_codePayload, S>

  type tire_error_codeCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = 
    Omit<tire_error_codeFindManyArgs, 'select' | 'include' | 'distinct'> & {
      select?: Tire_error_codeCountAggregateInputType | true
    }

  export interface tire_error_codeDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['tire_error_code'], meta: { name: 'tire_error_code' } }
    /**
     * Find zero or one Tire_error_code that matches the filter.
     * @param {tire_error_codeFindUniqueArgs} args - Arguments to find a Tire_error_code
     * @example
     * // Get one Tire_error_code
     * const tire_error_code = await prisma.tire_error_code.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends tire_error_codeFindUniqueArgs>(args: SelectSubset<T, tire_error_codeFindUniqueArgs<ExtArgs>>): Prisma__tire_error_codeClient<$Result.GetResult<Prisma.$tire_error_codePayload<ExtArgs>, T, "findUnique"> | null, null, ExtArgs>

    /**
     * Find one Tire_error_code that matches the filter or throw an error with `error.code='P2025'` 
     * if no matches were found.
     * @param {tire_error_codeFindUniqueOrThrowArgs} args - Arguments to find a Tire_error_code
     * @example
     * // Get one Tire_error_code
     * const tire_error_code = await prisma.tire_error_code.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends tire_error_codeFindUniqueOrThrowArgs>(args: SelectSubset<T, tire_error_codeFindUniqueOrThrowArgs<ExtArgs>>): Prisma__tire_error_codeClient<$Result.GetResult<Prisma.$tire_error_codePayload<ExtArgs>, T, "findUniqueOrThrow">, never, ExtArgs>

    /**
     * Find the first Tire_error_code that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {tire_error_codeFindFirstArgs} args - Arguments to find a Tire_error_code
     * @example
     * // Get one Tire_error_code
     * const tire_error_code = await prisma.tire_error_code.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends tire_error_codeFindFirstArgs>(args?: SelectSubset<T, tire_error_codeFindFirstArgs<ExtArgs>>): Prisma__tire_error_codeClient<$Result.GetResult<Prisma.$tire_error_codePayload<ExtArgs>, T, "findFirst"> | null, null, ExtArgs>

    /**
     * Find the first Tire_error_code that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {tire_error_codeFindFirstOrThrowArgs} args - Arguments to find a Tire_error_code
     * @example
     * // Get one Tire_error_code
     * const tire_error_code = await prisma.tire_error_code.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends tire_error_codeFindFirstOrThrowArgs>(args?: SelectSubset<T, tire_error_codeFindFirstOrThrowArgs<ExtArgs>>): Prisma__tire_error_codeClient<$Result.GetResult<Prisma.$tire_error_codePayload<ExtArgs>, T, "findFirstOrThrow">, never, ExtArgs>

    /**
     * Find zero or more Tire_error_codes that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {tire_error_codeFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all Tire_error_codes
     * const tire_error_codes = await prisma.tire_error_code.findMany()
     * 
     * // Get first 10 Tire_error_codes
     * const tire_error_codes = await prisma.tire_error_code.findMany({ take: 10 })
     * 
     * // Only select the `code`
     * const tire_error_codeWithCodeOnly = await prisma.tire_error_code.findMany({ select: { code: true } })
     * 
     */
    findMany<T extends tire_error_codeFindManyArgs>(args?: SelectSubset<T, tire_error_codeFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$tire_error_codePayload<ExtArgs>, T, "findMany">>

    /**
     * Create a Tire_error_code.
     * @param {tire_error_codeCreateArgs} args - Arguments to create a Tire_error_code.
     * @example
     * // Create one Tire_error_code
     * const Tire_error_code = await prisma.tire_error_code.create({
     *   data: {
     *     // ... data to create a Tire_error_code
     *   }
     * })
     * 
     */
    create<T extends tire_error_codeCreateArgs>(args: SelectSubset<T, tire_error_codeCreateArgs<ExtArgs>>): Prisma__tire_error_codeClient<$Result.GetResult<Prisma.$tire_error_codePayload<ExtArgs>, T, "create">, never, ExtArgs>

    /**
     * Create many Tire_error_codes.
     * @param {tire_error_codeCreateManyArgs} args - Arguments to create many Tire_error_codes.
     * @example
     * // Create many Tire_error_codes
     * const tire_error_code = await prisma.tire_error_code.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends tire_error_codeCreateManyArgs>(args?: SelectSubset<T, tire_error_codeCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create many Tire_error_codes and returns the data saved in the database.
     * @param {tire_error_codeCreateManyAndReturnArgs} args - Arguments to create many Tire_error_codes.
     * @example
     * // Create many Tire_error_codes
     * const tire_error_code = await prisma.tire_error_code.createManyAndReturn({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Create many Tire_error_codes and only return the `code`
     * const tire_error_codeWithCodeOnly = await prisma.tire_error_code.createManyAndReturn({ 
     *   select: { code: true },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    createManyAndReturn<T extends tire_error_codeCreateManyAndReturnArgs>(args?: SelectSubset<T, tire_error_codeCreateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$tire_error_codePayload<ExtArgs>, T, "createManyAndReturn">>

    /**
     * Delete a Tire_error_code.
     * @param {tire_error_codeDeleteArgs} args - Arguments to delete one Tire_error_code.
     * @example
     * // Delete one Tire_error_code
     * const Tire_error_code = await prisma.tire_error_code.delete({
     *   where: {
     *     // ... filter to delete one Tire_error_code
     *   }
     * })
     * 
     */
    delete<T extends tire_error_codeDeleteArgs>(args: SelectSubset<T, tire_error_codeDeleteArgs<ExtArgs>>): Prisma__tire_error_codeClient<$Result.GetResult<Prisma.$tire_error_codePayload<ExtArgs>, T, "delete">, never, ExtArgs>

    /**
     * Update one Tire_error_code.
     * @param {tire_error_codeUpdateArgs} args - Arguments to update one Tire_error_code.
     * @example
     * // Update one Tire_error_code
     * const tire_error_code = await prisma.tire_error_code.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends tire_error_codeUpdateArgs>(args: SelectSubset<T, tire_error_codeUpdateArgs<ExtArgs>>): Prisma__tire_error_codeClient<$Result.GetResult<Prisma.$tire_error_codePayload<ExtArgs>, T, "update">, never, ExtArgs>

    /**
     * Delete zero or more Tire_error_codes.
     * @param {tire_error_codeDeleteManyArgs} args - Arguments to filter Tire_error_codes to delete.
     * @example
     * // Delete a few Tire_error_codes
     * const { count } = await prisma.tire_error_code.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends tire_error_codeDeleteManyArgs>(args?: SelectSubset<T, tire_error_codeDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Tire_error_codes.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {tire_error_codeUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many Tire_error_codes
     * const tire_error_code = await prisma.tire_error_code.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends tire_error_codeUpdateManyArgs>(args: SelectSubset<T, tire_error_codeUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create or update one Tire_error_code.
     * @param {tire_error_codeUpsertArgs} args - Arguments to update or create a Tire_error_code.
     * @example
     * // Update or create a Tire_error_code
     * const tire_error_code = await prisma.tire_error_code.upsert({
     *   create: {
     *     // ... data to create a Tire_error_code
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the Tire_error_code we want to update
     *   }
     * })
     */
    upsert<T extends tire_error_codeUpsertArgs>(args: SelectSubset<T, tire_error_codeUpsertArgs<ExtArgs>>): Prisma__tire_error_codeClient<$Result.GetResult<Prisma.$tire_error_codePayload<ExtArgs>, T, "upsert">, never, ExtArgs>


    /**
     * Count the number of Tire_error_codes.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {tire_error_codeCountArgs} args - Arguments to filter Tire_error_codes to count.
     * @example
     * // Count the number of Tire_error_codes
     * const count = await prisma.tire_error_code.count({
     *   where: {
     *     // ... the filter for the Tire_error_codes we want to count
     *   }
     * })
    **/
    count<T extends tire_error_codeCountArgs>(
      args?: Subset<T, tire_error_codeCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], Tire_error_codeCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a Tire_error_code.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {Tire_error_codeAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends Tire_error_codeAggregateArgs>(args: Subset<T, Tire_error_codeAggregateArgs>): Prisma.PrismaPromise<GetTire_error_codeAggregateType<T>>

    /**
     * Group by Tire_error_code.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {tire_error_codeGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends tire_error_codeGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: tire_error_codeGroupByArgs['orderBy'] }
        : { orderBy?: tire_error_codeGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, tire_error_codeGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetTire_error_codeGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the tire_error_code model
   */
  readonly fields: tire_error_codeFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for tire_error_code.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__tire_error_codeClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the tire_error_code model
   */ 
  interface tire_error_codeFieldRefs {
    readonly code: FieldRef<"tire_error_code", 'Int'>
    readonly description: FieldRef<"tire_error_code", 'String'>
  }
    

  // Custom InputTypes
  /**
   * tire_error_code findUnique
   */
  export type tire_error_codeFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the tire_error_code
     */
    select?: tire_error_codeSelect<ExtArgs> | null
    /**
     * Filter, which tire_error_code to fetch.
     */
    where: tire_error_codeWhereUniqueInput
  }

  /**
   * tire_error_code findUniqueOrThrow
   */
  export type tire_error_codeFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the tire_error_code
     */
    select?: tire_error_codeSelect<ExtArgs> | null
    /**
     * Filter, which tire_error_code to fetch.
     */
    where: tire_error_codeWhereUniqueInput
  }

  /**
   * tire_error_code findFirst
   */
  export type tire_error_codeFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the tire_error_code
     */
    select?: tire_error_codeSelect<ExtArgs> | null
    /**
     * Filter, which tire_error_code to fetch.
     */
    where?: tire_error_codeWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of tire_error_codes to fetch.
     */
    orderBy?: tire_error_codeOrderByWithRelationInput | tire_error_codeOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for tire_error_codes.
     */
    cursor?: tire_error_codeWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` tire_error_codes from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` tire_error_codes.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of tire_error_codes.
     */
    distinct?: Tire_error_codeScalarFieldEnum | Tire_error_codeScalarFieldEnum[]
  }

  /**
   * tire_error_code findFirstOrThrow
   */
  export type tire_error_codeFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the tire_error_code
     */
    select?: tire_error_codeSelect<ExtArgs> | null
    /**
     * Filter, which tire_error_code to fetch.
     */
    where?: tire_error_codeWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of tire_error_codes to fetch.
     */
    orderBy?: tire_error_codeOrderByWithRelationInput | tire_error_codeOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for tire_error_codes.
     */
    cursor?: tire_error_codeWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` tire_error_codes from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` tire_error_codes.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of tire_error_codes.
     */
    distinct?: Tire_error_codeScalarFieldEnum | Tire_error_codeScalarFieldEnum[]
  }

  /**
   * tire_error_code findMany
   */
  export type tire_error_codeFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the tire_error_code
     */
    select?: tire_error_codeSelect<ExtArgs> | null
    /**
     * Filter, which tire_error_codes to fetch.
     */
    where?: tire_error_codeWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of tire_error_codes to fetch.
     */
    orderBy?: tire_error_codeOrderByWithRelationInput | tire_error_codeOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing tire_error_codes.
     */
    cursor?: tire_error_codeWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` tire_error_codes from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` tire_error_codes.
     */
    skip?: number
    distinct?: Tire_error_codeScalarFieldEnum | Tire_error_codeScalarFieldEnum[]
  }

  /**
   * tire_error_code create
   */
  export type tire_error_codeCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the tire_error_code
     */
    select?: tire_error_codeSelect<ExtArgs> | null
    /**
     * The data needed to create a tire_error_code.
     */
    data: XOR<tire_error_codeCreateInput, tire_error_codeUncheckedCreateInput>
  }

  /**
   * tire_error_code createMany
   */
  export type tire_error_codeCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many tire_error_codes.
     */
    data: tire_error_codeCreateManyInput | tire_error_codeCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * tire_error_code createManyAndReturn
   */
  export type tire_error_codeCreateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the tire_error_code
     */
    select?: tire_error_codeSelectCreateManyAndReturn<ExtArgs> | null
    /**
     * The data used to create many tire_error_codes.
     */
    data: tire_error_codeCreateManyInput | tire_error_codeCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * tire_error_code update
   */
  export type tire_error_codeUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the tire_error_code
     */
    select?: tire_error_codeSelect<ExtArgs> | null
    /**
     * The data needed to update a tire_error_code.
     */
    data: XOR<tire_error_codeUpdateInput, tire_error_codeUncheckedUpdateInput>
    /**
     * Choose, which tire_error_code to update.
     */
    where: tire_error_codeWhereUniqueInput
  }

  /**
   * tire_error_code updateMany
   */
  export type tire_error_codeUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update tire_error_codes.
     */
    data: XOR<tire_error_codeUpdateManyMutationInput, tire_error_codeUncheckedUpdateManyInput>
    /**
     * Filter which tire_error_codes to update
     */
    where?: tire_error_codeWhereInput
  }

  /**
   * tire_error_code upsert
   */
  export type tire_error_codeUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the tire_error_code
     */
    select?: tire_error_codeSelect<ExtArgs> | null
    /**
     * The filter to search for the tire_error_code to update in case it exists.
     */
    where: tire_error_codeWhereUniqueInput
    /**
     * In case the tire_error_code found by the `where` argument doesn't exist, create a new tire_error_code with this data.
     */
    create: XOR<tire_error_codeCreateInput, tire_error_codeUncheckedCreateInput>
    /**
     * In case the tire_error_code was found with the provided `where` argument, update it with this data.
     */
    update: XOR<tire_error_codeUpdateInput, tire_error_codeUncheckedUpdateInput>
  }

  /**
   * tire_error_code delete
   */
  export type tire_error_codeDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the tire_error_code
     */
    select?: tire_error_codeSelect<ExtArgs> | null
    /**
     * Filter which tire_error_code to delete.
     */
    where: tire_error_codeWhereUniqueInput
  }

  /**
   * tire_error_code deleteMany
   */
  export type tire_error_codeDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which tire_error_codes to delete
     */
    where?: tire_error_codeWhereInput
  }

  /**
   * tire_error_code without action
   */
  export type tire_error_codeDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the tire_error_code
     */
    select?: tire_error_codeSelect<ExtArgs> | null
  }


  /**
   * Model tire_position_config
   */

  export type AggregateTire_position_config = {
    _count: Tire_position_configCountAggregateOutputType | null
    _avg: Tire_position_configAvgAggregateOutputType | null
    _sum: Tire_position_configSumAggregateOutputType | null
    _min: Tire_position_configMinAggregateOutputType | null
    _max: Tire_position_configMaxAggregateOutputType | null
  }

  export type Tire_position_configAvgAggregateOutputType = {
    tire_no: number | null
  }

  export type Tire_position_configSumAggregateOutputType = {
    tire_no: number | null
  }

  export type Tire_position_configMinAggregateOutputType = {
    id: string | null
    truck_id: string | null
    tire_no: number | null
    position_name: string | null
    wheel_type: string | null
    is_active: boolean | null
    created_at: Date | null
  }

  export type Tire_position_configMaxAggregateOutputType = {
    id: string | null
    truck_id: string | null
    tire_no: number | null
    position_name: string | null
    wheel_type: string | null
    is_active: boolean | null
    created_at: Date | null
  }

  export type Tire_position_configCountAggregateOutputType = {
    id: number
    truck_id: number
    tire_no: number
    position_name: number
    wheel_type: number
    is_active: number
    created_at: number
    _all: number
  }


  export type Tire_position_configAvgAggregateInputType = {
    tire_no?: true
  }

  export type Tire_position_configSumAggregateInputType = {
    tire_no?: true
  }

  export type Tire_position_configMinAggregateInputType = {
    id?: true
    truck_id?: true
    tire_no?: true
    position_name?: true
    wheel_type?: true
    is_active?: true
    created_at?: true
  }

  export type Tire_position_configMaxAggregateInputType = {
    id?: true
    truck_id?: true
    tire_no?: true
    position_name?: true
    wheel_type?: true
    is_active?: true
    created_at?: true
  }

  export type Tire_position_configCountAggregateInputType = {
    id?: true
    truck_id?: true
    tire_no?: true
    position_name?: true
    wheel_type?: true
    is_active?: true
    created_at?: true
    _all?: true
  }

  export type Tire_position_configAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which tire_position_config to aggregate.
     */
    where?: tire_position_configWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of tire_position_configs to fetch.
     */
    orderBy?: tire_position_configOrderByWithRelationInput | tire_position_configOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: tire_position_configWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` tire_position_configs from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` tire_position_configs.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned tire_position_configs
    **/
    _count?: true | Tire_position_configCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: Tire_position_configAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: Tire_position_configSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: Tire_position_configMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: Tire_position_configMaxAggregateInputType
  }

  export type GetTire_position_configAggregateType<T extends Tire_position_configAggregateArgs> = {
        [P in keyof T & keyof AggregateTire_position_config]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateTire_position_config[P]>
      : GetScalarType<T[P], AggregateTire_position_config[P]>
  }




  export type tire_position_configGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: tire_position_configWhereInput
    orderBy?: tire_position_configOrderByWithAggregationInput | tire_position_configOrderByWithAggregationInput[]
    by: Tire_position_configScalarFieldEnum[] | Tire_position_configScalarFieldEnum
    having?: tire_position_configScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: Tire_position_configCountAggregateInputType | true
    _avg?: Tire_position_configAvgAggregateInputType
    _sum?: Tire_position_configSumAggregateInputType
    _min?: Tire_position_configMinAggregateInputType
    _max?: Tire_position_configMaxAggregateInputType
  }

  export type Tire_position_configGroupByOutputType = {
    id: string
    truck_id: string | null
    tire_no: number
    position_name: string | null
    wheel_type: string | null
    is_active: boolean | null
    created_at: Date | null
    _count: Tire_position_configCountAggregateOutputType | null
    _avg: Tire_position_configAvgAggregateOutputType | null
    _sum: Tire_position_configSumAggregateOutputType | null
    _min: Tire_position_configMinAggregateOutputType | null
    _max: Tire_position_configMaxAggregateOutputType | null
  }

  type GetTire_position_configGroupByPayload<T extends tire_position_configGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<Tire_position_configGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof Tire_position_configGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], Tire_position_configGroupByOutputType[P]>
            : GetScalarType<T[P], Tire_position_configGroupByOutputType[P]>
        }
      >
    >


  export type tire_position_configSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    truck_id?: boolean
    tire_no?: boolean
    position_name?: boolean
    wheel_type?: boolean
    is_active?: boolean
    created_at?: boolean
    truck?: boolean | tire_position_config$truckArgs<ExtArgs>
  }, ExtArgs["result"]["tire_position_config"]>

  export type tire_position_configSelectCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    truck_id?: boolean
    tire_no?: boolean
    position_name?: boolean
    wheel_type?: boolean
    is_active?: boolean
    created_at?: boolean
    truck?: boolean | tire_position_config$truckArgs<ExtArgs>
  }, ExtArgs["result"]["tire_position_config"]>

  export type tire_position_configSelectScalar = {
    id?: boolean
    truck_id?: boolean
    tire_no?: boolean
    position_name?: boolean
    wheel_type?: boolean
    is_active?: boolean
    created_at?: boolean
  }

  export type tire_position_configInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    truck?: boolean | tire_position_config$truckArgs<ExtArgs>
  }
  export type tire_position_configIncludeCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    truck?: boolean | tire_position_config$truckArgs<ExtArgs>
  }

  export type $tire_position_configPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "tire_position_config"
    objects: {
      truck: Prisma.$truckPayload<ExtArgs> | null
    }
    scalars: $Extensions.GetPayloadResult<{
      id: string
      truck_id: string | null
      tire_no: number
      position_name: string | null
      wheel_type: string | null
      is_active: boolean | null
      created_at: Date | null
    }, ExtArgs["result"]["tire_position_config"]>
    composites: {}
  }

  type tire_position_configGetPayload<S extends boolean | null | undefined | tire_position_configDefaultArgs> = $Result.GetResult<Prisma.$tire_position_configPayload, S>

  type tire_position_configCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = 
    Omit<tire_position_configFindManyArgs, 'select' | 'include' | 'distinct'> & {
      select?: Tire_position_configCountAggregateInputType | true
    }

  export interface tire_position_configDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['tire_position_config'], meta: { name: 'tire_position_config' } }
    /**
     * Find zero or one Tire_position_config that matches the filter.
     * @param {tire_position_configFindUniqueArgs} args - Arguments to find a Tire_position_config
     * @example
     * // Get one Tire_position_config
     * const tire_position_config = await prisma.tire_position_config.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends tire_position_configFindUniqueArgs>(args: SelectSubset<T, tire_position_configFindUniqueArgs<ExtArgs>>): Prisma__tire_position_configClient<$Result.GetResult<Prisma.$tire_position_configPayload<ExtArgs>, T, "findUnique"> | null, null, ExtArgs>

    /**
     * Find one Tire_position_config that matches the filter or throw an error with `error.code='P2025'` 
     * if no matches were found.
     * @param {tire_position_configFindUniqueOrThrowArgs} args - Arguments to find a Tire_position_config
     * @example
     * // Get one Tire_position_config
     * const tire_position_config = await prisma.tire_position_config.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends tire_position_configFindUniqueOrThrowArgs>(args: SelectSubset<T, tire_position_configFindUniqueOrThrowArgs<ExtArgs>>): Prisma__tire_position_configClient<$Result.GetResult<Prisma.$tire_position_configPayload<ExtArgs>, T, "findUniqueOrThrow">, never, ExtArgs>

    /**
     * Find the first Tire_position_config that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {tire_position_configFindFirstArgs} args - Arguments to find a Tire_position_config
     * @example
     * // Get one Tire_position_config
     * const tire_position_config = await prisma.tire_position_config.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends tire_position_configFindFirstArgs>(args?: SelectSubset<T, tire_position_configFindFirstArgs<ExtArgs>>): Prisma__tire_position_configClient<$Result.GetResult<Prisma.$tire_position_configPayload<ExtArgs>, T, "findFirst"> | null, null, ExtArgs>

    /**
     * Find the first Tire_position_config that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {tire_position_configFindFirstOrThrowArgs} args - Arguments to find a Tire_position_config
     * @example
     * // Get one Tire_position_config
     * const tire_position_config = await prisma.tire_position_config.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends tire_position_configFindFirstOrThrowArgs>(args?: SelectSubset<T, tire_position_configFindFirstOrThrowArgs<ExtArgs>>): Prisma__tire_position_configClient<$Result.GetResult<Prisma.$tire_position_configPayload<ExtArgs>, T, "findFirstOrThrow">, never, ExtArgs>

    /**
     * Find zero or more Tire_position_configs that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {tire_position_configFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all Tire_position_configs
     * const tire_position_configs = await prisma.tire_position_config.findMany()
     * 
     * // Get first 10 Tire_position_configs
     * const tire_position_configs = await prisma.tire_position_config.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const tire_position_configWithIdOnly = await prisma.tire_position_config.findMany({ select: { id: true } })
     * 
     */
    findMany<T extends tire_position_configFindManyArgs>(args?: SelectSubset<T, tire_position_configFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$tire_position_configPayload<ExtArgs>, T, "findMany">>

    /**
     * Create a Tire_position_config.
     * @param {tire_position_configCreateArgs} args - Arguments to create a Tire_position_config.
     * @example
     * // Create one Tire_position_config
     * const Tire_position_config = await prisma.tire_position_config.create({
     *   data: {
     *     // ... data to create a Tire_position_config
     *   }
     * })
     * 
     */
    create<T extends tire_position_configCreateArgs>(args: SelectSubset<T, tire_position_configCreateArgs<ExtArgs>>): Prisma__tire_position_configClient<$Result.GetResult<Prisma.$tire_position_configPayload<ExtArgs>, T, "create">, never, ExtArgs>

    /**
     * Create many Tire_position_configs.
     * @param {tire_position_configCreateManyArgs} args - Arguments to create many Tire_position_configs.
     * @example
     * // Create many Tire_position_configs
     * const tire_position_config = await prisma.tire_position_config.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends tire_position_configCreateManyArgs>(args?: SelectSubset<T, tire_position_configCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create many Tire_position_configs and returns the data saved in the database.
     * @param {tire_position_configCreateManyAndReturnArgs} args - Arguments to create many Tire_position_configs.
     * @example
     * // Create many Tire_position_configs
     * const tire_position_config = await prisma.tire_position_config.createManyAndReturn({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Create many Tire_position_configs and only return the `id`
     * const tire_position_configWithIdOnly = await prisma.tire_position_config.createManyAndReturn({ 
     *   select: { id: true },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    createManyAndReturn<T extends tire_position_configCreateManyAndReturnArgs>(args?: SelectSubset<T, tire_position_configCreateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$tire_position_configPayload<ExtArgs>, T, "createManyAndReturn">>

    /**
     * Delete a Tire_position_config.
     * @param {tire_position_configDeleteArgs} args - Arguments to delete one Tire_position_config.
     * @example
     * // Delete one Tire_position_config
     * const Tire_position_config = await prisma.tire_position_config.delete({
     *   where: {
     *     // ... filter to delete one Tire_position_config
     *   }
     * })
     * 
     */
    delete<T extends tire_position_configDeleteArgs>(args: SelectSubset<T, tire_position_configDeleteArgs<ExtArgs>>): Prisma__tire_position_configClient<$Result.GetResult<Prisma.$tire_position_configPayload<ExtArgs>, T, "delete">, never, ExtArgs>

    /**
     * Update one Tire_position_config.
     * @param {tire_position_configUpdateArgs} args - Arguments to update one Tire_position_config.
     * @example
     * // Update one Tire_position_config
     * const tire_position_config = await prisma.tire_position_config.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends tire_position_configUpdateArgs>(args: SelectSubset<T, tire_position_configUpdateArgs<ExtArgs>>): Prisma__tire_position_configClient<$Result.GetResult<Prisma.$tire_position_configPayload<ExtArgs>, T, "update">, never, ExtArgs>

    /**
     * Delete zero or more Tire_position_configs.
     * @param {tire_position_configDeleteManyArgs} args - Arguments to filter Tire_position_configs to delete.
     * @example
     * // Delete a few Tire_position_configs
     * const { count } = await prisma.tire_position_config.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends tire_position_configDeleteManyArgs>(args?: SelectSubset<T, tire_position_configDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Tire_position_configs.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {tire_position_configUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many Tire_position_configs
     * const tire_position_config = await prisma.tire_position_config.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends tire_position_configUpdateManyArgs>(args: SelectSubset<T, tire_position_configUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create or update one Tire_position_config.
     * @param {tire_position_configUpsertArgs} args - Arguments to update or create a Tire_position_config.
     * @example
     * // Update or create a Tire_position_config
     * const tire_position_config = await prisma.tire_position_config.upsert({
     *   create: {
     *     // ... data to create a Tire_position_config
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the Tire_position_config we want to update
     *   }
     * })
     */
    upsert<T extends tire_position_configUpsertArgs>(args: SelectSubset<T, tire_position_configUpsertArgs<ExtArgs>>): Prisma__tire_position_configClient<$Result.GetResult<Prisma.$tire_position_configPayload<ExtArgs>, T, "upsert">, never, ExtArgs>


    /**
     * Count the number of Tire_position_configs.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {tire_position_configCountArgs} args - Arguments to filter Tire_position_configs to count.
     * @example
     * // Count the number of Tire_position_configs
     * const count = await prisma.tire_position_config.count({
     *   where: {
     *     // ... the filter for the Tire_position_configs we want to count
     *   }
     * })
    **/
    count<T extends tire_position_configCountArgs>(
      args?: Subset<T, tire_position_configCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], Tire_position_configCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a Tire_position_config.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {Tire_position_configAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends Tire_position_configAggregateArgs>(args: Subset<T, Tire_position_configAggregateArgs>): Prisma.PrismaPromise<GetTire_position_configAggregateType<T>>

    /**
     * Group by Tire_position_config.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {tire_position_configGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends tire_position_configGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: tire_position_configGroupByArgs['orderBy'] }
        : { orderBy?: tire_position_configGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, tire_position_configGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetTire_position_configGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the tire_position_config model
   */
  readonly fields: tire_position_configFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for tire_position_config.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__tire_position_configClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    truck<T extends tire_position_config$truckArgs<ExtArgs> = {}>(args?: Subset<T, tire_position_config$truckArgs<ExtArgs>>): Prisma__truckClient<$Result.GetResult<Prisma.$truckPayload<ExtArgs>, T, "findUniqueOrThrow"> | null, null, ExtArgs>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the tire_position_config model
   */ 
  interface tire_position_configFieldRefs {
    readonly id: FieldRef<"tire_position_config", 'String'>
    readonly truck_id: FieldRef<"tire_position_config", 'String'>
    readonly tire_no: FieldRef<"tire_position_config", 'Int'>
    readonly position_name: FieldRef<"tire_position_config", 'String'>
    readonly wheel_type: FieldRef<"tire_position_config", 'String'>
    readonly is_active: FieldRef<"tire_position_config", 'Boolean'>
    readonly created_at: FieldRef<"tire_position_config", 'DateTime'>
  }
    

  // Custom InputTypes
  /**
   * tire_position_config findUnique
   */
  export type tire_position_configFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the tire_position_config
     */
    select?: tire_position_configSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: tire_position_configInclude<ExtArgs> | null
    /**
     * Filter, which tire_position_config to fetch.
     */
    where: tire_position_configWhereUniqueInput
  }

  /**
   * tire_position_config findUniqueOrThrow
   */
  export type tire_position_configFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the tire_position_config
     */
    select?: tire_position_configSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: tire_position_configInclude<ExtArgs> | null
    /**
     * Filter, which tire_position_config to fetch.
     */
    where: tire_position_configWhereUniqueInput
  }

  /**
   * tire_position_config findFirst
   */
  export type tire_position_configFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the tire_position_config
     */
    select?: tire_position_configSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: tire_position_configInclude<ExtArgs> | null
    /**
     * Filter, which tire_position_config to fetch.
     */
    where?: tire_position_configWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of tire_position_configs to fetch.
     */
    orderBy?: tire_position_configOrderByWithRelationInput | tire_position_configOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for tire_position_configs.
     */
    cursor?: tire_position_configWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` tire_position_configs from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` tire_position_configs.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of tire_position_configs.
     */
    distinct?: Tire_position_configScalarFieldEnum | Tire_position_configScalarFieldEnum[]
  }

  /**
   * tire_position_config findFirstOrThrow
   */
  export type tire_position_configFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the tire_position_config
     */
    select?: tire_position_configSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: tire_position_configInclude<ExtArgs> | null
    /**
     * Filter, which tire_position_config to fetch.
     */
    where?: tire_position_configWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of tire_position_configs to fetch.
     */
    orderBy?: tire_position_configOrderByWithRelationInput | tire_position_configOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for tire_position_configs.
     */
    cursor?: tire_position_configWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` tire_position_configs from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` tire_position_configs.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of tire_position_configs.
     */
    distinct?: Tire_position_configScalarFieldEnum | Tire_position_configScalarFieldEnum[]
  }

  /**
   * tire_position_config findMany
   */
  export type tire_position_configFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the tire_position_config
     */
    select?: tire_position_configSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: tire_position_configInclude<ExtArgs> | null
    /**
     * Filter, which tire_position_configs to fetch.
     */
    where?: tire_position_configWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of tire_position_configs to fetch.
     */
    orderBy?: tire_position_configOrderByWithRelationInput | tire_position_configOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing tire_position_configs.
     */
    cursor?: tire_position_configWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` tire_position_configs from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` tire_position_configs.
     */
    skip?: number
    distinct?: Tire_position_configScalarFieldEnum | Tire_position_configScalarFieldEnum[]
  }

  /**
   * tire_position_config create
   */
  export type tire_position_configCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the tire_position_config
     */
    select?: tire_position_configSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: tire_position_configInclude<ExtArgs> | null
    /**
     * The data needed to create a tire_position_config.
     */
    data: XOR<tire_position_configCreateInput, tire_position_configUncheckedCreateInput>
  }

  /**
   * tire_position_config createMany
   */
  export type tire_position_configCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many tire_position_configs.
     */
    data: tire_position_configCreateManyInput | tire_position_configCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * tire_position_config createManyAndReturn
   */
  export type tire_position_configCreateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the tire_position_config
     */
    select?: tire_position_configSelectCreateManyAndReturn<ExtArgs> | null
    /**
     * The data used to create many tire_position_configs.
     */
    data: tire_position_configCreateManyInput | tire_position_configCreateManyInput[]
    skipDuplicates?: boolean
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: tire_position_configIncludeCreateManyAndReturn<ExtArgs> | null
  }

  /**
   * tire_position_config update
   */
  export type tire_position_configUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the tire_position_config
     */
    select?: tire_position_configSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: tire_position_configInclude<ExtArgs> | null
    /**
     * The data needed to update a tire_position_config.
     */
    data: XOR<tire_position_configUpdateInput, tire_position_configUncheckedUpdateInput>
    /**
     * Choose, which tire_position_config to update.
     */
    where: tire_position_configWhereUniqueInput
  }

  /**
   * tire_position_config updateMany
   */
  export type tire_position_configUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update tire_position_configs.
     */
    data: XOR<tire_position_configUpdateManyMutationInput, tire_position_configUncheckedUpdateManyInput>
    /**
     * Filter which tire_position_configs to update
     */
    where?: tire_position_configWhereInput
  }

  /**
   * tire_position_config upsert
   */
  export type tire_position_configUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the tire_position_config
     */
    select?: tire_position_configSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: tire_position_configInclude<ExtArgs> | null
    /**
     * The filter to search for the tire_position_config to update in case it exists.
     */
    where: tire_position_configWhereUniqueInput
    /**
     * In case the tire_position_config found by the `where` argument doesn't exist, create a new tire_position_config with this data.
     */
    create: XOR<tire_position_configCreateInput, tire_position_configUncheckedCreateInput>
    /**
     * In case the tire_position_config was found with the provided `where` argument, update it with this data.
     */
    update: XOR<tire_position_configUpdateInput, tire_position_configUncheckedUpdateInput>
  }

  /**
   * tire_position_config delete
   */
  export type tire_position_configDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the tire_position_config
     */
    select?: tire_position_configSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: tire_position_configInclude<ExtArgs> | null
    /**
     * Filter which tire_position_config to delete.
     */
    where: tire_position_configWhereUniqueInput
  }

  /**
   * tire_position_config deleteMany
   */
  export type tire_position_configDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which tire_position_configs to delete
     */
    where?: tire_position_configWhereInput
  }

  /**
   * tire_position_config.truck
   */
  export type tire_position_config$truckArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the truck
     */
    select?: truckSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: truckInclude<ExtArgs> | null
    where?: truckWhereInput
  }

  /**
   * tire_position_config without action
   */
  export type tire_position_configDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the tire_position_config
     */
    select?: tire_position_configSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: tire_position_configInclude<ExtArgs> | null
  }


  /**
   * Model tire_pressure_event
   */

  export type AggregateTire_pressure_event = {
    _count: Tire_pressure_eventCountAggregateOutputType | null
    _avg: Tire_pressure_eventAvgAggregateOutputType | null
    _sum: Tire_pressure_eventSumAggregateOutputType | null
    _min: Tire_pressure_eventMinAggregateOutputType | null
    _max: Tire_pressure_eventMaxAggregateOutputType | null
  }

  export type Tire_pressure_eventAvgAggregateOutputType = {
    tire_no: number | null
    pressure_kpa: number | null
    temp_celsius: number | null
    battery_level: number | null
  }

  export type Tire_pressure_eventSumAggregateOutputType = {
    tire_no: number | null
    pressure_kpa: number | null
    temp_celsius: number | null
    battery_level: number | null
  }

  export type Tire_pressure_eventMinAggregateOutputType = {
    id: string | null
    device_id: string | null
    truck_id: string | null
    tire_no: number | null
    pressure_kpa: number | null
    temp_celsius: number | null
    ex_type: string | null
    battery_level: number | null
    changed_at: Date | null
    created_by: string | null
  }

  export type Tire_pressure_eventMaxAggregateOutputType = {
    id: string | null
    device_id: string | null
    truck_id: string | null
    tire_no: number | null
    pressure_kpa: number | null
    temp_celsius: number | null
    ex_type: string | null
    battery_level: number | null
    changed_at: Date | null
    created_by: string | null
  }

  export type Tire_pressure_eventCountAggregateOutputType = {
    id: number
    device_id: number
    truck_id: number
    tire_no: number
    pressure_kpa: number
    temp_celsius: number
    ex_type: number
    battery_level: number
    changed_at: number
    created_by: number
    _all: number
  }


  export type Tire_pressure_eventAvgAggregateInputType = {
    tire_no?: true
    pressure_kpa?: true
    temp_celsius?: true
    battery_level?: true
  }

  export type Tire_pressure_eventSumAggregateInputType = {
    tire_no?: true
    pressure_kpa?: true
    temp_celsius?: true
    battery_level?: true
  }

  export type Tire_pressure_eventMinAggregateInputType = {
    id?: true
    device_id?: true
    truck_id?: true
    tire_no?: true
    pressure_kpa?: true
    temp_celsius?: true
    ex_type?: true
    battery_level?: true
    changed_at?: true
    created_by?: true
  }

  export type Tire_pressure_eventMaxAggregateInputType = {
    id?: true
    device_id?: true
    truck_id?: true
    tire_no?: true
    pressure_kpa?: true
    temp_celsius?: true
    ex_type?: true
    battery_level?: true
    changed_at?: true
    created_by?: true
  }

  export type Tire_pressure_eventCountAggregateInputType = {
    id?: true
    device_id?: true
    truck_id?: true
    tire_no?: true
    pressure_kpa?: true
    temp_celsius?: true
    ex_type?: true
    battery_level?: true
    changed_at?: true
    created_by?: true
    _all?: true
  }

  export type Tire_pressure_eventAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which tire_pressure_event to aggregate.
     */
    where?: tire_pressure_eventWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of tire_pressure_events to fetch.
     */
    orderBy?: tire_pressure_eventOrderByWithRelationInput | tire_pressure_eventOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: tire_pressure_eventWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` tire_pressure_events from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` tire_pressure_events.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned tire_pressure_events
    **/
    _count?: true | Tire_pressure_eventCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: Tire_pressure_eventAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: Tire_pressure_eventSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: Tire_pressure_eventMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: Tire_pressure_eventMaxAggregateInputType
  }

  export type GetTire_pressure_eventAggregateType<T extends Tire_pressure_eventAggregateArgs> = {
        [P in keyof T & keyof AggregateTire_pressure_event]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateTire_pressure_event[P]>
      : GetScalarType<T[P], AggregateTire_pressure_event[P]>
  }




  export type tire_pressure_eventGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: tire_pressure_eventWhereInput
    orderBy?: tire_pressure_eventOrderByWithAggregationInput | tire_pressure_eventOrderByWithAggregationInput[]
    by: Tire_pressure_eventScalarFieldEnum[] | Tire_pressure_eventScalarFieldEnum
    having?: tire_pressure_eventScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: Tire_pressure_eventCountAggregateInputType | true
    _avg?: Tire_pressure_eventAvgAggregateInputType
    _sum?: Tire_pressure_eventSumAggregateInputType
    _min?: Tire_pressure_eventMinAggregateInputType
    _max?: Tire_pressure_eventMaxAggregateInputType
  }

  export type Tire_pressure_eventGroupByOutputType = {
    id: string
    device_id: string
    truck_id: string
    tire_no: number
    pressure_kpa: number | null
    temp_celsius: number | null
    ex_type: string | null
    battery_level: number | null
    changed_at: Date
    created_by: string | null
    _count: Tire_pressure_eventCountAggregateOutputType | null
    _avg: Tire_pressure_eventAvgAggregateOutputType | null
    _sum: Tire_pressure_eventSumAggregateOutputType | null
    _min: Tire_pressure_eventMinAggregateOutputType | null
    _max: Tire_pressure_eventMaxAggregateOutputType | null
  }

  type GetTire_pressure_eventGroupByPayload<T extends tire_pressure_eventGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<Tire_pressure_eventGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof Tire_pressure_eventGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], Tire_pressure_eventGroupByOutputType[P]>
            : GetScalarType<T[P], Tire_pressure_eventGroupByOutputType[P]>
        }
      >
    >


  export type tire_pressure_eventSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    device_id?: boolean
    truck_id?: boolean
    tire_no?: boolean
    pressure_kpa?: boolean
    temp_celsius?: boolean
    ex_type?: boolean
    battery_level?: boolean
    changed_at?: boolean
    created_by?: boolean
    device?: boolean | deviceDefaultArgs<ExtArgs>
    truck?: boolean | truckDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["tire_pressure_event"]>

  export type tire_pressure_eventSelectCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    device_id?: boolean
    truck_id?: boolean
    tire_no?: boolean
    pressure_kpa?: boolean
    temp_celsius?: boolean
    ex_type?: boolean
    battery_level?: boolean
    changed_at?: boolean
    created_by?: boolean
    device?: boolean | deviceDefaultArgs<ExtArgs>
    truck?: boolean | truckDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["tire_pressure_event"]>

  export type tire_pressure_eventSelectScalar = {
    id?: boolean
    device_id?: boolean
    truck_id?: boolean
    tire_no?: boolean
    pressure_kpa?: boolean
    temp_celsius?: boolean
    ex_type?: boolean
    battery_level?: boolean
    changed_at?: boolean
    created_by?: boolean
  }

  export type tire_pressure_eventInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    device?: boolean | deviceDefaultArgs<ExtArgs>
    truck?: boolean | truckDefaultArgs<ExtArgs>
  }
  export type tire_pressure_eventIncludeCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    device?: boolean | deviceDefaultArgs<ExtArgs>
    truck?: boolean | truckDefaultArgs<ExtArgs>
  }

  export type $tire_pressure_eventPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "tire_pressure_event"
    objects: {
      device: Prisma.$devicePayload<ExtArgs>
      truck: Prisma.$truckPayload<ExtArgs>
    }
    scalars: $Extensions.GetPayloadResult<{
      id: string
      device_id: string
      truck_id: string
      tire_no: number
      pressure_kpa: number | null
      temp_celsius: number | null
      ex_type: string | null
      battery_level: number | null
      changed_at: Date
      created_by: string | null
    }, ExtArgs["result"]["tire_pressure_event"]>
    composites: {}
  }

  type tire_pressure_eventGetPayload<S extends boolean | null | undefined | tire_pressure_eventDefaultArgs> = $Result.GetResult<Prisma.$tire_pressure_eventPayload, S>

  type tire_pressure_eventCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = 
    Omit<tire_pressure_eventFindManyArgs, 'select' | 'include' | 'distinct'> & {
      select?: Tire_pressure_eventCountAggregateInputType | true
    }

  export interface tire_pressure_eventDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['tire_pressure_event'], meta: { name: 'tire_pressure_event' } }
    /**
     * Find zero or one Tire_pressure_event that matches the filter.
     * @param {tire_pressure_eventFindUniqueArgs} args - Arguments to find a Tire_pressure_event
     * @example
     * // Get one Tire_pressure_event
     * const tire_pressure_event = await prisma.tire_pressure_event.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends tire_pressure_eventFindUniqueArgs>(args: SelectSubset<T, tire_pressure_eventFindUniqueArgs<ExtArgs>>): Prisma__tire_pressure_eventClient<$Result.GetResult<Prisma.$tire_pressure_eventPayload<ExtArgs>, T, "findUnique"> | null, null, ExtArgs>

    /**
     * Find one Tire_pressure_event that matches the filter or throw an error with `error.code='P2025'` 
     * if no matches were found.
     * @param {tire_pressure_eventFindUniqueOrThrowArgs} args - Arguments to find a Tire_pressure_event
     * @example
     * // Get one Tire_pressure_event
     * const tire_pressure_event = await prisma.tire_pressure_event.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends tire_pressure_eventFindUniqueOrThrowArgs>(args: SelectSubset<T, tire_pressure_eventFindUniqueOrThrowArgs<ExtArgs>>): Prisma__tire_pressure_eventClient<$Result.GetResult<Prisma.$tire_pressure_eventPayload<ExtArgs>, T, "findUniqueOrThrow">, never, ExtArgs>

    /**
     * Find the first Tire_pressure_event that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {tire_pressure_eventFindFirstArgs} args - Arguments to find a Tire_pressure_event
     * @example
     * // Get one Tire_pressure_event
     * const tire_pressure_event = await prisma.tire_pressure_event.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends tire_pressure_eventFindFirstArgs>(args?: SelectSubset<T, tire_pressure_eventFindFirstArgs<ExtArgs>>): Prisma__tire_pressure_eventClient<$Result.GetResult<Prisma.$tire_pressure_eventPayload<ExtArgs>, T, "findFirst"> | null, null, ExtArgs>

    /**
     * Find the first Tire_pressure_event that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {tire_pressure_eventFindFirstOrThrowArgs} args - Arguments to find a Tire_pressure_event
     * @example
     * // Get one Tire_pressure_event
     * const tire_pressure_event = await prisma.tire_pressure_event.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends tire_pressure_eventFindFirstOrThrowArgs>(args?: SelectSubset<T, tire_pressure_eventFindFirstOrThrowArgs<ExtArgs>>): Prisma__tire_pressure_eventClient<$Result.GetResult<Prisma.$tire_pressure_eventPayload<ExtArgs>, T, "findFirstOrThrow">, never, ExtArgs>

    /**
     * Find zero or more Tire_pressure_events that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {tire_pressure_eventFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all Tire_pressure_events
     * const tire_pressure_events = await prisma.tire_pressure_event.findMany()
     * 
     * // Get first 10 Tire_pressure_events
     * const tire_pressure_events = await prisma.tire_pressure_event.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const tire_pressure_eventWithIdOnly = await prisma.tire_pressure_event.findMany({ select: { id: true } })
     * 
     */
    findMany<T extends tire_pressure_eventFindManyArgs>(args?: SelectSubset<T, tire_pressure_eventFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$tire_pressure_eventPayload<ExtArgs>, T, "findMany">>

    /**
     * Create a Tire_pressure_event.
     * @param {tire_pressure_eventCreateArgs} args - Arguments to create a Tire_pressure_event.
     * @example
     * // Create one Tire_pressure_event
     * const Tire_pressure_event = await prisma.tire_pressure_event.create({
     *   data: {
     *     // ... data to create a Tire_pressure_event
     *   }
     * })
     * 
     */
    create<T extends tire_pressure_eventCreateArgs>(args: SelectSubset<T, tire_pressure_eventCreateArgs<ExtArgs>>): Prisma__tire_pressure_eventClient<$Result.GetResult<Prisma.$tire_pressure_eventPayload<ExtArgs>, T, "create">, never, ExtArgs>

    /**
     * Create many Tire_pressure_events.
     * @param {tire_pressure_eventCreateManyArgs} args - Arguments to create many Tire_pressure_events.
     * @example
     * // Create many Tire_pressure_events
     * const tire_pressure_event = await prisma.tire_pressure_event.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends tire_pressure_eventCreateManyArgs>(args?: SelectSubset<T, tire_pressure_eventCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create many Tire_pressure_events and returns the data saved in the database.
     * @param {tire_pressure_eventCreateManyAndReturnArgs} args - Arguments to create many Tire_pressure_events.
     * @example
     * // Create many Tire_pressure_events
     * const tire_pressure_event = await prisma.tire_pressure_event.createManyAndReturn({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Create many Tire_pressure_events and only return the `id`
     * const tire_pressure_eventWithIdOnly = await prisma.tire_pressure_event.createManyAndReturn({ 
     *   select: { id: true },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    createManyAndReturn<T extends tire_pressure_eventCreateManyAndReturnArgs>(args?: SelectSubset<T, tire_pressure_eventCreateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$tire_pressure_eventPayload<ExtArgs>, T, "createManyAndReturn">>

    /**
     * Delete a Tire_pressure_event.
     * @param {tire_pressure_eventDeleteArgs} args - Arguments to delete one Tire_pressure_event.
     * @example
     * // Delete one Tire_pressure_event
     * const Tire_pressure_event = await prisma.tire_pressure_event.delete({
     *   where: {
     *     // ... filter to delete one Tire_pressure_event
     *   }
     * })
     * 
     */
    delete<T extends tire_pressure_eventDeleteArgs>(args: SelectSubset<T, tire_pressure_eventDeleteArgs<ExtArgs>>): Prisma__tire_pressure_eventClient<$Result.GetResult<Prisma.$tire_pressure_eventPayload<ExtArgs>, T, "delete">, never, ExtArgs>

    /**
     * Update one Tire_pressure_event.
     * @param {tire_pressure_eventUpdateArgs} args - Arguments to update one Tire_pressure_event.
     * @example
     * // Update one Tire_pressure_event
     * const tire_pressure_event = await prisma.tire_pressure_event.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends tire_pressure_eventUpdateArgs>(args: SelectSubset<T, tire_pressure_eventUpdateArgs<ExtArgs>>): Prisma__tire_pressure_eventClient<$Result.GetResult<Prisma.$tire_pressure_eventPayload<ExtArgs>, T, "update">, never, ExtArgs>

    /**
     * Delete zero or more Tire_pressure_events.
     * @param {tire_pressure_eventDeleteManyArgs} args - Arguments to filter Tire_pressure_events to delete.
     * @example
     * // Delete a few Tire_pressure_events
     * const { count } = await prisma.tire_pressure_event.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends tire_pressure_eventDeleteManyArgs>(args?: SelectSubset<T, tire_pressure_eventDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Tire_pressure_events.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {tire_pressure_eventUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many Tire_pressure_events
     * const tire_pressure_event = await prisma.tire_pressure_event.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends tire_pressure_eventUpdateManyArgs>(args: SelectSubset<T, tire_pressure_eventUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create or update one Tire_pressure_event.
     * @param {tire_pressure_eventUpsertArgs} args - Arguments to update or create a Tire_pressure_event.
     * @example
     * // Update or create a Tire_pressure_event
     * const tire_pressure_event = await prisma.tire_pressure_event.upsert({
     *   create: {
     *     // ... data to create a Tire_pressure_event
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the Tire_pressure_event we want to update
     *   }
     * })
     */
    upsert<T extends tire_pressure_eventUpsertArgs>(args: SelectSubset<T, tire_pressure_eventUpsertArgs<ExtArgs>>): Prisma__tire_pressure_eventClient<$Result.GetResult<Prisma.$tire_pressure_eventPayload<ExtArgs>, T, "upsert">, never, ExtArgs>


    /**
     * Count the number of Tire_pressure_events.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {tire_pressure_eventCountArgs} args - Arguments to filter Tire_pressure_events to count.
     * @example
     * // Count the number of Tire_pressure_events
     * const count = await prisma.tire_pressure_event.count({
     *   where: {
     *     // ... the filter for the Tire_pressure_events we want to count
     *   }
     * })
    **/
    count<T extends tire_pressure_eventCountArgs>(
      args?: Subset<T, tire_pressure_eventCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], Tire_pressure_eventCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a Tire_pressure_event.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {Tire_pressure_eventAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends Tire_pressure_eventAggregateArgs>(args: Subset<T, Tire_pressure_eventAggregateArgs>): Prisma.PrismaPromise<GetTire_pressure_eventAggregateType<T>>

    /**
     * Group by Tire_pressure_event.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {tire_pressure_eventGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends tire_pressure_eventGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: tire_pressure_eventGroupByArgs['orderBy'] }
        : { orderBy?: tire_pressure_eventGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, tire_pressure_eventGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetTire_pressure_eventGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the tire_pressure_event model
   */
  readonly fields: tire_pressure_eventFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for tire_pressure_event.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__tire_pressure_eventClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    device<T extends deviceDefaultArgs<ExtArgs> = {}>(args?: Subset<T, deviceDefaultArgs<ExtArgs>>): Prisma__deviceClient<$Result.GetResult<Prisma.$devicePayload<ExtArgs>, T, "findUniqueOrThrow"> | Null, Null, ExtArgs>
    truck<T extends truckDefaultArgs<ExtArgs> = {}>(args?: Subset<T, truckDefaultArgs<ExtArgs>>): Prisma__truckClient<$Result.GetResult<Prisma.$truckPayload<ExtArgs>, T, "findUniqueOrThrow"> | Null, Null, ExtArgs>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the tire_pressure_event model
   */ 
  interface tire_pressure_eventFieldRefs {
    readonly id: FieldRef<"tire_pressure_event", 'String'>
    readonly device_id: FieldRef<"tire_pressure_event", 'String'>
    readonly truck_id: FieldRef<"tire_pressure_event", 'String'>
    readonly tire_no: FieldRef<"tire_pressure_event", 'Int'>
    readonly pressure_kpa: FieldRef<"tire_pressure_event", 'Float'>
    readonly temp_celsius: FieldRef<"tire_pressure_event", 'Float'>
    readonly ex_type: FieldRef<"tire_pressure_event", 'String'>
    readonly battery_level: FieldRef<"tire_pressure_event", 'Int'>
    readonly changed_at: FieldRef<"tire_pressure_event", 'DateTime'>
    readonly created_by: FieldRef<"tire_pressure_event", 'String'>
  }
    

  // Custom InputTypes
  /**
   * tire_pressure_event findUnique
   */
  export type tire_pressure_eventFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the tire_pressure_event
     */
    select?: tire_pressure_eventSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: tire_pressure_eventInclude<ExtArgs> | null
    /**
     * Filter, which tire_pressure_event to fetch.
     */
    where: tire_pressure_eventWhereUniqueInput
  }

  /**
   * tire_pressure_event findUniqueOrThrow
   */
  export type tire_pressure_eventFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the tire_pressure_event
     */
    select?: tire_pressure_eventSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: tire_pressure_eventInclude<ExtArgs> | null
    /**
     * Filter, which tire_pressure_event to fetch.
     */
    where: tire_pressure_eventWhereUniqueInput
  }

  /**
   * tire_pressure_event findFirst
   */
  export type tire_pressure_eventFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the tire_pressure_event
     */
    select?: tire_pressure_eventSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: tire_pressure_eventInclude<ExtArgs> | null
    /**
     * Filter, which tire_pressure_event to fetch.
     */
    where?: tire_pressure_eventWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of tire_pressure_events to fetch.
     */
    orderBy?: tire_pressure_eventOrderByWithRelationInput | tire_pressure_eventOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for tire_pressure_events.
     */
    cursor?: tire_pressure_eventWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` tire_pressure_events from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` tire_pressure_events.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of tire_pressure_events.
     */
    distinct?: Tire_pressure_eventScalarFieldEnum | Tire_pressure_eventScalarFieldEnum[]
  }

  /**
   * tire_pressure_event findFirstOrThrow
   */
  export type tire_pressure_eventFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the tire_pressure_event
     */
    select?: tire_pressure_eventSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: tire_pressure_eventInclude<ExtArgs> | null
    /**
     * Filter, which tire_pressure_event to fetch.
     */
    where?: tire_pressure_eventWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of tire_pressure_events to fetch.
     */
    orderBy?: tire_pressure_eventOrderByWithRelationInput | tire_pressure_eventOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for tire_pressure_events.
     */
    cursor?: tire_pressure_eventWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` tire_pressure_events from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` tire_pressure_events.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of tire_pressure_events.
     */
    distinct?: Tire_pressure_eventScalarFieldEnum | Tire_pressure_eventScalarFieldEnum[]
  }

  /**
   * tire_pressure_event findMany
   */
  export type tire_pressure_eventFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the tire_pressure_event
     */
    select?: tire_pressure_eventSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: tire_pressure_eventInclude<ExtArgs> | null
    /**
     * Filter, which tire_pressure_events to fetch.
     */
    where?: tire_pressure_eventWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of tire_pressure_events to fetch.
     */
    orderBy?: tire_pressure_eventOrderByWithRelationInput | tire_pressure_eventOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing tire_pressure_events.
     */
    cursor?: tire_pressure_eventWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` tire_pressure_events from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` tire_pressure_events.
     */
    skip?: number
    distinct?: Tire_pressure_eventScalarFieldEnum | Tire_pressure_eventScalarFieldEnum[]
  }

  /**
   * tire_pressure_event create
   */
  export type tire_pressure_eventCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the tire_pressure_event
     */
    select?: tire_pressure_eventSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: tire_pressure_eventInclude<ExtArgs> | null
    /**
     * The data needed to create a tire_pressure_event.
     */
    data: XOR<tire_pressure_eventCreateInput, tire_pressure_eventUncheckedCreateInput>
  }

  /**
   * tire_pressure_event createMany
   */
  export type tire_pressure_eventCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many tire_pressure_events.
     */
    data: tire_pressure_eventCreateManyInput | tire_pressure_eventCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * tire_pressure_event createManyAndReturn
   */
  export type tire_pressure_eventCreateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the tire_pressure_event
     */
    select?: tire_pressure_eventSelectCreateManyAndReturn<ExtArgs> | null
    /**
     * The data used to create many tire_pressure_events.
     */
    data: tire_pressure_eventCreateManyInput | tire_pressure_eventCreateManyInput[]
    skipDuplicates?: boolean
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: tire_pressure_eventIncludeCreateManyAndReturn<ExtArgs> | null
  }

  /**
   * tire_pressure_event update
   */
  export type tire_pressure_eventUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the tire_pressure_event
     */
    select?: tire_pressure_eventSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: tire_pressure_eventInclude<ExtArgs> | null
    /**
     * The data needed to update a tire_pressure_event.
     */
    data: XOR<tire_pressure_eventUpdateInput, tire_pressure_eventUncheckedUpdateInput>
    /**
     * Choose, which tire_pressure_event to update.
     */
    where: tire_pressure_eventWhereUniqueInput
  }

  /**
   * tire_pressure_event updateMany
   */
  export type tire_pressure_eventUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update tire_pressure_events.
     */
    data: XOR<tire_pressure_eventUpdateManyMutationInput, tire_pressure_eventUncheckedUpdateManyInput>
    /**
     * Filter which tire_pressure_events to update
     */
    where?: tire_pressure_eventWhereInput
  }

  /**
   * tire_pressure_event upsert
   */
  export type tire_pressure_eventUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the tire_pressure_event
     */
    select?: tire_pressure_eventSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: tire_pressure_eventInclude<ExtArgs> | null
    /**
     * The filter to search for the tire_pressure_event to update in case it exists.
     */
    where: tire_pressure_eventWhereUniqueInput
    /**
     * In case the tire_pressure_event found by the `where` argument doesn't exist, create a new tire_pressure_event with this data.
     */
    create: XOR<tire_pressure_eventCreateInput, tire_pressure_eventUncheckedCreateInput>
    /**
     * In case the tire_pressure_event was found with the provided `where` argument, update it with this data.
     */
    update: XOR<tire_pressure_eventUpdateInput, tire_pressure_eventUncheckedUpdateInput>
  }

  /**
   * tire_pressure_event delete
   */
  export type tire_pressure_eventDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the tire_pressure_event
     */
    select?: tire_pressure_eventSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: tire_pressure_eventInclude<ExtArgs> | null
    /**
     * Filter which tire_pressure_event to delete.
     */
    where: tire_pressure_eventWhereUniqueInput
  }

  /**
   * tire_pressure_event deleteMany
   */
  export type tire_pressure_eventDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which tire_pressure_events to delete
     */
    where?: tire_pressure_eventWhereInput
  }

  /**
   * tire_pressure_event without action
   */
  export type tire_pressure_eventDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the tire_pressure_event
     */
    select?: tire_pressure_eventSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: tire_pressure_eventInclude<ExtArgs> | null
  }


  /**
   * Model trip
   */

  export type AggregateTrip = {
    _count: TripCountAggregateOutputType | null
    _min: TripMinAggregateOutputType | null
    _max: TripMaxAggregateOutputType | null
  }

  export type TripMinAggregateOutputType = {
    id: string | null
    truck_id: string | null
    start_ts: Date | null
    end_ts: Date | null
  }

  export type TripMaxAggregateOutputType = {
    id: string | null
    truck_id: string | null
    start_ts: Date | null
    end_ts: Date | null
  }

  export type TripCountAggregateOutputType = {
    id: number
    truck_id: number
    start_ts: number
    end_ts: number
    _all: number
  }


  export type TripMinAggregateInputType = {
    id?: true
    truck_id?: true
    start_ts?: true
    end_ts?: true
  }

  export type TripMaxAggregateInputType = {
    id?: true
    truck_id?: true
    start_ts?: true
    end_ts?: true
  }

  export type TripCountAggregateInputType = {
    id?: true
    truck_id?: true
    start_ts?: true
    end_ts?: true
    _all?: true
  }

  export type TripAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which trip to aggregate.
     */
    where?: tripWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of trips to fetch.
     */
    orderBy?: tripOrderByWithRelationInput | tripOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: tripWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` trips from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` trips.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned trips
    **/
    _count?: true | TripCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: TripMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: TripMaxAggregateInputType
  }

  export type GetTripAggregateType<T extends TripAggregateArgs> = {
        [P in keyof T & keyof AggregateTrip]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateTrip[P]>
      : GetScalarType<T[P], AggregateTrip[P]>
  }




  export type tripGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: tripWhereInput
    orderBy?: tripOrderByWithAggregationInput | tripOrderByWithAggregationInput[]
    by: TripScalarFieldEnum[] | TripScalarFieldEnum
    having?: tripScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: TripCountAggregateInputType | true
    _min?: TripMinAggregateInputType
    _max?: TripMaxAggregateInputType
  }

  export type TripGroupByOutputType = {
    id: string
    truck_id: string
    start_ts: Date
    end_ts: Date | null
    _count: TripCountAggregateOutputType | null
    _min: TripMinAggregateOutputType | null
    _max: TripMaxAggregateOutputType | null
  }

  type GetTripGroupByPayload<T extends tripGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<TripGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof TripGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], TripGroupByOutputType[P]>
            : GetScalarType<T[P], TripGroupByOutputType[P]>
        }
      >
    >


  export type tripSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    truck_id?: boolean
    start_ts?: boolean
    end_ts?: boolean
    truck?: boolean | truckDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["trip"]>

  export type tripSelectCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    truck_id?: boolean
    start_ts?: boolean
    end_ts?: boolean
    truck?: boolean | truckDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["trip"]>

  export type tripSelectScalar = {
    id?: boolean
    truck_id?: boolean
    start_ts?: boolean
    end_ts?: boolean
  }

  export type tripInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    truck?: boolean | truckDefaultArgs<ExtArgs>
  }
  export type tripIncludeCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    truck?: boolean | truckDefaultArgs<ExtArgs>
  }

  export type $tripPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "trip"
    objects: {
      truck: Prisma.$truckPayload<ExtArgs>
    }
    scalars: $Extensions.GetPayloadResult<{
      id: string
      truck_id: string
      start_ts: Date
      end_ts: Date | null
    }, ExtArgs["result"]["trip"]>
    composites: {}
  }

  type tripGetPayload<S extends boolean | null | undefined | tripDefaultArgs> = $Result.GetResult<Prisma.$tripPayload, S>

  type tripCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = 
    Omit<tripFindManyArgs, 'select' | 'include' | 'distinct'> & {
      select?: TripCountAggregateInputType | true
    }

  export interface tripDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['trip'], meta: { name: 'trip' } }
    /**
     * Find zero or one Trip that matches the filter.
     * @param {tripFindUniqueArgs} args - Arguments to find a Trip
     * @example
     * // Get one Trip
     * const trip = await prisma.trip.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends tripFindUniqueArgs>(args: SelectSubset<T, tripFindUniqueArgs<ExtArgs>>): Prisma__tripClient<$Result.GetResult<Prisma.$tripPayload<ExtArgs>, T, "findUnique"> | null, null, ExtArgs>

    /**
     * Find one Trip that matches the filter or throw an error with `error.code='P2025'` 
     * if no matches were found.
     * @param {tripFindUniqueOrThrowArgs} args - Arguments to find a Trip
     * @example
     * // Get one Trip
     * const trip = await prisma.trip.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends tripFindUniqueOrThrowArgs>(args: SelectSubset<T, tripFindUniqueOrThrowArgs<ExtArgs>>): Prisma__tripClient<$Result.GetResult<Prisma.$tripPayload<ExtArgs>, T, "findUniqueOrThrow">, never, ExtArgs>

    /**
     * Find the first Trip that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {tripFindFirstArgs} args - Arguments to find a Trip
     * @example
     * // Get one Trip
     * const trip = await prisma.trip.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends tripFindFirstArgs>(args?: SelectSubset<T, tripFindFirstArgs<ExtArgs>>): Prisma__tripClient<$Result.GetResult<Prisma.$tripPayload<ExtArgs>, T, "findFirst"> | null, null, ExtArgs>

    /**
     * Find the first Trip that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {tripFindFirstOrThrowArgs} args - Arguments to find a Trip
     * @example
     * // Get one Trip
     * const trip = await prisma.trip.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends tripFindFirstOrThrowArgs>(args?: SelectSubset<T, tripFindFirstOrThrowArgs<ExtArgs>>): Prisma__tripClient<$Result.GetResult<Prisma.$tripPayload<ExtArgs>, T, "findFirstOrThrow">, never, ExtArgs>

    /**
     * Find zero or more Trips that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {tripFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all Trips
     * const trips = await prisma.trip.findMany()
     * 
     * // Get first 10 Trips
     * const trips = await prisma.trip.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const tripWithIdOnly = await prisma.trip.findMany({ select: { id: true } })
     * 
     */
    findMany<T extends tripFindManyArgs>(args?: SelectSubset<T, tripFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$tripPayload<ExtArgs>, T, "findMany">>

    /**
     * Create a Trip.
     * @param {tripCreateArgs} args - Arguments to create a Trip.
     * @example
     * // Create one Trip
     * const Trip = await prisma.trip.create({
     *   data: {
     *     // ... data to create a Trip
     *   }
     * })
     * 
     */
    create<T extends tripCreateArgs>(args: SelectSubset<T, tripCreateArgs<ExtArgs>>): Prisma__tripClient<$Result.GetResult<Prisma.$tripPayload<ExtArgs>, T, "create">, never, ExtArgs>

    /**
     * Create many Trips.
     * @param {tripCreateManyArgs} args - Arguments to create many Trips.
     * @example
     * // Create many Trips
     * const trip = await prisma.trip.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends tripCreateManyArgs>(args?: SelectSubset<T, tripCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create many Trips and returns the data saved in the database.
     * @param {tripCreateManyAndReturnArgs} args - Arguments to create many Trips.
     * @example
     * // Create many Trips
     * const trip = await prisma.trip.createManyAndReturn({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Create many Trips and only return the `id`
     * const tripWithIdOnly = await prisma.trip.createManyAndReturn({ 
     *   select: { id: true },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    createManyAndReturn<T extends tripCreateManyAndReturnArgs>(args?: SelectSubset<T, tripCreateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$tripPayload<ExtArgs>, T, "createManyAndReturn">>

    /**
     * Delete a Trip.
     * @param {tripDeleteArgs} args - Arguments to delete one Trip.
     * @example
     * // Delete one Trip
     * const Trip = await prisma.trip.delete({
     *   where: {
     *     // ... filter to delete one Trip
     *   }
     * })
     * 
     */
    delete<T extends tripDeleteArgs>(args: SelectSubset<T, tripDeleteArgs<ExtArgs>>): Prisma__tripClient<$Result.GetResult<Prisma.$tripPayload<ExtArgs>, T, "delete">, never, ExtArgs>

    /**
     * Update one Trip.
     * @param {tripUpdateArgs} args - Arguments to update one Trip.
     * @example
     * // Update one Trip
     * const trip = await prisma.trip.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends tripUpdateArgs>(args: SelectSubset<T, tripUpdateArgs<ExtArgs>>): Prisma__tripClient<$Result.GetResult<Prisma.$tripPayload<ExtArgs>, T, "update">, never, ExtArgs>

    /**
     * Delete zero or more Trips.
     * @param {tripDeleteManyArgs} args - Arguments to filter Trips to delete.
     * @example
     * // Delete a few Trips
     * const { count } = await prisma.trip.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends tripDeleteManyArgs>(args?: SelectSubset<T, tripDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Trips.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {tripUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many Trips
     * const trip = await prisma.trip.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends tripUpdateManyArgs>(args: SelectSubset<T, tripUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create or update one Trip.
     * @param {tripUpsertArgs} args - Arguments to update or create a Trip.
     * @example
     * // Update or create a Trip
     * const trip = await prisma.trip.upsert({
     *   create: {
     *     // ... data to create a Trip
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the Trip we want to update
     *   }
     * })
     */
    upsert<T extends tripUpsertArgs>(args: SelectSubset<T, tripUpsertArgs<ExtArgs>>): Prisma__tripClient<$Result.GetResult<Prisma.$tripPayload<ExtArgs>, T, "upsert">, never, ExtArgs>


    /**
     * Count the number of Trips.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {tripCountArgs} args - Arguments to filter Trips to count.
     * @example
     * // Count the number of Trips
     * const count = await prisma.trip.count({
     *   where: {
     *     // ... the filter for the Trips we want to count
     *   }
     * })
    **/
    count<T extends tripCountArgs>(
      args?: Subset<T, tripCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], TripCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a Trip.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {TripAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends TripAggregateArgs>(args: Subset<T, TripAggregateArgs>): Prisma.PrismaPromise<GetTripAggregateType<T>>

    /**
     * Group by Trip.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {tripGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends tripGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: tripGroupByArgs['orderBy'] }
        : { orderBy?: tripGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, tripGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetTripGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the trip model
   */
  readonly fields: tripFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for trip.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__tripClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    truck<T extends truckDefaultArgs<ExtArgs> = {}>(args?: Subset<T, truckDefaultArgs<ExtArgs>>): Prisma__truckClient<$Result.GetResult<Prisma.$truckPayload<ExtArgs>, T, "findUniqueOrThrow"> | Null, Null, ExtArgs>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the trip model
   */ 
  interface tripFieldRefs {
    readonly id: FieldRef<"trip", 'String'>
    readonly truck_id: FieldRef<"trip", 'String'>
    readonly start_ts: FieldRef<"trip", 'DateTime'>
    readonly end_ts: FieldRef<"trip", 'DateTime'>
  }
    

  // Custom InputTypes
  /**
   * trip findUnique
   */
  export type tripFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the trip
     */
    select?: tripSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: tripInclude<ExtArgs> | null
    /**
     * Filter, which trip to fetch.
     */
    where: tripWhereUniqueInput
  }

  /**
   * trip findUniqueOrThrow
   */
  export type tripFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the trip
     */
    select?: tripSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: tripInclude<ExtArgs> | null
    /**
     * Filter, which trip to fetch.
     */
    where: tripWhereUniqueInput
  }

  /**
   * trip findFirst
   */
  export type tripFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the trip
     */
    select?: tripSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: tripInclude<ExtArgs> | null
    /**
     * Filter, which trip to fetch.
     */
    where?: tripWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of trips to fetch.
     */
    orderBy?: tripOrderByWithRelationInput | tripOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for trips.
     */
    cursor?: tripWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` trips from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` trips.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of trips.
     */
    distinct?: TripScalarFieldEnum | TripScalarFieldEnum[]
  }

  /**
   * trip findFirstOrThrow
   */
  export type tripFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the trip
     */
    select?: tripSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: tripInclude<ExtArgs> | null
    /**
     * Filter, which trip to fetch.
     */
    where?: tripWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of trips to fetch.
     */
    orderBy?: tripOrderByWithRelationInput | tripOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for trips.
     */
    cursor?: tripWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` trips from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` trips.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of trips.
     */
    distinct?: TripScalarFieldEnum | TripScalarFieldEnum[]
  }

  /**
   * trip findMany
   */
  export type tripFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the trip
     */
    select?: tripSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: tripInclude<ExtArgs> | null
    /**
     * Filter, which trips to fetch.
     */
    where?: tripWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of trips to fetch.
     */
    orderBy?: tripOrderByWithRelationInput | tripOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing trips.
     */
    cursor?: tripWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` trips from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` trips.
     */
    skip?: number
    distinct?: TripScalarFieldEnum | TripScalarFieldEnum[]
  }

  /**
   * trip create
   */
  export type tripCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the trip
     */
    select?: tripSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: tripInclude<ExtArgs> | null
    /**
     * The data needed to create a trip.
     */
    data: XOR<tripCreateInput, tripUncheckedCreateInput>
  }

  /**
   * trip createMany
   */
  export type tripCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many trips.
     */
    data: tripCreateManyInput | tripCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * trip createManyAndReturn
   */
  export type tripCreateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the trip
     */
    select?: tripSelectCreateManyAndReturn<ExtArgs> | null
    /**
     * The data used to create many trips.
     */
    data: tripCreateManyInput | tripCreateManyInput[]
    skipDuplicates?: boolean
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: tripIncludeCreateManyAndReturn<ExtArgs> | null
  }

  /**
   * trip update
   */
  export type tripUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the trip
     */
    select?: tripSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: tripInclude<ExtArgs> | null
    /**
     * The data needed to update a trip.
     */
    data: XOR<tripUpdateInput, tripUncheckedUpdateInput>
    /**
     * Choose, which trip to update.
     */
    where: tripWhereUniqueInput
  }

  /**
   * trip updateMany
   */
  export type tripUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update trips.
     */
    data: XOR<tripUpdateManyMutationInput, tripUncheckedUpdateManyInput>
    /**
     * Filter which trips to update
     */
    where?: tripWhereInput
  }

  /**
   * trip upsert
   */
  export type tripUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the trip
     */
    select?: tripSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: tripInclude<ExtArgs> | null
    /**
     * The filter to search for the trip to update in case it exists.
     */
    where: tripWhereUniqueInput
    /**
     * In case the trip found by the `where` argument doesn't exist, create a new trip with this data.
     */
    create: XOR<tripCreateInput, tripUncheckedCreateInput>
    /**
     * In case the trip was found with the provided `where` argument, update it with this data.
     */
    update: XOR<tripUpdateInput, tripUncheckedUpdateInput>
  }

  /**
   * trip delete
   */
  export type tripDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the trip
     */
    select?: tripSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: tripInclude<ExtArgs> | null
    /**
     * Filter which trip to delete.
     */
    where: tripWhereUniqueInput
  }

  /**
   * trip deleteMany
   */
  export type tripDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which trips to delete
     */
    where?: tripWhereInput
  }

  /**
   * trip without action
   */
  export type tripDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the trip
     */
    select?: tripSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: tripInclude<ExtArgs> | null
  }


  /**
   * Model truck
   */

  export type AggregateTruck = {
    _count: TruckCountAggregateOutputType | null
    _avg: TruckAvgAggregateOutputType | null
    _sum: TruckSumAggregateOutputType | null
    _min: TruckMinAggregateOutputType | null
    _max: TruckMaxAggregateOutputType | null
  }

  export type TruckAvgAggregateOutputType = {
    year: number | null
  }

  export type TruckSumAggregateOutputType = {
    year: number | null
  }

  export type TruckMinAggregateOutputType = {
    id: string | null
    plate_number: string | null
    vin: string | null
    name: string | null
    model: string | null
    year: number | null
    tire_config: string | null
    fleet_group_id: string | null
    created_at: Date | null
    created_by: string | null
    updated_by: string | null
  }

  export type TruckMaxAggregateOutputType = {
    id: string | null
    plate_number: string | null
    vin: string | null
    name: string | null
    model: string | null
    year: number | null
    tire_config: string | null
    fleet_group_id: string | null
    created_at: Date | null
    created_by: string | null
    updated_by: string | null
  }

  export type TruckCountAggregateOutputType = {
    id: number
    plate_number: number
    vin: number
    name: number
    model: number
    year: number
    tire_config: number
    fleet_group_id: number
    created_at: number
    created_by: number
    updated_by: number
    _all: number
  }


  export type TruckAvgAggregateInputType = {
    year?: true
  }

  export type TruckSumAggregateInputType = {
    year?: true
  }

  export type TruckMinAggregateInputType = {
    id?: true
    plate_number?: true
    vin?: true
    name?: true
    model?: true
    year?: true
    tire_config?: true
    fleet_group_id?: true
    created_at?: true
    created_by?: true
    updated_by?: true
  }

  export type TruckMaxAggregateInputType = {
    id?: true
    plate_number?: true
    vin?: true
    name?: true
    model?: true
    year?: true
    tire_config?: true
    fleet_group_id?: true
    created_at?: true
    created_by?: true
    updated_by?: true
  }

  export type TruckCountAggregateInputType = {
    id?: true
    plate_number?: true
    vin?: true
    name?: true
    model?: true
    year?: true
    tire_config?: true
    fleet_group_id?: true
    created_at?: true
    created_by?: true
    updated_by?: true
    _all?: true
  }

  export type TruckAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which truck to aggregate.
     */
    where?: truckWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of trucks to fetch.
     */
    orderBy?: truckOrderByWithRelationInput | truckOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: truckWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` trucks from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` trucks.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned trucks
    **/
    _count?: true | TruckCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: TruckAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: TruckSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: TruckMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: TruckMaxAggregateInputType
  }

  export type GetTruckAggregateType<T extends TruckAggregateArgs> = {
        [P in keyof T & keyof AggregateTruck]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateTruck[P]>
      : GetScalarType<T[P], AggregateTruck[P]>
  }




  export type truckGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: truckWhereInput
    orderBy?: truckOrderByWithAggregationInput | truckOrderByWithAggregationInput[]
    by: TruckScalarFieldEnum[] | TruckScalarFieldEnum
    having?: truckScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: TruckCountAggregateInputType | true
    _avg?: TruckAvgAggregateInputType
    _sum?: TruckSumAggregateInputType
    _min?: TruckMinAggregateInputType
    _max?: TruckMaxAggregateInputType
  }

  export type TruckGroupByOutputType = {
    id: string
    plate_number: string
    vin: string | null
    name: string | null
    model: string | null
    year: number | null
    tire_config: string | null
    fleet_group_id: string | null
    created_at: Date
    created_by: string | null
    updated_by: string | null
    _count: TruckCountAggregateOutputType | null
    _avg: TruckAvgAggregateOutputType | null
    _sum: TruckSumAggregateOutputType | null
    _min: TruckMinAggregateOutputType | null
    _max: TruckMaxAggregateOutputType | null
  }

  type GetTruckGroupByPayload<T extends truckGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<TruckGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof TruckGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], TruckGroupByOutputType[P]>
            : GetScalarType<T[P], TruckGroupByOutputType[P]>
        }
      >
    >


  export type truckSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    plate_number?: boolean
    vin?: boolean
    name?: boolean
    model?: boolean
    year?: boolean
    tire_config?: boolean
    fleet_group_id?: boolean
    created_at?: boolean
    created_by?: boolean
    updated_by?: boolean
    alert_event?: boolean | truck$alert_eventArgs<ExtArgs>
    daily_route?: boolean | truck$daily_routeArgs<ExtArgs>
    device?: boolean | truck$deviceArgs<ExtArgs>
    device_status_event?: boolean | truck$device_status_eventArgs<ExtArgs>
    device_truck_assignment?: boolean | truck$device_truck_assignmentArgs<ExtArgs>
    fuel_level_event?: boolean | truck$fuel_level_eventArgs<ExtArgs>
    gps_position?: boolean | truck$gps_positionArgs<ExtArgs>
    hub_temperature_event?: boolean | truck$hub_temperature_eventArgs<ExtArgs>
    lock_event?: boolean | truck$lock_eventArgs<ExtArgs>
    sensor_data_raw?: boolean | truck$sensor_data_rawArgs<ExtArgs>
    speed_event?: boolean | truck$speed_eventArgs<ExtArgs>
    tire_position_config?: boolean | truck$tire_position_configArgs<ExtArgs>
    tire_pressure_event?: boolean | truck$tire_pressure_eventArgs<ExtArgs>
    trip?: boolean | truck$tripArgs<ExtArgs>
    fleet_group?: boolean | truck$fleet_groupArgs<ExtArgs>
    truck_status_event?: boolean | truck$truck_status_eventArgs<ExtArgs>
    _count?: boolean | TruckCountOutputTypeDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["truck"]>

  export type truckSelectCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    plate_number?: boolean
    vin?: boolean
    name?: boolean
    model?: boolean
    year?: boolean
    tire_config?: boolean
    fleet_group_id?: boolean
    created_at?: boolean
    created_by?: boolean
    updated_by?: boolean
    fleet_group?: boolean | truck$fleet_groupArgs<ExtArgs>
  }, ExtArgs["result"]["truck"]>

  export type truckSelectScalar = {
    id?: boolean
    plate_number?: boolean
    vin?: boolean
    name?: boolean
    model?: boolean
    year?: boolean
    tire_config?: boolean
    fleet_group_id?: boolean
    created_at?: boolean
    created_by?: boolean
    updated_by?: boolean
  }

  export type truckInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    alert_event?: boolean | truck$alert_eventArgs<ExtArgs>
    daily_route?: boolean | truck$daily_routeArgs<ExtArgs>
    device?: boolean | truck$deviceArgs<ExtArgs>
    device_status_event?: boolean | truck$device_status_eventArgs<ExtArgs>
    device_truck_assignment?: boolean | truck$device_truck_assignmentArgs<ExtArgs>
    fuel_level_event?: boolean | truck$fuel_level_eventArgs<ExtArgs>
    gps_position?: boolean | truck$gps_positionArgs<ExtArgs>
    hub_temperature_event?: boolean | truck$hub_temperature_eventArgs<ExtArgs>
    lock_event?: boolean | truck$lock_eventArgs<ExtArgs>
    sensor_data_raw?: boolean | truck$sensor_data_rawArgs<ExtArgs>
    speed_event?: boolean | truck$speed_eventArgs<ExtArgs>
    tire_position_config?: boolean | truck$tire_position_configArgs<ExtArgs>
    tire_pressure_event?: boolean | truck$tire_pressure_eventArgs<ExtArgs>
    trip?: boolean | truck$tripArgs<ExtArgs>
    fleet_group?: boolean | truck$fleet_groupArgs<ExtArgs>
    truck_status_event?: boolean | truck$truck_status_eventArgs<ExtArgs>
    _count?: boolean | TruckCountOutputTypeDefaultArgs<ExtArgs>
  }
  export type truckIncludeCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    fleet_group?: boolean | truck$fleet_groupArgs<ExtArgs>
  }

  export type $truckPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "truck"
    objects: {
      alert_event: Prisma.$alert_eventPayload<ExtArgs>[]
      daily_route: Prisma.$daily_routePayload<ExtArgs>[]
      device: Prisma.$devicePayload<ExtArgs>[]
      device_status_event: Prisma.$device_status_eventPayload<ExtArgs>[]
      device_truck_assignment: Prisma.$device_truck_assignmentPayload<ExtArgs>[]
      fuel_level_event: Prisma.$fuel_level_eventPayload<ExtArgs>[]
      gps_position: Prisma.$gps_positionPayload<ExtArgs>[]
      hub_temperature_event: Prisma.$hub_temperature_eventPayload<ExtArgs>[]
      lock_event: Prisma.$lock_eventPayload<ExtArgs>[]
      sensor_data_raw: Prisma.$sensor_data_rawPayload<ExtArgs>[]
      speed_event: Prisma.$speed_eventPayload<ExtArgs>[]
      tire_position_config: Prisma.$tire_position_configPayload<ExtArgs>[]
      tire_pressure_event: Prisma.$tire_pressure_eventPayload<ExtArgs>[]
      trip: Prisma.$tripPayload<ExtArgs>[]
      fleet_group: Prisma.$fleet_groupPayload<ExtArgs> | null
      truck_status_event: Prisma.$truck_status_eventPayload<ExtArgs>[]
    }
    scalars: $Extensions.GetPayloadResult<{
      id: string
      plate_number: string
      vin: string | null
      name: string | null
      model: string | null
      year: number | null
      tire_config: string | null
      fleet_group_id: string | null
      created_at: Date
      created_by: string | null
      updated_by: string | null
    }, ExtArgs["result"]["truck"]>
    composites: {}
  }

  type truckGetPayload<S extends boolean | null | undefined | truckDefaultArgs> = $Result.GetResult<Prisma.$truckPayload, S>

  type truckCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = 
    Omit<truckFindManyArgs, 'select' | 'include' | 'distinct'> & {
      select?: TruckCountAggregateInputType | true
    }

  export interface truckDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['truck'], meta: { name: 'truck' } }
    /**
     * Find zero or one Truck that matches the filter.
     * @param {truckFindUniqueArgs} args - Arguments to find a Truck
     * @example
     * // Get one Truck
     * const truck = await prisma.truck.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends truckFindUniqueArgs>(args: SelectSubset<T, truckFindUniqueArgs<ExtArgs>>): Prisma__truckClient<$Result.GetResult<Prisma.$truckPayload<ExtArgs>, T, "findUnique"> | null, null, ExtArgs>

    /**
     * Find one Truck that matches the filter or throw an error with `error.code='P2025'` 
     * if no matches were found.
     * @param {truckFindUniqueOrThrowArgs} args - Arguments to find a Truck
     * @example
     * // Get one Truck
     * const truck = await prisma.truck.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends truckFindUniqueOrThrowArgs>(args: SelectSubset<T, truckFindUniqueOrThrowArgs<ExtArgs>>): Prisma__truckClient<$Result.GetResult<Prisma.$truckPayload<ExtArgs>, T, "findUniqueOrThrow">, never, ExtArgs>

    /**
     * Find the first Truck that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {truckFindFirstArgs} args - Arguments to find a Truck
     * @example
     * // Get one Truck
     * const truck = await prisma.truck.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends truckFindFirstArgs>(args?: SelectSubset<T, truckFindFirstArgs<ExtArgs>>): Prisma__truckClient<$Result.GetResult<Prisma.$truckPayload<ExtArgs>, T, "findFirst"> | null, null, ExtArgs>

    /**
     * Find the first Truck that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {truckFindFirstOrThrowArgs} args - Arguments to find a Truck
     * @example
     * // Get one Truck
     * const truck = await prisma.truck.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends truckFindFirstOrThrowArgs>(args?: SelectSubset<T, truckFindFirstOrThrowArgs<ExtArgs>>): Prisma__truckClient<$Result.GetResult<Prisma.$truckPayload<ExtArgs>, T, "findFirstOrThrow">, never, ExtArgs>

    /**
     * Find zero or more Trucks that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {truckFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all Trucks
     * const trucks = await prisma.truck.findMany()
     * 
     * // Get first 10 Trucks
     * const trucks = await prisma.truck.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const truckWithIdOnly = await prisma.truck.findMany({ select: { id: true } })
     * 
     */
    findMany<T extends truckFindManyArgs>(args?: SelectSubset<T, truckFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$truckPayload<ExtArgs>, T, "findMany">>

    /**
     * Create a Truck.
     * @param {truckCreateArgs} args - Arguments to create a Truck.
     * @example
     * // Create one Truck
     * const Truck = await prisma.truck.create({
     *   data: {
     *     // ... data to create a Truck
     *   }
     * })
     * 
     */
    create<T extends truckCreateArgs>(args: SelectSubset<T, truckCreateArgs<ExtArgs>>): Prisma__truckClient<$Result.GetResult<Prisma.$truckPayload<ExtArgs>, T, "create">, never, ExtArgs>

    /**
     * Create many Trucks.
     * @param {truckCreateManyArgs} args - Arguments to create many Trucks.
     * @example
     * // Create many Trucks
     * const truck = await prisma.truck.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends truckCreateManyArgs>(args?: SelectSubset<T, truckCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create many Trucks and returns the data saved in the database.
     * @param {truckCreateManyAndReturnArgs} args - Arguments to create many Trucks.
     * @example
     * // Create many Trucks
     * const truck = await prisma.truck.createManyAndReturn({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Create many Trucks and only return the `id`
     * const truckWithIdOnly = await prisma.truck.createManyAndReturn({ 
     *   select: { id: true },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    createManyAndReturn<T extends truckCreateManyAndReturnArgs>(args?: SelectSubset<T, truckCreateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$truckPayload<ExtArgs>, T, "createManyAndReturn">>

    /**
     * Delete a Truck.
     * @param {truckDeleteArgs} args - Arguments to delete one Truck.
     * @example
     * // Delete one Truck
     * const Truck = await prisma.truck.delete({
     *   where: {
     *     // ... filter to delete one Truck
     *   }
     * })
     * 
     */
    delete<T extends truckDeleteArgs>(args: SelectSubset<T, truckDeleteArgs<ExtArgs>>): Prisma__truckClient<$Result.GetResult<Prisma.$truckPayload<ExtArgs>, T, "delete">, never, ExtArgs>

    /**
     * Update one Truck.
     * @param {truckUpdateArgs} args - Arguments to update one Truck.
     * @example
     * // Update one Truck
     * const truck = await prisma.truck.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends truckUpdateArgs>(args: SelectSubset<T, truckUpdateArgs<ExtArgs>>): Prisma__truckClient<$Result.GetResult<Prisma.$truckPayload<ExtArgs>, T, "update">, never, ExtArgs>

    /**
     * Delete zero or more Trucks.
     * @param {truckDeleteManyArgs} args - Arguments to filter Trucks to delete.
     * @example
     * // Delete a few Trucks
     * const { count } = await prisma.truck.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends truckDeleteManyArgs>(args?: SelectSubset<T, truckDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Trucks.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {truckUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many Trucks
     * const truck = await prisma.truck.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends truckUpdateManyArgs>(args: SelectSubset<T, truckUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create or update one Truck.
     * @param {truckUpsertArgs} args - Arguments to update or create a Truck.
     * @example
     * // Update or create a Truck
     * const truck = await prisma.truck.upsert({
     *   create: {
     *     // ... data to create a Truck
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the Truck we want to update
     *   }
     * })
     */
    upsert<T extends truckUpsertArgs>(args: SelectSubset<T, truckUpsertArgs<ExtArgs>>): Prisma__truckClient<$Result.GetResult<Prisma.$truckPayload<ExtArgs>, T, "upsert">, never, ExtArgs>


    /**
     * Count the number of Trucks.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {truckCountArgs} args - Arguments to filter Trucks to count.
     * @example
     * // Count the number of Trucks
     * const count = await prisma.truck.count({
     *   where: {
     *     // ... the filter for the Trucks we want to count
     *   }
     * })
    **/
    count<T extends truckCountArgs>(
      args?: Subset<T, truckCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], TruckCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a Truck.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {TruckAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends TruckAggregateArgs>(args: Subset<T, TruckAggregateArgs>): Prisma.PrismaPromise<GetTruckAggregateType<T>>

    /**
     * Group by Truck.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {truckGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends truckGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: truckGroupByArgs['orderBy'] }
        : { orderBy?: truckGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, truckGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetTruckGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the truck model
   */
  readonly fields: truckFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for truck.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__truckClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    alert_event<T extends truck$alert_eventArgs<ExtArgs> = {}>(args?: Subset<T, truck$alert_eventArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$alert_eventPayload<ExtArgs>, T, "findMany"> | Null>
    daily_route<T extends truck$daily_routeArgs<ExtArgs> = {}>(args?: Subset<T, truck$daily_routeArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$daily_routePayload<ExtArgs>, T, "findMany"> | Null>
    device<T extends truck$deviceArgs<ExtArgs> = {}>(args?: Subset<T, truck$deviceArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$devicePayload<ExtArgs>, T, "findMany"> | Null>
    device_status_event<T extends truck$device_status_eventArgs<ExtArgs> = {}>(args?: Subset<T, truck$device_status_eventArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$device_status_eventPayload<ExtArgs>, T, "findMany"> | Null>
    device_truck_assignment<T extends truck$device_truck_assignmentArgs<ExtArgs> = {}>(args?: Subset<T, truck$device_truck_assignmentArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$device_truck_assignmentPayload<ExtArgs>, T, "findMany"> | Null>
    fuel_level_event<T extends truck$fuel_level_eventArgs<ExtArgs> = {}>(args?: Subset<T, truck$fuel_level_eventArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$fuel_level_eventPayload<ExtArgs>, T, "findMany"> | Null>
    gps_position<T extends truck$gps_positionArgs<ExtArgs> = {}>(args?: Subset<T, truck$gps_positionArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$gps_positionPayload<ExtArgs>, T, "findMany"> | Null>
    hub_temperature_event<T extends truck$hub_temperature_eventArgs<ExtArgs> = {}>(args?: Subset<T, truck$hub_temperature_eventArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$hub_temperature_eventPayload<ExtArgs>, T, "findMany"> | Null>
    lock_event<T extends truck$lock_eventArgs<ExtArgs> = {}>(args?: Subset<T, truck$lock_eventArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$lock_eventPayload<ExtArgs>, T, "findMany"> | Null>
    sensor_data_raw<T extends truck$sensor_data_rawArgs<ExtArgs> = {}>(args?: Subset<T, truck$sensor_data_rawArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$sensor_data_rawPayload<ExtArgs>, T, "findMany"> | Null>
    speed_event<T extends truck$speed_eventArgs<ExtArgs> = {}>(args?: Subset<T, truck$speed_eventArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$speed_eventPayload<ExtArgs>, T, "findMany"> | Null>
    tire_position_config<T extends truck$tire_position_configArgs<ExtArgs> = {}>(args?: Subset<T, truck$tire_position_configArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$tire_position_configPayload<ExtArgs>, T, "findMany"> | Null>
    tire_pressure_event<T extends truck$tire_pressure_eventArgs<ExtArgs> = {}>(args?: Subset<T, truck$tire_pressure_eventArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$tire_pressure_eventPayload<ExtArgs>, T, "findMany"> | Null>
    trip<T extends truck$tripArgs<ExtArgs> = {}>(args?: Subset<T, truck$tripArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$tripPayload<ExtArgs>, T, "findMany"> | Null>
    fleet_group<T extends truck$fleet_groupArgs<ExtArgs> = {}>(args?: Subset<T, truck$fleet_groupArgs<ExtArgs>>): Prisma__fleet_groupClient<$Result.GetResult<Prisma.$fleet_groupPayload<ExtArgs>, T, "findUniqueOrThrow"> | null, null, ExtArgs>
    truck_status_event<T extends truck$truck_status_eventArgs<ExtArgs> = {}>(args?: Subset<T, truck$truck_status_eventArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$truck_status_eventPayload<ExtArgs>, T, "findMany"> | Null>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the truck model
   */ 
  interface truckFieldRefs {
    readonly id: FieldRef<"truck", 'String'>
    readonly plate_number: FieldRef<"truck", 'String'>
    readonly vin: FieldRef<"truck", 'String'>
    readonly name: FieldRef<"truck", 'String'>
    readonly model: FieldRef<"truck", 'String'>
    readonly year: FieldRef<"truck", 'Int'>
    readonly tire_config: FieldRef<"truck", 'String'>
    readonly fleet_group_id: FieldRef<"truck", 'String'>
    readonly created_at: FieldRef<"truck", 'DateTime'>
    readonly created_by: FieldRef<"truck", 'String'>
    readonly updated_by: FieldRef<"truck", 'String'>
  }
    

  // Custom InputTypes
  /**
   * truck findUnique
   */
  export type truckFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the truck
     */
    select?: truckSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: truckInclude<ExtArgs> | null
    /**
     * Filter, which truck to fetch.
     */
    where: truckWhereUniqueInput
  }

  /**
   * truck findUniqueOrThrow
   */
  export type truckFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the truck
     */
    select?: truckSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: truckInclude<ExtArgs> | null
    /**
     * Filter, which truck to fetch.
     */
    where: truckWhereUniqueInput
  }

  /**
   * truck findFirst
   */
  export type truckFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the truck
     */
    select?: truckSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: truckInclude<ExtArgs> | null
    /**
     * Filter, which truck to fetch.
     */
    where?: truckWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of trucks to fetch.
     */
    orderBy?: truckOrderByWithRelationInput | truckOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for trucks.
     */
    cursor?: truckWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` trucks from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` trucks.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of trucks.
     */
    distinct?: TruckScalarFieldEnum | TruckScalarFieldEnum[]
  }

  /**
   * truck findFirstOrThrow
   */
  export type truckFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the truck
     */
    select?: truckSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: truckInclude<ExtArgs> | null
    /**
     * Filter, which truck to fetch.
     */
    where?: truckWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of trucks to fetch.
     */
    orderBy?: truckOrderByWithRelationInput | truckOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for trucks.
     */
    cursor?: truckWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` trucks from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` trucks.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of trucks.
     */
    distinct?: TruckScalarFieldEnum | TruckScalarFieldEnum[]
  }

  /**
   * truck findMany
   */
  export type truckFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the truck
     */
    select?: truckSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: truckInclude<ExtArgs> | null
    /**
     * Filter, which trucks to fetch.
     */
    where?: truckWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of trucks to fetch.
     */
    orderBy?: truckOrderByWithRelationInput | truckOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing trucks.
     */
    cursor?: truckWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` trucks from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` trucks.
     */
    skip?: number
    distinct?: TruckScalarFieldEnum | TruckScalarFieldEnum[]
  }

  /**
   * truck create
   */
  export type truckCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the truck
     */
    select?: truckSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: truckInclude<ExtArgs> | null
    /**
     * The data needed to create a truck.
     */
    data: XOR<truckCreateInput, truckUncheckedCreateInput>
  }

  /**
   * truck createMany
   */
  export type truckCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many trucks.
     */
    data: truckCreateManyInput | truckCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * truck createManyAndReturn
   */
  export type truckCreateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the truck
     */
    select?: truckSelectCreateManyAndReturn<ExtArgs> | null
    /**
     * The data used to create many trucks.
     */
    data: truckCreateManyInput | truckCreateManyInput[]
    skipDuplicates?: boolean
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: truckIncludeCreateManyAndReturn<ExtArgs> | null
  }

  /**
   * truck update
   */
  export type truckUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the truck
     */
    select?: truckSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: truckInclude<ExtArgs> | null
    /**
     * The data needed to update a truck.
     */
    data: XOR<truckUpdateInput, truckUncheckedUpdateInput>
    /**
     * Choose, which truck to update.
     */
    where: truckWhereUniqueInput
  }

  /**
   * truck updateMany
   */
  export type truckUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update trucks.
     */
    data: XOR<truckUpdateManyMutationInput, truckUncheckedUpdateManyInput>
    /**
     * Filter which trucks to update
     */
    where?: truckWhereInput
  }

  /**
   * truck upsert
   */
  export type truckUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the truck
     */
    select?: truckSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: truckInclude<ExtArgs> | null
    /**
     * The filter to search for the truck to update in case it exists.
     */
    where: truckWhereUniqueInput
    /**
     * In case the truck found by the `where` argument doesn't exist, create a new truck with this data.
     */
    create: XOR<truckCreateInput, truckUncheckedCreateInput>
    /**
     * In case the truck was found with the provided `where` argument, update it with this data.
     */
    update: XOR<truckUpdateInput, truckUncheckedUpdateInput>
  }

  /**
   * truck delete
   */
  export type truckDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the truck
     */
    select?: truckSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: truckInclude<ExtArgs> | null
    /**
     * Filter which truck to delete.
     */
    where: truckWhereUniqueInput
  }

  /**
   * truck deleteMany
   */
  export type truckDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which trucks to delete
     */
    where?: truckWhereInput
  }

  /**
   * truck.alert_event
   */
  export type truck$alert_eventArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the alert_event
     */
    select?: alert_eventSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: alert_eventInclude<ExtArgs> | null
    where?: alert_eventWhereInput
    orderBy?: alert_eventOrderByWithRelationInput | alert_eventOrderByWithRelationInput[]
    cursor?: alert_eventWhereUniqueInput
    take?: number
    skip?: number
    distinct?: Alert_eventScalarFieldEnum | Alert_eventScalarFieldEnum[]
  }

  /**
   * truck.daily_route
   */
  export type truck$daily_routeArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the daily_route
     */
    select?: daily_routeSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: daily_routeInclude<ExtArgs> | null
    where?: daily_routeWhereInput
    orderBy?: daily_routeOrderByWithRelationInput | daily_routeOrderByWithRelationInput[]
    cursor?: daily_routeWhereUniqueInput
    take?: number
    skip?: number
    distinct?: Daily_routeScalarFieldEnum | Daily_routeScalarFieldEnum[]
  }

  /**
   * truck.device
   */
  export type truck$deviceArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the device
     */
    select?: deviceSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: deviceInclude<ExtArgs> | null
    where?: deviceWhereInput
    orderBy?: deviceOrderByWithRelationInput | deviceOrderByWithRelationInput[]
    cursor?: deviceWhereUniqueInput
    take?: number
    skip?: number
    distinct?: DeviceScalarFieldEnum | DeviceScalarFieldEnum[]
  }

  /**
   * truck.device_status_event
   */
  export type truck$device_status_eventArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the device_status_event
     */
    select?: device_status_eventSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: device_status_eventInclude<ExtArgs> | null
    where?: device_status_eventWhereInput
    orderBy?: device_status_eventOrderByWithRelationInput | device_status_eventOrderByWithRelationInput[]
    cursor?: device_status_eventWhereUniqueInput
    take?: number
    skip?: number
    distinct?: Device_status_eventScalarFieldEnum | Device_status_eventScalarFieldEnum[]
  }

  /**
   * truck.device_truck_assignment
   */
  export type truck$device_truck_assignmentArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the device_truck_assignment
     */
    select?: device_truck_assignmentSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: device_truck_assignmentInclude<ExtArgs> | null
    where?: device_truck_assignmentWhereInput
    orderBy?: device_truck_assignmentOrderByWithRelationInput | device_truck_assignmentOrderByWithRelationInput[]
    cursor?: device_truck_assignmentWhereUniqueInput
    take?: number
    skip?: number
    distinct?: Device_truck_assignmentScalarFieldEnum | Device_truck_assignmentScalarFieldEnum[]
  }

  /**
   * truck.fuel_level_event
   */
  export type truck$fuel_level_eventArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the fuel_level_event
     */
    select?: fuel_level_eventSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: fuel_level_eventInclude<ExtArgs> | null
    where?: fuel_level_eventWhereInput
    orderBy?: fuel_level_eventOrderByWithRelationInput | fuel_level_eventOrderByWithRelationInput[]
    cursor?: fuel_level_eventWhereUniqueInput
    take?: number
    skip?: number
    distinct?: Fuel_level_eventScalarFieldEnum | Fuel_level_eventScalarFieldEnum[]
  }

  /**
   * truck.gps_position
   */
  export type truck$gps_positionArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the gps_position
     */
    select?: gps_positionSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: gps_positionInclude<ExtArgs> | null
    where?: gps_positionWhereInput
    orderBy?: gps_positionOrderByWithRelationInput | gps_positionOrderByWithRelationInput[]
    cursor?: gps_positionWhereUniqueInput
    take?: number
    skip?: number
    distinct?: Gps_positionScalarFieldEnum | Gps_positionScalarFieldEnum[]
  }

  /**
   * truck.hub_temperature_event
   */
  export type truck$hub_temperature_eventArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the hub_temperature_event
     */
    select?: hub_temperature_eventSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: hub_temperature_eventInclude<ExtArgs> | null
    where?: hub_temperature_eventWhereInput
    orderBy?: hub_temperature_eventOrderByWithRelationInput | hub_temperature_eventOrderByWithRelationInput[]
    cursor?: hub_temperature_eventWhereUniqueInput
    take?: number
    skip?: number
    distinct?: Hub_temperature_eventScalarFieldEnum | Hub_temperature_eventScalarFieldEnum[]
  }

  /**
   * truck.lock_event
   */
  export type truck$lock_eventArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the lock_event
     */
    select?: lock_eventSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: lock_eventInclude<ExtArgs> | null
    where?: lock_eventWhereInput
    orderBy?: lock_eventOrderByWithRelationInput | lock_eventOrderByWithRelationInput[]
    cursor?: lock_eventWhereUniqueInput
    take?: number
    skip?: number
    distinct?: Lock_eventScalarFieldEnum | Lock_eventScalarFieldEnum[]
  }

  /**
   * truck.sensor_data_raw
   */
  export type truck$sensor_data_rawArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the sensor_data_raw
     */
    select?: sensor_data_rawSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: sensor_data_rawInclude<ExtArgs> | null
    where?: sensor_data_rawWhereInput
    orderBy?: sensor_data_rawOrderByWithRelationInput | sensor_data_rawOrderByWithRelationInput[]
    cursor?: sensor_data_rawWhereUniqueInput
    take?: number
    skip?: number
    distinct?: Sensor_data_rawScalarFieldEnum | Sensor_data_rawScalarFieldEnum[]
  }

  /**
   * truck.speed_event
   */
  export type truck$speed_eventArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the speed_event
     */
    select?: speed_eventSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: speed_eventInclude<ExtArgs> | null
    where?: speed_eventWhereInput
    orderBy?: speed_eventOrderByWithRelationInput | speed_eventOrderByWithRelationInput[]
    cursor?: speed_eventWhereUniqueInput
    take?: number
    skip?: number
    distinct?: Speed_eventScalarFieldEnum | Speed_eventScalarFieldEnum[]
  }

  /**
   * truck.tire_position_config
   */
  export type truck$tire_position_configArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the tire_position_config
     */
    select?: tire_position_configSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: tire_position_configInclude<ExtArgs> | null
    where?: tire_position_configWhereInput
    orderBy?: tire_position_configOrderByWithRelationInput | tire_position_configOrderByWithRelationInput[]
    cursor?: tire_position_configWhereUniqueInput
    take?: number
    skip?: number
    distinct?: Tire_position_configScalarFieldEnum | Tire_position_configScalarFieldEnum[]
  }

  /**
   * truck.tire_pressure_event
   */
  export type truck$tire_pressure_eventArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the tire_pressure_event
     */
    select?: tire_pressure_eventSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: tire_pressure_eventInclude<ExtArgs> | null
    where?: tire_pressure_eventWhereInput
    orderBy?: tire_pressure_eventOrderByWithRelationInput | tire_pressure_eventOrderByWithRelationInput[]
    cursor?: tire_pressure_eventWhereUniqueInput
    take?: number
    skip?: number
    distinct?: Tire_pressure_eventScalarFieldEnum | Tire_pressure_eventScalarFieldEnum[]
  }

  /**
   * truck.trip
   */
  export type truck$tripArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the trip
     */
    select?: tripSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: tripInclude<ExtArgs> | null
    where?: tripWhereInput
    orderBy?: tripOrderByWithRelationInput | tripOrderByWithRelationInput[]
    cursor?: tripWhereUniqueInput
    take?: number
    skip?: number
    distinct?: TripScalarFieldEnum | TripScalarFieldEnum[]
  }

  /**
   * truck.fleet_group
   */
  export type truck$fleet_groupArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the fleet_group
     */
    select?: fleet_groupSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: fleet_groupInclude<ExtArgs> | null
    where?: fleet_groupWhereInput
  }

  /**
   * truck.truck_status_event
   */
  export type truck$truck_status_eventArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the truck_status_event
     */
    select?: truck_status_eventSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: truck_status_eventInclude<ExtArgs> | null
    where?: truck_status_eventWhereInput
    orderBy?: truck_status_eventOrderByWithRelationInput | truck_status_eventOrderByWithRelationInput[]
    cursor?: truck_status_eventWhereUniqueInput
    take?: number
    skip?: number
    distinct?: Truck_status_eventScalarFieldEnum | Truck_status_eventScalarFieldEnum[]
  }

  /**
   * truck without action
   */
  export type truckDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the truck
     */
    select?: truckSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: truckInclude<ExtArgs> | null
  }


  /**
   * Model truck_status_event
   */

  export type AggregateTruck_status_event = {
    _count: Truck_status_eventCountAggregateOutputType | null
    _min: Truck_status_eventMinAggregateOutputType | null
    _max: Truck_status_eventMaxAggregateOutputType | null
  }

  export type Truck_status_eventMinAggregateOutputType = {
    id: string | null
    truck_id: string | null
    status: $Enums.truck_status | null
    note: string | null
    changed_at: Date | null
    created_by: string | null
  }

  export type Truck_status_eventMaxAggregateOutputType = {
    id: string | null
    truck_id: string | null
    status: $Enums.truck_status | null
    note: string | null
    changed_at: Date | null
    created_by: string | null
  }

  export type Truck_status_eventCountAggregateOutputType = {
    id: number
    truck_id: number
    status: number
    note: number
    changed_at: number
    created_by: number
    _all: number
  }


  export type Truck_status_eventMinAggregateInputType = {
    id?: true
    truck_id?: true
    status?: true
    note?: true
    changed_at?: true
    created_by?: true
  }

  export type Truck_status_eventMaxAggregateInputType = {
    id?: true
    truck_id?: true
    status?: true
    note?: true
    changed_at?: true
    created_by?: true
  }

  export type Truck_status_eventCountAggregateInputType = {
    id?: true
    truck_id?: true
    status?: true
    note?: true
    changed_at?: true
    created_by?: true
    _all?: true
  }

  export type Truck_status_eventAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which truck_status_event to aggregate.
     */
    where?: truck_status_eventWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of truck_status_events to fetch.
     */
    orderBy?: truck_status_eventOrderByWithRelationInput | truck_status_eventOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: truck_status_eventWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` truck_status_events from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` truck_status_events.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned truck_status_events
    **/
    _count?: true | Truck_status_eventCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: Truck_status_eventMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: Truck_status_eventMaxAggregateInputType
  }

  export type GetTruck_status_eventAggregateType<T extends Truck_status_eventAggregateArgs> = {
        [P in keyof T & keyof AggregateTruck_status_event]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateTruck_status_event[P]>
      : GetScalarType<T[P], AggregateTruck_status_event[P]>
  }




  export type truck_status_eventGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: truck_status_eventWhereInput
    orderBy?: truck_status_eventOrderByWithAggregationInput | truck_status_eventOrderByWithAggregationInput[]
    by: Truck_status_eventScalarFieldEnum[] | Truck_status_eventScalarFieldEnum
    having?: truck_status_eventScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: Truck_status_eventCountAggregateInputType | true
    _min?: Truck_status_eventMinAggregateInputType
    _max?: Truck_status_eventMaxAggregateInputType
  }

  export type Truck_status_eventGroupByOutputType = {
    id: string
    truck_id: string
    status: $Enums.truck_status
    note: string | null
    changed_at: Date
    created_by: string | null
    _count: Truck_status_eventCountAggregateOutputType | null
    _min: Truck_status_eventMinAggregateOutputType | null
    _max: Truck_status_eventMaxAggregateOutputType | null
  }

  type GetTruck_status_eventGroupByPayload<T extends truck_status_eventGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<Truck_status_eventGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof Truck_status_eventGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], Truck_status_eventGroupByOutputType[P]>
            : GetScalarType<T[P], Truck_status_eventGroupByOutputType[P]>
        }
      >
    >


  export type truck_status_eventSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    truck_id?: boolean
    status?: boolean
    note?: boolean
    changed_at?: boolean
    created_by?: boolean
    truck?: boolean | truckDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["truck_status_event"]>

  export type truck_status_eventSelectCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    truck_id?: boolean
    status?: boolean
    note?: boolean
    changed_at?: boolean
    created_by?: boolean
    truck?: boolean | truckDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["truck_status_event"]>

  export type truck_status_eventSelectScalar = {
    id?: boolean
    truck_id?: boolean
    status?: boolean
    note?: boolean
    changed_at?: boolean
    created_by?: boolean
  }

  export type truck_status_eventInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    truck?: boolean | truckDefaultArgs<ExtArgs>
  }
  export type truck_status_eventIncludeCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    truck?: boolean | truckDefaultArgs<ExtArgs>
  }

  export type $truck_status_eventPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "truck_status_event"
    objects: {
      truck: Prisma.$truckPayload<ExtArgs>
    }
    scalars: $Extensions.GetPayloadResult<{
      id: string
      truck_id: string
      status: $Enums.truck_status
      note: string | null
      changed_at: Date
      created_by: string | null
    }, ExtArgs["result"]["truck_status_event"]>
    composites: {}
  }

  type truck_status_eventGetPayload<S extends boolean | null | undefined | truck_status_eventDefaultArgs> = $Result.GetResult<Prisma.$truck_status_eventPayload, S>

  type truck_status_eventCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = 
    Omit<truck_status_eventFindManyArgs, 'select' | 'include' | 'distinct'> & {
      select?: Truck_status_eventCountAggregateInputType | true
    }

  export interface truck_status_eventDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['truck_status_event'], meta: { name: 'truck_status_event' } }
    /**
     * Find zero or one Truck_status_event that matches the filter.
     * @param {truck_status_eventFindUniqueArgs} args - Arguments to find a Truck_status_event
     * @example
     * // Get one Truck_status_event
     * const truck_status_event = await prisma.truck_status_event.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends truck_status_eventFindUniqueArgs>(args: SelectSubset<T, truck_status_eventFindUniqueArgs<ExtArgs>>): Prisma__truck_status_eventClient<$Result.GetResult<Prisma.$truck_status_eventPayload<ExtArgs>, T, "findUnique"> | null, null, ExtArgs>

    /**
     * Find one Truck_status_event that matches the filter or throw an error with `error.code='P2025'` 
     * if no matches were found.
     * @param {truck_status_eventFindUniqueOrThrowArgs} args - Arguments to find a Truck_status_event
     * @example
     * // Get one Truck_status_event
     * const truck_status_event = await prisma.truck_status_event.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends truck_status_eventFindUniqueOrThrowArgs>(args: SelectSubset<T, truck_status_eventFindUniqueOrThrowArgs<ExtArgs>>): Prisma__truck_status_eventClient<$Result.GetResult<Prisma.$truck_status_eventPayload<ExtArgs>, T, "findUniqueOrThrow">, never, ExtArgs>

    /**
     * Find the first Truck_status_event that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {truck_status_eventFindFirstArgs} args - Arguments to find a Truck_status_event
     * @example
     * // Get one Truck_status_event
     * const truck_status_event = await prisma.truck_status_event.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends truck_status_eventFindFirstArgs>(args?: SelectSubset<T, truck_status_eventFindFirstArgs<ExtArgs>>): Prisma__truck_status_eventClient<$Result.GetResult<Prisma.$truck_status_eventPayload<ExtArgs>, T, "findFirst"> | null, null, ExtArgs>

    /**
     * Find the first Truck_status_event that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {truck_status_eventFindFirstOrThrowArgs} args - Arguments to find a Truck_status_event
     * @example
     * // Get one Truck_status_event
     * const truck_status_event = await prisma.truck_status_event.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends truck_status_eventFindFirstOrThrowArgs>(args?: SelectSubset<T, truck_status_eventFindFirstOrThrowArgs<ExtArgs>>): Prisma__truck_status_eventClient<$Result.GetResult<Prisma.$truck_status_eventPayload<ExtArgs>, T, "findFirstOrThrow">, never, ExtArgs>

    /**
     * Find zero or more Truck_status_events that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {truck_status_eventFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all Truck_status_events
     * const truck_status_events = await prisma.truck_status_event.findMany()
     * 
     * // Get first 10 Truck_status_events
     * const truck_status_events = await prisma.truck_status_event.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const truck_status_eventWithIdOnly = await prisma.truck_status_event.findMany({ select: { id: true } })
     * 
     */
    findMany<T extends truck_status_eventFindManyArgs>(args?: SelectSubset<T, truck_status_eventFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$truck_status_eventPayload<ExtArgs>, T, "findMany">>

    /**
     * Create a Truck_status_event.
     * @param {truck_status_eventCreateArgs} args - Arguments to create a Truck_status_event.
     * @example
     * // Create one Truck_status_event
     * const Truck_status_event = await prisma.truck_status_event.create({
     *   data: {
     *     // ... data to create a Truck_status_event
     *   }
     * })
     * 
     */
    create<T extends truck_status_eventCreateArgs>(args: SelectSubset<T, truck_status_eventCreateArgs<ExtArgs>>): Prisma__truck_status_eventClient<$Result.GetResult<Prisma.$truck_status_eventPayload<ExtArgs>, T, "create">, never, ExtArgs>

    /**
     * Create many Truck_status_events.
     * @param {truck_status_eventCreateManyArgs} args - Arguments to create many Truck_status_events.
     * @example
     * // Create many Truck_status_events
     * const truck_status_event = await prisma.truck_status_event.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends truck_status_eventCreateManyArgs>(args?: SelectSubset<T, truck_status_eventCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create many Truck_status_events and returns the data saved in the database.
     * @param {truck_status_eventCreateManyAndReturnArgs} args - Arguments to create many Truck_status_events.
     * @example
     * // Create many Truck_status_events
     * const truck_status_event = await prisma.truck_status_event.createManyAndReturn({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Create many Truck_status_events and only return the `id`
     * const truck_status_eventWithIdOnly = await prisma.truck_status_event.createManyAndReturn({ 
     *   select: { id: true },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    createManyAndReturn<T extends truck_status_eventCreateManyAndReturnArgs>(args?: SelectSubset<T, truck_status_eventCreateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$truck_status_eventPayload<ExtArgs>, T, "createManyAndReturn">>

    /**
     * Delete a Truck_status_event.
     * @param {truck_status_eventDeleteArgs} args - Arguments to delete one Truck_status_event.
     * @example
     * // Delete one Truck_status_event
     * const Truck_status_event = await prisma.truck_status_event.delete({
     *   where: {
     *     // ... filter to delete one Truck_status_event
     *   }
     * })
     * 
     */
    delete<T extends truck_status_eventDeleteArgs>(args: SelectSubset<T, truck_status_eventDeleteArgs<ExtArgs>>): Prisma__truck_status_eventClient<$Result.GetResult<Prisma.$truck_status_eventPayload<ExtArgs>, T, "delete">, never, ExtArgs>

    /**
     * Update one Truck_status_event.
     * @param {truck_status_eventUpdateArgs} args - Arguments to update one Truck_status_event.
     * @example
     * // Update one Truck_status_event
     * const truck_status_event = await prisma.truck_status_event.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends truck_status_eventUpdateArgs>(args: SelectSubset<T, truck_status_eventUpdateArgs<ExtArgs>>): Prisma__truck_status_eventClient<$Result.GetResult<Prisma.$truck_status_eventPayload<ExtArgs>, T, "update">, never, ExtArgs>

    /**
     * Delete zero or more Truck_status_events.
     * @param {truck_status_eventDeleteManyArgs} args - Arguments to filter Truck_status_events to delete.
     * @example
     * // Delete a few Truck_status_events
     * const { count } = await prisma.truck_status_event.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends truck_status_eventDeleteManyArgs>(args?: SelectSubset<T, truck_status_eventDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Truck_status_events.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {truck_status_eventUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many Truck_status_events
     * const truck_status_event = await prisma.truck_status_event.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends truck_status_eventUpdateManyArgs>(args: SelectSubset<T, truck_status_eventUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create or update one Truck_status_event.
     * @param {truck_status_eventUpsertArgs} args - Arguments to update or create a Truck_status_event.
     * @example
     * // Update or create a Truck_status_event
     * const truck_status_event = await prisma.truck_status_event.upsert({
     *   create: {
     *     // ... data to create a Truck_status_event
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the Truck_status_event we want to update
     *   }
     * })
     */
    upsert<T extends truck_status_eventUpsertArgs>(args: SelectSubset<T, truck_status_eventUpsertArgs<ExtArgs>>): Prisma__truck_status_eventClient<$Result.GetResult<Prisma.$truck_status_eventPayload<ExtArgs>, T, "upsert">, never, ExtArgs>


    /**
     * Count the number of Truck_status_events.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {truck_status_eventCountArgs} args - Arguments to filter Truck_status_events to count.
     * @example
     * // Count the number of Truck_status_events
     * const count = await prisma.truck_status_event.count({
     *   where: {
     *     // ... the filter for the Truck_status_events we want to count
     *   }
     * })
    **/
    count<T extends truck_status_eventCountArgs>(
      args?: Subset<T, truck_status_eventCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], Truck_status_eventCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a Truck_status_event.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {Truck_status_eventAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends Truck_status_eventAggregateArgs>(args: Subset<T, Truck_status_eventAggregateArgs>): Prisma.PrismaPromise<GetTruck_status_eventAggregateType<T>>

    /**
     * Group by Truck_status_event.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {truck_status_eventGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends truck_status_eventGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: truck_status_eventGroupByArgs['orderBy'] }
        : { orderBy?: truck_status_eventGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, truck_status_eventGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetTruck_status_eventGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the truck_status_event model
   */
  readonly fields: truck_status_eventFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for truck_status_event.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__truck_status_eventClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    truck<T extends truckDefaultArgs<ExtArgs> = {}>(args?: Subset<T, truckDefaultArgs<ExtArgs>>): Prisma__truckClient<$Result.GetResult<Prisma.$truckPayload<ExtArgs>, T, "findUniqueOrThrow"> | Null, Null, ExtArgs>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the truck_status_event model
   */ 
  interface truck_status_eventFieldRefs {
    readonly id: FieldRef<"truck_status_event", 'String'>
    readonly truck_id: FieldRef<"truck_status_event", 'String'>
    readonly status: FieldRef<"truck_status_event", 'truck_status'>
    readonly note: FieldRef<"truck_status_event", 'String'>
    readonly changed_at: FieldRef<"truck_status_event", 'DateTime'>
    readonly created_by: FieldRef<"truck_status_event", 'String'>
  }
    

  // Custom InputTypes
  /**
   * truck_status_event findUnique
   */
  export type truck_status_eventFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the truck_status_event
     */
    select?: truck_status_eventSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: truck_status_eventInclude<ExtArgs> | null
    /**
     * Filter, which truck_status_event to fetch.
     */
    where: truck_status_eventWhereUniqueInput
  }

  /**
   * truck_status_event findUniqueOrThrow
   */
  export type truck_status_eventFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the truck_status_event
     */
    select?: truck_status_eventSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: truck_status_eventInclude<ExtArgs> | null
    /**
     * Filter, which truck_status_event to fetch.
     */
    where: truck_status_eventWhereUniqueInput
  }

  /**
   * truck_status_event findFirst
   */
  export type truck_status_eventFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the truck_status_event
     */
    select?: truck_status_eventSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: truck_status_eventInclude<ExtArgs> | null
    /**
     * Filter, which truck_status_event to fetch.
     */
    where?: truck_status_eventWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of truck_status_events to fetch.
     */
    orderBy?: truck_status_eventOrderByWithRelationInput | truck_status_eventOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for truck_status_events.
     */
    cursor?: truck_status_eventWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` truck_status_events from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` truck_status_events.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of truck_status_events.
     */
    distinct?: Truck_status_eventScalarFieldEnum | Truck_status_eventScalarFieldEnum[]
  }

  /**
   * truck_status_event findFirstOrThrow
   */
  export type truck_status_eventFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the truck_status_event
     */
    select?: truck_status_eventSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: truck_status_eventInclude<ExtArgs> | null
    /**
     * Filter, which truck_status_event to fetch.
     */
    where?: truck_status_eventWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of truck_status_events to fetch.
     */
    orderBy?: truck_status_eventOrderByWithRelationInput | truck_status_eventOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for truck_status_events.
     */
    cursor?: truck_status_eventWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` truck_status_events from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` truck_status_events.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of truck_status_events.
     */
    distinct?: Truck_status_eventScalarFieldEnum | Truck_status_eventScalarFieldEnum[]
  }

  /**
   * truck_status_event findMany
   */
  export type truck_status_eventFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the truck_status_event
     */
    select?: truck_status_eventSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: truck_status_eventInclude<ExtArgs> | null
    /**
     * Filter, which truck_status_events to fetch.
     */
    where?: truck_status_eventWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of truck_status_events to fetch.
     */
    orderBy?: truck_status_eventOrderByWithRelationInput | truck_status_eventOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing truck_status_events.
     */
    cursor?: truck_status_eventWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` truck_status_events from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` truck_status_events.
     */
    skip?: number
    distinct?: Truck_status_eventScalarFieldEnum | Truck_status_eventScalarFieldEnum[]
  }

  /**
   * truck_status_event create
   */
  export type truck_status_eventCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the truck_status_event
     */
    select?: truck_status_eventSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: truck_status_eventInclude<ExtArgs> | null
    /**
     * The data needed to create a truck_status_event.
     */
    data: XOR<truck_status_eventCreateInput, truck_status_eventUncheckedCreateInput>
  }

  /**
   * truck_status_event createMany
   */
  export type truck_status_eventCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many truck_status_events.
     */
    data: truck_status_eventCreateManyInput | truck_status_eventCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * truck_status_event createManyAndReturn
   */
  export type truck_status_eventCreateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the truck_status_event
     */
    select?: truck_status_eventSelectCreateManyAndReturn<ExtArgs> | null
    /**
     * The data used to create many truck_status_events.
     */
    data: truck_status_eventCreateManyInput | truck_status_eventCreateManyInput[]
    skipDuplicates?: boolean
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: truck_status_eventIncludeCreateManyAndReturn<ExtArgs> | null
  }

  /**
   * truck_status_event update
   */
  export type truck_status_eventUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the truck_status_event
     */
    select?: truck_status_eventSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: truck_status_eventInclude<ExtArgs> | null
    /**
     * The data needed to update a truck_status_event.
     */
    data: XOR<truck_status_eventUpdateInput, truck_status_eventUncheckedUpdateInput>
    /**
     * Choose, which truck_status_event to update.
     */
    where: truck_status_eventWhereUniqueInput
  }

  /**
   * truck_status_event updateMany
   */
  export type truck_status_eventUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update truck_status_events.
     */
    data: XOR<truck_status_eventUpdateManyMutationInput, truck_status_eventUncheckedUpdateManyInput>
    /**
     * Filter which truck_status_events to update
     */
    where?: truck_status_eventWhereInput
  }

  /**
   * truck_status_event upsert
   */
  export type truck_status_eventUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the truck_status_event
     */
    select?: truck_status_eventSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: truck_status_eventInclude<ExtArgs> | null
    /**
     * The filter to search for the truck_status_event to update in case it exists.
     */
    where: truck_status_eventWhereUniqueInput
    /**
     * In case the truck_status_event found by the `where` argument doesn't exist, create a new truck_status_event with this data.
     */
    create: XOR<truck_status_eventCreateInput, truck_status_eventUncheckedCreateInput>
    /**
     * In case the truck_status_event was found with the provided `where` argument, update it with this data.
     */
    update: XOR<truck_status_eventUpdateInput, truck_status_eventUncheckedUpdateInput>
  }

  /**
   * truck_status_event delete
   */
  export type truck_status_eventDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the truck_status_event
     */
    select?: truck_status_eventSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: truck_status_eventInclude<ExtArgs> | null
    /**
     * Filter which truck_status_event to delete.
     */
    where: truck_status_eventWhereUniqueInput
  }

  /**
   * truck_status_event deleteMany
   */
  export type truck_status_eventDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which truck_status_events to delete
     */
    where?: truck_status_eventWhereInput
  }

  /**
   * truck_status_event without action
   */
  export type truck_status_eventDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the truck_status_event
     */
    select?: truck_status_eventSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: truck_status_eventInclude<ExtArgs> | null
  }


  /**
   * Model users
   */

  export type AggregateUsers = {
    _count: UsersCountAggregateOutputType | null
    _min: UsersMinAggregateOutputType | null
    _max: UsersMaxAggregateOutputType | null
  }

  export type UsersMinAggregateOutputType = {
    id: string | null
    username: string | null
    email: string | null
    password_hash: string | null
    role: string | null
    is_active: boolean | null
    created_at: Date | null
    updated_at: Date | null
  }

  export type UsersMaxAggregateOutputType = {
    id: string | null
    username: string | null
    email: string | null
    password_hash: string | null
    role: string | null
    is_active: boolean | null
    created_at: Date | null
    updated_at: Date | null
  }

  export type UsersCountAggregateOutputType = {
    id: number
    username: number
    email: number
    password_hash: number
    role: number
    is_active: number
    created_at: number
    updated_at: number
    _all: number
  }


  export type UsersMinAggregateInputType = {
    id?: true
    username?: true
    email?: true
    password_hash?: true
    role?: true
    is_active?: true
    created_at?: true
    updated_at?: true
  }

  export type UsersMaxAggregateInputType = {
    id?: true
    username?: true
    email?: true
    password_hash?: true
    role?: true
    is_active?: true
    created_at?: true
    updated_at?: true
  }

  export type UsersCountAggregateInputType = {
    id?: true
    username?: true
    email?: true
    password_hash?: true
    role?: true
    is_active?: true
    created_at?: true
    updated_at?: true
    _all?: true
  }

  export type UsersAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which users to aggregate.
     */
    where?: usersWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of users to fetch.
     */
    orderBy?: usersOrderByWithRelationInput | usersOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: usersWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` users from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` users.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned users
    **/
    _count?: true | UsersCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: UsersMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: UsersMaxAggregateInputType
  }

  export type GetUsersAggregateType<T extends UsersAggregateArgs> = {
        [P in keyof T & keyof AggregateUsers]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateUsers[P]>
      : GetScalarType<T[P], AggregateUsers[P]>
  }




  export type usersGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: usersWhereInput
    orderBy?: usersOrderByWithAggregationInput | usersOrderByWithAggregationInput[]
    by: UsersScalarFieldEnum[] | UsersScalarFieldEnum
    having?: usersScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: UsersCountAggregateInputType | true
    _min?: UsersMinAggregateInputType
    _max?: UsersMaxAggregateInputType
  }

  export type UsersGroupByOutputType = {
    id: string
    username: string
    email: string | null
    password_hash: string
    role: string | null
    is_active: boolean | null
    created_at: Date | null
    updated_at: Date | null
    _count: UsersCountAggregateOutputType | null
    _min: UsersMinAggregateOutputType | null
    _max: UsersMaxAggregateOutputType | null
  }

  type GetUsersGroupByPayload<T extends usersGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<UsersGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof UsersGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], UsersGroupByOutputType[P]>
            : GetScalarType<T[P], UsersGroupByOutputType[P]>
        }
      >
    >


  export type usersSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    username?: boolean
    email?: boolean
    password_hash?: boolean
    role?: boolean
    is_active?: boolean
    created_at?: boolean
    updated_at?: boolean
    device_truck_assignment_device_truck_assignment_assigned_byTousers?: boolean | users$device_truck_assignment_device_truck_assignment_assigned_byTousersArgs<ExtArgs>
    device_truck_assignment_device_truck_assignment_removed_byTousers?: boolean | users$device_truck_assignment_device_truck_assignment_removed_byTousersArgs<ExtArgs>
    _count?: boolean | UsersCountOutputTypeDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["users"]>

  export type usersSelectCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    username?: boolean
    email?: boolean
    password_hash?: boolean
    role?: boolean
    is_active?: boolean
    created_at?: boolean
    updated_at?: boolean
  }, ExtArgs["result"]["users"]>

  export type usersSelectScalar = {
    id?: boolean
    username?: boolean
    email?: boolean
    password_hash?: boolean
    role?: boolean
    is_active?: boolean
    created_at?: boolean
    updated_at?: boolean
  }

  export type usersInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    device_truck_assignment_device_truck_assignment_assigned_byTousers?: boolean | users$device_truck_assignment_device_truck_assignment_assigned_byTousersArgs<ExtArgs>
    device_truck_assignment_device_truck_assignment_removed_byTousers?: boolean | users$device_truck_assignment_device_truck_assignment_removed_byTousersArgs<ExtArgs>
    _count?: boolean | UsersCountOutputTypeDefaultArgs<ExtArgs>
  }
  export type usersIncludeCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {}

  export type $usersPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "users"
    objects: {
      device_truck_assignment_device_truck_assignment_assigned_byTousers: Prisma.$device_truck_assignmentPayload<ExtArgs>[]
      device_truck_assignment_device_truck_assignment_removed_byTousers: Prisma.$device_truck_assignmentPayload<ExtArgs>[]
    }
    scalars: $Extensions.GetPayloadResult<{
      id: string
      username: string
      email: string | null
      password_hash: string
      role: string | null
      is_active: boolean | null
      created_at: Date | null
      updated_at: Date | null
    }, ExtArgs["result"]["users"]>
    composites: {}
  }

  type usersGetPayload<S extends boolean | null | undefined | usersDefaultArgs> = $Result.GetResult<Prisma.$usersPayload, S>

  type usersCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = 
    Omit<usersFindManyArgs, 'select' | 'include' | 'distinct'> & {
      select?: UsersCountAggregateInputType | true
    }

  export interface usersDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['users'], meta: { name: 'users' } }
    /**
     * Find zero or one Users that matches the filter.
     * @param {usersFindUniqueArgs} args - Arguments to find a Users
     * @example
     * // Get one Users
     * const users = await prisma.users.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends usersFindUniqueArgs>(args: SelectSubset<T, usersFindUniqueArgs<ExtArgs>>): Prisma__usersClient<$Result.GetResult<Prisma.$usersPayload<ExtArgs>, T, "findUnique"> | null, null, ExtArgs>

    /**
     * Find one Users that matches the filter or throw an error with `error.code='P2025'` 
     * if no matches were found.
     * @param {usersFindUniqueOrThrowArgs} args - Arguments to find a Users
     * @example
     * // Get one Users
     * const users = await prisma.users.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends usersFindUniqueOrThrowArgs>(args: SelectSubset<T, usersFindUniqueOrThrowArgs<ExtArgs>>): Prisma__usersClient<$Result.GetResult<Prisma.$usersPayload<ExtArgs>, T, "findUniqueOrThrow">, never, ExtArgs>

    /**
     * Find the first Users that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {usersFindFirstArgs} args - Arguments to find a Users
     * @example
     * // Get one Users
     * const users = await prisma.users.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends usersFindFirstArgs>(args?: SelectSubset<T, usersFindFirstArgs<ExtArgs>>): Prisma__usersClient<$Result.GetResult<Prisma.$usersPayload<ExtArgs>, T, "findFirst"> | null, null, ExtArgs>

    /**
     * Find the first Users that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {usersFindFirstOrThrowArgs} args - Arguments to find a Users
     * @example
     * // Get one Users
     * const users = await prisma.users.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends usersFindFirstOrThrowArgs>(args?: SelectSubset<T, usersFindFirstOrThrowArgs<ExtArgs>>): Prisma__usersClient<$Result.GetResult<Prisma.$usersPayload<ExtArgs>, T, "findFirstOrThrow">, never, ExtArgs>

    /**
     * Find zero or more Users that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {usersFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all Users
     * const users = await prisma.users.findMany()
     * 
     * // Get first 10 Users
     * const users = await prisma.users.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const usersWithIdOnly = await prisma.users.findMany({ select: { id: true } })
     * 
     */
    findMany<T extends usersFindManyArgs>(args?: SelectSubset<T, usersFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$usersPayload<ExtArgs>, T, "findMany">>

    /**
     * Create a Users.
     * @param {usersCreateArgs} args - Arguments to create a Users.
     * @example
     * // Create one Users
     * const Users = await prisma.users.create({
     *   data: {
     *     // ... data to create a Users
     *   }
     * })
     * 
     */
    create<T extends usersCreateArgs>(args: SelectSubset<T, usersCreateArgs<ExtArgs>>): Prisma__usersClient<$Result.GetResult<Prisma.$usersPayload<ExtArgs>, T, "create">, never, ExtArgs>

    /**
     * Create many Users.
     * @param {usersCreateManyArgs} args - Arguments to create many Users.
     * @example
     * // Create many Users
     * const users = await prisma.users.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends usersCreateManyArgs>(args?: SelectSubset<T, usersCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create many Users and returns the data saved in the database.
     * @param {usersCreateManyAndReturnArgs} args - Arguments to create many Users.
     * @example
     * // Create many Users
     * const users = await prisma.users.createManyAndReturn({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Create many Users and only return the `id`
     * const usersWithIdOnly = await prisma.users.createManyAndReturn({ 
     *   select: { id: true },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    createManyAndReturn<T extends usersCreateManyAndReturnArgs>(args?: SelectSubset<T, usersCreateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$usersPayload<ExtArgs>, T, "createManyAndReturn">>

    /**
     * Delete a Users.
     * @param {usersDeleteArgs} args - Arguments to delete one Users.
     * @example
     * // Delete one Users
     * const Users = await prisma.users.delete({
     *   where: {
     *     // ... filter to delete one Users
     *   }
     * })
     * 
     */
    delete<T extends usersDeleteArgs>(args: SelectSubset<T, usersDeleteArgs<ExtArgs>>): Prisma__usersClient<$Result.GetResult<Prisma.$usersPayload<ExtArgs>, T, "delete">, never, ExtArgs>

    /**
     * Update one Users.
     * @param {usersUpdateArgs} args - Arguments to update one Users.
     * @example
     * // Update one Users
     * const users = await prisma.users.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends usersUpdateArgs>(args: SelectSubset<T, usersUpdateArgs<ExtArgs>>): Prisma__usersClient<$Result.GetResult<Prisma.$usersPayload<ExtArgs>, T, "update">, never, ExtArgs>

    /**
     * Delete zero or more Users.
     * @param {usersDeleteManyArgs} args - Arguments to filter Users to delete.
     * @example
     * // Delete a few Users
     * const { count } = await prisma.users.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends usersDeleteManyArgs>(args?: SelectSubset<T, usersDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Users.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {usersUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many Users
     * const users = await prisma.users.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends usersUpdateManyArgs>(args: SelectSubset<T, usersUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create or update one Users.
     * @param {usersUpsertArgs} args - Arguments to update or create a Users.
     * @example
     * // Update or create a Users
     * const users = await prisma.users.upsert({
     *   create: {
     *     // ... data to create a Users
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the Users we want to update
     *   }
     * })
     */
    upsert<T extends usersUpsertArgs>(args: SelectSubset<T, usersUpsertArgs<ExtArgs>>): Prisma__usersClient<$Result.GetResult<Prisma.$usersPayload<ExtArgs>, T, "upsert">, never, ExtArgs>


    /**
     * Count the number of Users.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {usersCountArgs} args - Arguments to filter Users to count.
     * @example
     * // Count the number of Users
     * const count = await prisma.users.count({
     *   where: {
     *     // ... the filter for the Users we want to count
     *   }
     * })
    **/
    count<T extends usersCountArgs>(
      args?: Subset<T, usersCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], UsersCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a Users.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {UsersAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends UsersAggregateArgs>(args: Subset<T, UsersAggregateArgs>): Prisma.PrismaPromise<GetUsersAggregateType<T>>

    /**
     * Group by Users.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {usersGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends usersGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: usersGroupByArgs['orderBy'] }
        : { orderBy?: usersGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, usersGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetUsersGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the users model
   */
  readonly fields: usersFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for users.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__usersClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    device_truck_assignment_device_truck_assignment_assigned_byTousers<T extends users$device_truck_assignment_device_truck_assignment_assigned_byTousersArgs<ExtArgs> = {}>(args?: Subset<T, users$device_truck_assignment_device_truck_assignment_assigned_byTousersArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$device_truck_assignmentPayload<ExtArgs>, T, "findMany"> | Null>
    device_truck_assignment_device_truck_assignment_removed_byTousers<T extends users$device_truck_assignment_device_truck_assignment_removed_byTousersArgs<ExtArgs> = {}>(args?: Subset<T, users$device_truck_assignment_device_truck_assignment_removed_byTousersArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$device_truck_assignmentPayload<ExtArgs>, T, "findMany"> | Null>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the users model
   */ 
  interface usersFieldRefs {
    readonly id: FieldRef<"users", 'String'>
    readonly username: FieldRef<"users", 'String'>
    readonly email: FieldRef<"users", 'String'>
    readonly password_hash: FieldRef<"users", 'String'>
    readonly role: FieldRef<"users", 'String'>
    readonly is_active: FieldRef<"users", 'Boolean'>
    readonly created_at: FieldRef<"users", 'DateTime'>
    readonly updated_at: FieldRef<"users", 'DateTime'>
  }
    

  // Custom InputTypes
  /**
   * users findUnique
   */
  export type usersFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the users
     */
    select?: usersSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: usersInclude<ExtArgs> | null
    /**
     * Filter, which users to fetch.
     */
    where: usersWhereUniqueInput
  }

  /**
   * users findUniqueOrThrow
   */
  export type usersFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the users
     */
    select?: usersSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: usersInclude<ExtArgs> | null
    /**
     * Filter, which users to fetch.
     */
    where: usersWhereUniqueInput
  }

  /**
   * users findFirst
   */
  export type usersFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the users
     */
    select?: usersSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: usersInclude<ExtArgs> | null
    /**
     * Filter, which users to fetch.
     */
    where?: usersWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of users to fetch.
     */
    orderBy?: usersOrderByWithRelationInput | usersOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for users.
     */
    cursor?: usersWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` users from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` users.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of users.
     */
    distinct?: UsersScalarFieldEnum | UsersScalarFieldEnum[]
  }

  /**
   * users findFirstOrThrow
   */
  export type usersFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the users
     */
    select?: usersSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: usersInclude<ExtArgs> | null
    /**
     * Filter, which users to fetch.
     */
    where?: usersWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of users to fetch.
     */
    orderBy?: usersOrderByWithRelationInput | usersOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for users.
     */
    cursor?: usersWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` users from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` users.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of users.
     */
    distinct?: UsersScalarFieldEnum | UsersScalarFieldEnum[]
  }

  /**
   * users findMany
   */
  export type usersFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the users
     */
    select?: usersSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: usersInclude<ExtArgs> | null
    /**
     * Filter, which users to fetch.
     */
    where?: usersWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of users to fetch.
     */
    orderBy?: usersOrderByWithRelationInput | usersOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing users.
     */
    cursor?: usersWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` users from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` users.
     */
    skip?: number
    distinct?: UsersScalarFieldEnum | UsersScalarFieldEnum[]
  }

  /**
   * users create
   */
  export type usersCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the users
     */
    select?: usersSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: usersInclude<ExtArgs> | null
    /**
     * The data needed to create a users.
     */
    data: XOR<usersCreateInput, usersUncheckedCreateInput>
  }

  /**
   * users createMany
   */
  export type usersCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many users.
     */
    data: usersCreateManyInput | usersCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * users createManyAndReturn
   */
  export type usersCreateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the users
     */
    select?: usersSelectCreateManyAndReturn<ExtArgs> | null
    /**
     * The data used to create many users.
     */
    data: usersCreateManyInput | usersCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * users update
   */
  export type usersUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the users
     */
    select?: usersSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: usersInclude<ExtArgs> | null
    /**
     * The data needed to update a users.
     */
    data: XOR<usersUpdateInput, usersUncheckedUpdateInput>
    /**
     * Choose, which users to update.
     */
    where: usersWhereUniqueInput
  }

  /**
   * users updateMany
   */
  export type usersUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update users.
     */
    data: XOR<usersUpdateManyMutationInput, usersUncheckedUpdateManyInput>
    /**
     * Filter which users to update
     */
    where?: usersWhereInput
  }

  /**
   * users upsert
   */
  export type usersUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the users
     */
    select?: usersSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: usersInclude<ExtArgs> | null
    /**
     * The filter to search for the users to update in case it exists.
     */
    where: usersWhereUniqueInput
    /**
     * In case the users found by the `where` argument doesn't exist, create a new users with this data.
     */
    create: XOR<usersCreateInput, usersUncheckedCreateInput>
    /**
     * In case the users was found with the provided `where` argument, update it with this data.
     */
    update: XOR<usersUpdateInput, usersUncheckedUpdateInput>
  }

  /**
   * users delete
   */
  export type usersDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the users
     */
    select?: usersSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: usersInclude<ExtArgs> | null
    /**
     * Filter which users to delete.
     */
    where: usersWhereUniqueInput
  }

  /**
   * users deleteMany
   */
  export type usersDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which users to delete
     */
    where?: usersWhereInput
  }

  /**
   * users.device_truck_assignment_device_truck_assignment_assigned_byTousers
   */
  export type users$device_truck_assignment_device_truck_assignment_assigned_byTousersArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the device_truck_assignment
     */
    select?: device_truck_assignmentSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: device_truck_assignmentInclude<ExtArgs> | null
    where?: device_truck_assignmentWhereInput
    orderBy?: device_truck_assignmentOrderByWithRelationInput | device_truck_assignmentOrderByWithRelationInput[]
    cursor?: device_truck_assignmentWhereUniqueInput
    take?: number
    skip?: number
    distinct?: Device_truck_assignmentScalarFieldEnum | Device_truck_assignmentScalarFieldEnum[]
  }

  /**
   * users.device_truck_assignment_device_truck_assignment_removed_byTousers
   */
  export type users$device_truck_assignment_device_truck_assignment_removed_byTousersArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the device_truck_assignment
     */
    select?: device_truck_assignmentSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: device_truck_assignmentInclude<ExtArgs> | null
    where?: device_truck_assignmentWhereInput
    orderBy?: device_truck_assignmentOrderByWithRelationInput | device_truck_assignmentOrderByWithRelationInput[]
    cursor?: device_truck_assignmentWhereUniqueInput
    take?: number
    skip?: number
    distinct?: Device_truck_assignmentScalarFieldEnum | Device_truck_assignmentScalarFieldEnum[]
  }

  /**
   * users without action
   */
  export type usersDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the users
     */
    select?: usersSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: usersInclude<ExtArgs> | null
  }


  /**
   * Enums
   */

  export const TransactionIsolationLevel: {
    ReadUncommitted: 'ReadUncommitted',
    ReadCommitted: 'ReadCommitted',
    RepeatableRead: 'RepeatableRead',
    Serializable: 'Serializable'
  };

  export type TransactionIsolationLevel = (typeof TransactionIsolationLevel)[keyof typeof TransactionIsolationLevel]


  export const Alert_eventScalarFieldEnum: {
    id: 'id',
    truck_id: 'truck_id',
    type: 'type',
    severity: 'severity',
    detail: 'detail',
    occurred_at: 'occurred_at',
    acknowledged: 'acknowledged',
    created_by: 'created_by'
  };

  export type Alert_eventScalarFieldEnum = (typeof Alert_eventScalarFieldEnum)[keyof typeof Alert_eventScalarFieldEnum]


  export const Daily_routeScalarFieldEnum: {
    id: 'id',
    truck_id: 'truck_id',
    route_date: 'route_date',
    point_count: 'point_count',
    generated_at: 'generated_at',
    created_by: 'created_by'
  };

  export type Daily_routeScalarFieldEnum = (typeof Daily_routeScalarFieldEnum)[keyof typeof Daily_routeScalarFieldEnum]


  export const DeviceScalarFieldEnum: {
    id: 'id',
    truck_id: 'truck_id',
    sn: 'sn',
    sim_number: 'sim_number',
    installed_at: 'installed_at',
    removed_at: 'removed_at',
    created_by: 'created_by',
    updated_by: 'updated_by'
  };

  export type DeviceScalarFieldEnum = (typeof DeviceScalarFieldEnum)[keyof typeof DeviceScalarFieldEnum]


  export const Device_status_eventScalarFieldEnum: {
    id: 'id',
    device_id: 'device_id',
    truck_id: 'truck_id',
    host_bat: 'host_bat',
    repeater1_bat: 'repeater1_bat',
    repeater2_bat: 'repeater2_bat',
    lock_state: 'lock_state',
    reported_at: 'reported_at',
    created_by: 'created_by'
  };

  export type Device_status_eventScalarFieldEnum = (typeof Device_status_eventScalarFieldEnum)[keyof typeof Device_status_eventScalarFieldEnum]


  export const Device_truck_assignmentScalarFieldEnum: {
    id: 'id',
    device_id: 'device_id',
    truck_id: 'truck_id',
    assigned_at: 'assigned_at',
    assigned_by: 'assigned_by',
    removed_at: 'removed_at',
    removed_by: 'removed_by',
    is_active: 'is_active'
  };

  export type Device_truck_assignmentScalarFieldEnum = (typeof Device_truck_assignmentScalarFieldEnum)[keyof typeof Device_truck_assignmentScalarFieldEnum]


  export const Fleet_groupScalarFieldEnum: {
    id: 'id',
    name: 'name',
    site: 'site',
    description: 'description',
    created_at: 'created_at',
    created_by: 'created_by',
    updated_by: 'updated_by'
  };

  export type Fleet_groupScalarFieldEnum = (typeof Fleet_groupScalarFieldEnum)[keyof typeof Fleet_groupScalarFieldEnum]


  export const Fuel_level_eventScalarFieldEnum: {
    id: 'id',
    truck_id: 'truck_id',
    fuel_percent: 'fuel_percent',
    changed_at: 'changed_at',
    source: 'source',
    created_by: 'created_by'
  };

  export type Fuel_level_eventScalarFieldEnum = (typeof Fuel_level_eventScalarFieldEnum)[keyof typeof Fuel_level_eventScalarFieldEnum]


  export const GeofenceScalarFieldEnum: {
    id: 'id',
    name: 'name',
    created_by: 'created_by',
    created_at: 'created_at'
  };

  export type GeofenceScalarFieldEnum = (typeof GeofenceScalarFieldEnum)[keyof typeof GeofenceScalarFieldEnum]


  export const Gps_positionScalarFieldEnum: {
    id: 'id',
    device_id: 'device_id',
    truck_id: 'truck_id',
    ts: 'ts',
    speed_kph: 'speed_kph',
    heading_deg: 'heading_deg',
    hdop: 'hdop',
    source: 'source'
  };

  export type Gps_positionScalarFieldEnum = (typeof Gps_positionScalarFieldEnum)[keyof typeof Gps_positionScalarFieldEnum]


  export const Hub_temperature_eventScalarFieldEnum: {
    id: 'id',
    device_id: 'device_id',
    truck_id: 'truck_id',
    hub_no: 'hub_no',
    temp_celsius: 'temp_celsius',
    ex_type: 'ex_type',
    battery_level: 'battery_level',
    changed_at: 'changed_at',
    created_by: 'created_by'
  };

  export type Hub_temperature_eventScalarFieldEnum = (typeof Hub_temperature_eventScalarFieldEnum)[keyof typeof Hub_temperature_eventScalarFieldEnum]


  export const Lock_eventScalarFieldEnum: {
    id: 'id',
    device_id: 'device_id',
    truck_id: 'truck_id',
    is_lock: 'is_lock',
    reported_at: 'reported_at',
    created_by: 'created_by'
  };

  export type Lock_eventScalarFieldEnum = (typeof Lock_eventScalarFieldEnum)[keyof typeof Lock_eventScalarFieldEnum]


  export const SensorScalarFieldEnum: {
    id: 'id',
    device_id: 'device_id',
    type: 'type',
    position_no: 'position_no',
    sn: 'sn',
    installed_at: 'installed_at',
    removed_at: 'removed_at',
    created_by: 'created_by',
    updated_by: 'updated_by'
  };

  export type SensorScalarFieldEnum = (typeof SensorScalarFieldEnum)[keyof typeof SensorScalarFieldEnum]


  export const Sensor_data_rawScalarFieldEnum: {
    id: 'id',
    device_sn: 'device_sn',
    cmd_type: 'cmd_type',
    truck_id: 'truck_id',
    tire_no: 'tire_no',
    raw_json: 'raw_json',
    processed: 'processed',
    received_at: 'received_at',
    processed_at: 'processed_at'
  };

  export type Sensor_data_rawScalarFieldEnum = (typeof Sensor_data_rawScalarFieldEnum)[keyof typeof Sensor_data_rawScalarFieldEnum]


  export const Sensor_processing_queueScalarFieldEnum: {
    id: 'id',
    raw_data_id: 'raw_data_id',
    priority: 'priority',
    attempts: 'attempts',
    max_attempts: 'max_attempts',
    error_message: 'error_message',
    created_at: 'created_at',
    processed_at: 'processed_at'
  };

  export type Sensor_processing_queueScalarFieldEnum = (typeof Sensor_processing_queueScalarFieldEnum)[keyof typeof Sensor_processing_queueScalarFieldEnum]


  export const Spatial_ref_sysScalarFieldEnum: {
    srid: 'srid',
    auth_name: 'auth_name',
    auth_srid: 'auth_srid',
    srtext: 'srtext',
    proj4text: 'proj4text'
  };

  export type Spatial_ref_sysScalarFieldEnum = (typeof Spatial_ref_sysScalarFieldEnum)[keyof typeof Spatial_ref_sysScalarFieldEnum]


  export const Speed_eventScalarFieldEnum: {
    id: 'id',
    truck_id: 'truck_id',
    speed_kph: 'speed_kph',
    changed_at: 'changed_at',
    source: 'source',
    created_by: 'created_by'
  };

  export type Speed_eventScalarFieldEnum = (typeof Speed_eventScalarFieldEnum)[keyof typeof Speed_eventScalarFieldEnum]


  export const Tire_error_codeScalarFieldEnum: {
    code: 'code',
    description: 'description'
  };

  export type Tire_error_codeScalarFieldEnum = (typeof Tire_error_codeScalarFieldEnum)[keyof typeof Tire_error_codeScalarFieldEnum]


  export const Tire_position_configScalarFieldEnum: {
    id: 'id',
    truck_id: 'truck_id',
    tire_no: 'tire_no',
    position_name: 'position_name',
    wheel_type: 'wheel_type',
    is_active: 'is_active',
    created_at: 'created_at'
  };

  export type Tire_position_configScalarFieldEnum = (typeof Tire_position_configScalarFieldEnum)[keyof typeof Tire_position_configScalarFieldEnum]


  export const Tire_pressure_eventScalarFieldEnum: {
    id: 'id',
    device_id: 'device_id',
    truck_id: 'truck_id',
    tire_no: 'tire_no',
    pressure_kpa: 'pressure_kpa',
    temp_celsius: 'temp_celsius',
    ex_type: 'ex_type',
    battery_level: 'battery_level',
    changed_at: 'changed_at',
    created_by: 'created_by'
  };

  export type Tire_pressure_eventScalarFieldEnum = (typeof Tire_pressure_eventScalarFieldEnum)[keyof typeof Tire_pressure_eventScalarFieldEnum]


  export const TripScalarFieldEnum: {
    id: 'id',
    truck_id: 'truck_id',
    start_ts: 'start_ts',
    end_ts: 'end_ts'
  };

  export type TripScalarFieldEnum = (typeof TripScalarFieldEnum)[keyof typeof TripScalarFieldEnum]


  export const TruckScalarFieldEnum: {
    id: 'id',
    plate_number: 'plate_number',
    vin: 'vin',
    name: 'name',
    model: 'model',
    year: 'year',
    tire_config: 'tire_config',
    fleet_group_id: 'fleet_group_id',
    created_at: 'created_at',
    created_by: 'created_by',
    updated_by: 'updated_by'
  };

  export type TruckScalarFieldEnum = (typeof TruckScalarFieldEnum)[keyof typeof TruckScalarFieldEnum]


  export const Truck_status_eventScalarFieldEnum: {
    id: 'id',
    truck_id: 'truck_id',
    status: 'status',
    note: 'note',
    changed_at: 'changed_at',
    created_by: 'created_by'
  };

  export type Truck_status_eventScalarFieldEnum = (typeof Truck_status_eventScalarFieldEnum)[keyof typeof Truck_status_eventScalarFieldEnum]


  export const UsersScalarFieldEnum: {
    id: 'id',
    username: 'username',
    email: 'email',
    password_hash: 'password_hash',
    role: 'role',
    is_active: 'is_active',
    created_at: 'created_at',
    updated_at: 'updated_at'
  };

  export type UsersScalarFieldEnum = (typeof UsersScalarFieldEnum)[keyof typeof UsersScalarFieldEnum]


  export const SortOrder: {
    asc: 'asc',
    desc: 'desc'
  };

  export type SortOrder = (typeof SortOrder)[keyof typeof SortOrder]


  export const NullableJsonNullValueInput: {
    DbNull: typeof DbNull,
    JsonNull: typeof JsonNull
  };

  export type NullableJsonNullValueInput = (typeof NullableJsonNullValueInput)[keyof typeof NullableJsonNullValueInput]


  export const JsonNullValueInput: {
    JsonNull: typeof JsonNull
  };

  export type JsonNullValueInput = (typeof JsonNullValueInput)[keyof typeof JsonNullValueInput]


  export const QueryMode: {
    default: 'default',
    insensitive: 'insensitive'
  };

  export type QueryMode = (typeof QueryMode)[keyof typeof QueryMode]


  export const JsonNullValueFilter: {
    DbNull: typeof DbNull,
    JsonNull: typeof JsonNull,
    AnyNull: typeof AnyNull
  };

  export type JsonNullValueFilter = (typeof JsonNullValueFilter)[keyof typeof JsonNullValueFilter]


  export const NullsOrder: {
    first: 'first',
    last: 'last'
  };

  export type NullsOrder = (typeof NullsOrder)[keyof typeof NullsOrder]


  /**
   * Field references 
   */


  /**
   * Reference to a field of type 'String'
   */
  export type StringFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'String'>
    


  /**
   * Reference to a field of type 'String[]'
   */
  export type ListStringFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'String[]'>
    


  /**
   * Reference to a field of type 'alert_type'
   */
  export type Enumalert_typeFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'alert_type'>
    


  /**
   * Reference to a field of type 'alert_type[]'
   */
  export type ListEnumalert_typeFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'alert_type[]'>
    


  /**
   * Reference to a field of type 'Int'
   */
  export type IntFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'Int'>
    


  /**
   * Reference to a field of type 'Int[]'
   */
  export type ListIntFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'Int[]'>
    


  /**
   * Reference to a field of type 'Json'
   */
  export type JsonFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'Json'>
    


  /**
   * Reference to a field of type 'DateTime'
   */
  export type DateTimeFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'DateTime'>
    


  /**
   * Reference to a field of type 'DateTime[]'
   */
  export type ListDateTimeFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'DateTime[]'>
    


  /**
   * Reference to a field of type 'Boolean'
   */
  export type BooleanFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'Boolean'>
    


  /**
   * Reference to a field of type 'Float'
   */
  export type FloatFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'Float'>
    


  /**
   * Reference to a field of type 'Float[]'
   */
  export type ListFloatFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'Float[]'>
    


  /**
   * Reference to a field of type 'BigInt'
   */
  export type BigIntFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'BigInt'>
    


  /**
   * Reference to a field of type 'BigInt[]'
   */
  export type ListBigIntFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'BigInt[]'>
    


  /**
   * Reference to a field of type 'truck_status'
   */
  export type Enumtruck_statusFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'truck_status'>
    


  /**
   * Reference to a field of type 'truck_status[]'
   */
  export type ListEnumtruck_statusFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'truck_status[]'>
    
  /**
   * Deep Input Types
   */


  export type alert_eventWhereInput = {
    AND?: alert_eventWhereInput | alert_eventWhereInput[]
    OR?: alert_eventWhereInput[]
    NOT?: alert_eventWhereInput | alert_eventWhereInput[]
    id?: UuidFilter<"alert_event"> | string
    truck_id?: UuidFilter<"alert_event"> | string
    type?: Enumalert_typeFilter<"alert_event"> | $Enums.alert_type
    severity?: IntNullableFilter<"alert_event"> | number | null
    detail?: JsonNullableFilter<"alert_event">
    occurred_at?: DateTimeFilter<"alert_event"> | Date | string
    acknowledged?: BoolFilter<"alert_event"> | boolean
    created_by?: UuidNullableFilter<"alert_event"> | string | null
    truck?: XOR<TruckRelationFilter, truckWhereInput>
  }

  export type alert_eventOrderByWithRelationInput = {
    id?: SortOrder
    truck_id?: SortOrder
    type?: SortOrder
    severity?: SortOrderInput | SortOrder
    detail?: SortOrderInput | SortOrder
    occurred_at?: SortOrder
    acknowledged?: SortOrder
    created_by?: SortOrderInput | SortOrder
    truck?: truckOrderByWithRelationInput
  }

  export type alert_eventWhereUniqueInput = Prisma.AtLeast<{
    id?: string
    AND?: alert_eventWhereInput | alert_eventWhereInput[]
    OR?: alert_eventWhereInput[]
    NOT?: alert_eventWhereInput | alert_eventWhereInput[]
    truck_id?: UuidFilter<"alert_event"> | string
    type?: Enumalert_typeFilter<"alert_event"> | $Enums.alert_type
    severity?: IntNullableFilter<"alert_event"> | number | null
    detail?: JsonNullableFilter<"alert_event">
    occurred_at?: DateTimeFilter<"alert_event"> | Date | string
    acknowledged?: BoolFilter<"alert_event"> | boolean
    created_by?: UuidNullableFilter<"alert_event"> | string | null
    truck?: XOR<TruckRelationFilter, truckWhereInput>
  }, "id">

  export type alert_eventOrderByWithAggregationInput = {
    id?: SortOrder
    truck_id?: SortOrder
    type?: SortOrder
    severity?: SortOrderInput | SortOrder
    detail?: SortOrderInput | SortOrder
    occurred_at?: SortOrder
    acknowledged?: SortOrder
    created_by?: SortOrderInput | SortOrder
    _count?: alert_eventCountOrderByAggregateInput
    _avg?: alert_eventAvgOrderByAggregateInput
    _max?: alert_eventMaxOrderByAggregateInput
    _min?: alert_eventMinOrderByAggregateInput
    _sum?: alert_eventSumOrderByAggregateInput
  }

  export type alert_eventScalarWhereWithAggregatesInput = {
    AND?: alert_eventScalarWhereWithAggregatesInput | alert_eventScalarWhereWithAggregatesInput[]
    OR?: alert_eventScalarWhereWithAggregatesInput[]
    NOT?: alert_eventScalarWhereWithAggregatesInput | alert_eventScalarWhereWithAggregatesInput[]
    id?: UuidWithAggregatesFilter<"alert_event"> | string
    truck_id?: UuidWithAggregatesFilter<"alert_event"> | string
    type?: Enumalert_typeWithAggregatesFilter<"alert_event"> | $Enums.alert_type
    severity?: IntNullableWithAggregatesFilter<"alert_event"> | number | null
    detail?: JsonNullableWithAggregatesFilter<"alert_event">
    occurred_at?: DateTimeWithAggregatesFilter<"alert_event"> | Date | string
    acknowledged?: BoolWithAggregatesFilter<"alert_event"> | boolean
    created_by?: UuidNullableWithAggregatesFilter<"alert_event"> | string | null
  }

  export type daily_routeWhereInput = {
    AND?: daily_routeWhereInput | daily_routeWhereInput[]
    OR?: daily_routeWhereInput[]
    NOT?: daily_routeWhereInput | daily_routeWhereInput[]
    id?: UuidFilter<"daily_route"> | string
    truck_id?: UuidFilter<"daily_route"> | string
    route_date?: DateTimeFilter<"daily_route"> | Date | string
    point_count?: IntFilter<"daily_route"> | number
    generated_at?: DateTimeFilter<"daily_route"> | Date | string
    created_by?: UuidNullableFilter<"daily_route"> | string | null
    truck?: XOR<TruckRelationFilter, truckWhereInput>
  }

  export type daily_routeOrderByWithRelationInput = {
    id?: SortOrder
    truck_id?: SortOrder
    route_date?: SortOrder
    point_count?: SortOrder
    generated_at?: SortOrder
    created_by?: SortOrderInput | SortOrder
    truck?: truckOrderByWithRelationInput
  }

  export type daily_routeWhereUniqueInput = Prisma.AtLeast<{
    id?: string
    truck_id_route_date?: daily_routeTruck_idRoute_dateCompoundUniqueInput
    AND?: daily_routeWhereInput | daily_routeWhereInput[]
    OR?: daily_routeWhereInput[]
    NOT?: daily_routeWhereInput | daily_routeWhereInput[]
    truck_id?: UuidFilter<"daily_route"> | string
    route_date?: DateTimeFilter<"daily_route"> | Date | string
    point_count?: IntFilter<"daily_route"> | number
    generated_at?: DateTimeFilter<"daily_route"> | Date | string
    created_by?: UuidNullableFilter<"daily_route"> | string | null
    truck?: XOR<TruckRelationFilter, truckWhereInput>
  }, "id" | "truck_id_route_date">

  export type daily_routeOrderByWithAggregationInput = {
    id?: SortOrder
    truck_id?: SortOrder
    route_date?: SortOrder
    point_count?: SortOrder
    generated_at?: SortOrder
    created_by?: SortOrderInput | SortOrder
    _count?: daily_routeCountOrderByAggregateInput
    _avg?: daily_routeAvgOrderByAggregateInput
    _max?: daily_routeMaxOrderByAggregateInput
    _min?: daily_routeMinOrderByAggregateInput
    _sum?: daily_routeSumOrderByAggregateInput
  }

  export type daily_routeScalarWhereWithAggregatesInput = {
    AND?: daily_routeScalarWhereWithAggregatesInput | daily_routeScalarWhereWithAggregatesInput[]
    OR?: daily_routeScalarWhereWithAggregatesInput[]
    NOT?: daily_routeScalarWhereWithAggregatesInput | daily_routeScalarWhereWithAggregatesInput[]
    id?: UuidWithAggregatesFilter<"daily_route"> | string
    truck_id?: UuidWithAggregatesFilter<"daily_route"> | string
    route_date?: DateTimeWithAggregatesFilter<"daily_route"> | Date | string
    point_count?: IntWithAggregatesFilter<"daily_route"> | number
    generated_at?: DateTimeWithAggregatesFilter<"daily_route"> | Date | string
    created_by?: UuidNullableWithAggregatesFilter<"daily_route"> | string | null
  }

  export type deviceWhereInput = {
    AND?: deviceWhereInput | deviceWhereInput[]
    OR?: deviceWhereInput[]
    NOT?: deviceWhereInput | deviceWhereInput[]
    id?: UuidFilter<"device"> | string
    truck_id?: UuidFilter<"device"> | string
    sn?: StringFilter<"device"> | string
    sim_number?: StringNullableFilter<"device"> | string | null
    installed_at?: DateTimeFilter<"device"> | Date | string
    removed_at?: DateTimeNullableFilter<"device"> | Date | string | null
    created_by?: UuidNullableFilter<"device"> | string | null
    updated_by?: UuidNullableFilter<"device"> | string | null
    truck?: XOR<TruckRelationFilter, truckWhereInput>
    device_status_event?: Device_status_eventListRelationFilter
    device_truck_assignment?: Device_truck_assignmentListRelationFilter
    gps_position?: Gps_positionListRelationFilter
    hub_temperature_event?: Hub_temperature_eventListRelationFilter
    lock_event?: Lock_eventListRelationFilter
    sensor?: SensorListRelationFilter
    tire_pressure_event?: Tire_pressure_eventListRelationFilter
  }

  export type deviceOrderByWithRelationInput = {
    id?: SortOrder
    truck_id?: SortOrder
    sn?: SortOrder
    sim_number?: SortOrderInput | SortOrder
    installed_at?: SortOrder
    removed_at?: SortOrderInput | SortOrder
    created_by?: SortOrderInput | SortOrder
    updated_by?: SortOrderInput | SortOrder
    truck?: truckOrderByWithRelationInput
    device_status_event?: device_status_eventOrderByRelationAggregateInput
    device_truck_assignment?: device_truck_assignmentOrderByRelationAggregateInput
    gps_position?: gps_positionOrderByRelationAggregateInput
    hub_temperature_event?: hub_temperature_eventOrderByRelationAggregateInput
    lock_event?: lock_eventOrderByRelationAggregateInput
    sensor?: sensorOrderByRelationAggregateInput
    tire_pressure_event?: tire_pressure_eventOrderByRelationAggregateInput
  }

  export type deviceWhereUniqueInput = Prisma.AtLeast<{
    id?: string
    sn?: string
    AND?: deviceWhereInput | deviceWhereInput[]
    OR?: deviceWhereInput[]
    NOT?: deviceWhereInput | deviceWhereInput[]
    truck_id?: UuidFilter<"device"> | string
    sim_number?: StringNullableFilter<"device"> | string | null
    installed_at?: DateTimeFilter<"device"> | Date | string
    removed_at?: DateTimeNullableFilter<"device"> | Date | string | null
    created_by?: UuidNullableFilter<"device"> | string | null
    updated_by?: UuidNullableFilter<"device"> | string | null
    truck?: XOR<TruckRelationFilter, truckWhereInput>
    device_status_event?: Device_status_eventListRelationFilter
    device_truck_assignment?: Device_truck_assignmentListRelationFilter
    gps_position?: Gps_positionListRelationFilter
    hub_temperature_event?: Hub_temperature_eventListRelationFilter
    lock_event?: Lock_eventListRelationFilter
    sensor?: SensorListRelationFilter
    tire_pressure_event?: Tire_pressure_eventListRelationFilter
  }, "id" | "sn">

  export type deviceOrderByWithAggregationInput = {
    id?: SortOrder
    truck_id?: SortOrder
    sn?: SortOrder
    sim_number?: SortOrderInput | SortOrder
    installed_at?: SortOrder
    removed_at?: SortOrderInput | SortOrder
    created_by?: SortOrderInput | SortOrder
    updated_by?: SortOrderInput | SortOrder
    _count?: deviceCountOrderByAggregateInput
    _max?: deviceMaxOrderByAggregateInput
    _min?: deviceMinOrderByAggregateInput
  }

  export type deviceScalarWhereWithAggregatesInput = {
    AND?: deviceScalarWhereWithAggregatesInput | deviceScalarWhereWithAggregatesInput[]
    OR?: deviceScalarWhereWithAggregatesInput[]
    NOT?: deviceScalarWhereWithAggregatesInput | deviceScalarWhereWithAggregatesInput[]
    id?: UuidWithAggregatesFilter<"device"> | string
    truck_id?: UuidWithAggregatesFilter<"device"> | string
    sn?: StringWithAggregatesFilter<"device"> | string
    sim_number?: StringNullableWithAggregatesFilter<"device"> | string | null
    installed_at?: DateTimeWithAggregatesFilter<"device"> | Date | string
    removed_at?: DateTimeNullableWithAggregatesFilter<"device"> | Date | string | null
    created_by?: UuidNullableWithAggregatesFilter<"device"> | string | null
    updated_by?: UuidNullableWithAggregatesFilter<"device"> | string | null
  }

  export type device_status_eventWhereInput = {
    AND?: device_status_eventWhereInput | device_status_eventWhereInput[]
    OR?: device_status_eventWhereInput[]
    NOT?: device_status_eventWhereInput | device_status_eventWhereInput[]
    id?: UuidFilter<"device_status_event"> | string
    device_id?: UuidFilter<"device_status_event"> | string
    truck_id?: UuidFilter<"device_status_event"> | string
    host_bat?: IntNullableFilter<"device_status_event"> | number | null
    repeater1_bat?: IntNullableFilter<"device_status_event"> | number | null
    repeater2_bat?: IntNullableFilter<"device_status_event"> | number | null
    lock_state?: IntNullableFilter<"device_status_event"> | number | null
    reported_at?: DateTimeFilter<"device_status_event"> | Date | string
    created_by?: UuidNullableFilter<"device_status_event"> | string | null
    device?: XOR<DeviceRelationFilter, deviceWhereInput>
    truck?: XOR<TruckRelationFilter, truckWhereInput>
  }

  export type device_status_eventOrderByWithRelationInput = {
    id?: SortOrder
    device_id?: SortOrder
    truck_id?: SortOrder
    host_bat?: SortOrderInput | SortOrder
    repeater1_bat?: SortOrderInput | SortOrder
    repeater2_bat?: SortOrderInput | SortOrder
    lock_state?: SortOrderInput | SortOrder
    reported_at?: SortOrder
    created_by?: SortOrderInput | SortOrder
    device?: deviceOrderByWithRelationInput
    truck?: truckOrderByWithRelationInput
  }

  export type device_status_eventWhereUniqueInput = Prisma.AtLeast<{
    id?: string
    AND?: device_status_eventWhereInput | device_status_eventWhereInput[]
    OR?: device_status_eventWhereInput[]
    NOT?: device_status_eventWhereInput | device_status_eventWhereInput[]
    device_id?: UuidFilter<"device_status_event"> | string
    truck_id?: UuidFilter<"device_status_event"> | string
    host_bat?: IntNullableFilter<"device_status_event"> | number | null
    repeater1_bat?: IntNullableFilter<"device_status_event"> | number | null
    repeater2_bat?: IntNullableFilter<"device_status_event"> | number | null
    lock_state?: IntNullableFilter<"device_status_event"> | number | null
    reported_at?: DateTimeFilter<"device_status_event"> | Date | string
    created_by?: UuidNullableFilter<"device_status_event"> | string | null
    device?: XOR<DeviceRelationFilter, deviceWhereInput>
    truck?: XOR<TruckRelationFilter, truckWhereInput>
  }, "id">

  export type device_status_eventOrderByWithAggregationInput = {
    id?: SortOrder
    device_id?: SortOrder
    truck_id?: SortOrder
    host_bat?: SortOrderInput | SortOrder
    repeater1_bat?: SortOrderInput | SortOrder
    repeater2_bat?: SortOrderInput | SortOrder
    lock_state?: SortOrderInput | SortOrder
    reported_at?: SortOrder
    created_by?: SortOrderInput | SortOrder
    _count?: device_status_eventCountOrderByAggregateInput
    _avg?: device_status_eventAvgOrderByAggregateInput
    _max?: device_status_eventMaxOrderByAggregateInput
    _min?: device_status_eventMinOrderByAggregateInput
    _sum?: device_status_eventSumOrderByAggregateInput
  }

  export type device_status_eventScalarWhereWithAggregatesInput = {
    AND?: device_status_eventScalarWhereWithAggregatesInput | device_status_eventScalarWhereWithAggregatesInput[]
    OR?: device_status_eventScalarWhereWithAggregatesInput[]
    NOT?: device_status_eventScalarWhereWithAggregatesInput | device_status_eventScalarWhereWithAggregatesInput[]
    id?: UuidWithAggregatesFilter<"device_status_event"> | string
    device_id?: UuidWithAggregatesFilter<"device_status_event"> | string
    truck_id?: UuidWithAggregatesFilter<"device_status_event"> | string
    host_bat?: IntNullableWithAggregatesFilter<"device_status_event"> | number | null
    repeater1_bat?: IntNullableWithAggregatesFilter<"device_status_event"> | number | null
    repeater2_bat?: IntNullableWithAggregatesFilter<"device_status_event"> | number | null
    lock_state?: IntNullableWithAggregatesFilter<"device_status_event"> | number | null
    reported_at?: DateTimeWithAggregatesFilter<"device_status_event"> | Date | string
    created_by?: UuidNullableWithAggregatesFilter<"device_status_event"> | string | null
  }

  export type device_truck_assignmentWhereInput = {
    AND?: device_truck_assignmentWhereInput | device_truck_assignmentWhereInput[]
    OR?: device_truck_assignmentWhereInput[]
    NOT?: device_truck_assignmentWhereInput | device_truck_assignmentWhereInput[]
    id?: UuidFilter<"device_truck_assignment"> | string
    device_id?: UuidNullableFilter<"device_truck_assignment"> | string | null
    truck_id?: UuidNullableFilter<"device_truck_assignment"> | string | null
    assigned_at?: DateTimeFilter<"device_truck_assignment"> | Date | string
    assigned_by?: UuidNullableFilter<"device_truck_assignment"> | string | null
    removed_at?: DateTimeNullableFilter<"device_truck_assignment"> | Date | string | null
    removed_by?: UuidNullableFilter<"device_truck_assignment"> | string | null
    is_active?: BoolNullableFilter<"device_truck_assignment"> | boolean | null
    users_device_truck_assignment_assigned_byTousers?: XOR<UsersNullableRelationFilter, usersWhereInput> | null
    device?: XOR<DeviceNullableRelationFilter, deviceWhereInput> | null
    users_device_truck_assignment_removed_byTousers?: XOR<UsersNullableRelationFilter, usersWhereInput> | null
    truck?: XOR<TruckNullableRelationFilter, truckWhereInput> | null
  }

  export type device_truck_assignmentOrderByWithRelationInput = {
    id?: SortOrder
    device_id?: SortOrderInput | SortOrder
    truck_id?: SortOrderInput | SortOrder
    assigned_at?: SortOrder
    assigned_by?: SortOrderInput | SortOrder
    removed_at?: SortOrderInput | SortOrder
    removed_by?: SortOrderInput | SortOrder
    is_active?: SortOrderInput | SortOrder
    users_device_truck_assignment_assigned_byTousers?: usersOrderByWithRelationInput
    device?: deviceOrderByWithRelationInput
    users_device_truck_assignment_removed_byTousers?: usersOrderByWithRelationInput
    truck?: truckOrderByWithRelationInput
  }

  export type device_truck_assignmentWhereUniqueInput = Prisma.AtLeast<{
    id?: string
    AND?: device_truck_assignmentWhereInput | device_truck_assignmentWhereInput[]
    OR?: device_truck_assignmentWhereInput[]
    NOT?: device_truck_assignmentWhereInput | device_truck_assignmentWhereInput[]
    device_id?: UuidNullableFilter<"device_truck_assignment"> | string | null
    truck_id?: UuidNullableFilter<"device_truck_assignment"> | string | null
    assigned_at?: DateTimeFilter<"device_truck_assignment"> | Date | string
    assigned_by?: UuidNullableFilter<"device_truck_assignment"> | string | null
    removed_at?: DateTimeNullableFilter<"device_truck_assignment"> | Date | string | null
    removed_by?: UuidNullableFilter<"device_truck_assignment"> | string | null
    is_active?: BoolNullableFilter<"device_truck_assignment"> | boolean | null
    users_device_truck_assignment_assigned_byTousers?: XOR<UsersNullableRelationFilter, usersWhereInput> | null
    device?: XOR<DeviceNullableRelationFilter, deviceWhereInput> | null
    users_device_truck_assignment_removed_byTousers?: XOR<UsersNullableRelationFilter, usersWhereInput> | null
    truck?: XOR<TruckNullableRelationFilter, truckWhereInput> | null
  }, "id">

  export type device_truck_assignmentOrderByWithAggregationInput = {
    id?: SortOrder
    device_id?: SortOrderInput | SortOrder
    truck_id?: SortOrderInput | SortOrder
    assigned_at?: SortOrder
    assigned_by?: SortOrderInput | SortOrder
    removed_at?: SortOrderInput | SortOrder
    removed_by?: SortOrderInput | SortOrder
    is_active?: SortOrderInput | SortOrder
    _count?: device_truck_assignmentCountOrderByAggregateInput
    _max?: device_truck_assignmentMaxOrderByAggregateInput
    _min?: device_truck_assignmentMinOrderByAggregateInput
  }

  export type device_truck_assignmentScalarWhereWithAggregatesInput = {
    AND?: device_truck_assignmentScalarWhereWithAggregatesInput | device_truck_assignmentScalarWhereWithAggregatesInput[]
    OR?: device_truck_assignmentScalarWhereWithAggregatesInput[]
    NOT?: device_truck_assignmentScalarWhereWithAggregatesInput | device_truck_assignmentScalarWhereWithAggregatesInput[]
    id?: UuidWithAggregatesFilter<"device_truck_assignment"> | string
    device_id?: UuidNullableWithAggregatesFilter<"device_truck_assignment"> | string | null
    truck_id?: UuidNullableWithAggregatesFilter<"device_truck_assignment"> | string | null
    assigned_at?: DateTimeWithAggregatesFilter<"device_truck_assignment"> | Date | string
    assigned_by?: UuidNullableWithAggregatesFilter<"device_truck_assignment"> | string | null
    removed_at?: DateTimeNullableWithAggregatesFilter<"device_truck_assignment"> | Date | string | null
    removed_by?: UuidNullableWithAggregatesFilter<"device_truck_assignment"> | string | null
    is_active?: BoolNullableWithAggregatesFilter<"device_truck_assignment"> | boolean | null
  }

  export type fleet_groupWhereInput = {
    AND?: fleet_groupWhereInput | fleet_groupWhereInput[]
    OR?: fleet_groupWhereInput[]
    NOT?: fleet_groupWhereInput | fleet_groupWhereInput[]
    id?: UuidFilter<"fleet_group"> | string
    name?: StringFilter<"fleet_group"> | string
    site?: StringNullableFilter<"fleet_group"> | string | null
    description?: StringNullableFilter<"fleet_group"> | string | null
    created_at?: DateTimeNullableFilter<"fleet_group"> | Date | string | null
    created_by?: UuidNullableFilter<"fleet_group"> | string | null
    updated_by?: UuidNullableFilter<"fleet_group"> | string | null
    truck?: TruckListRelationFilter
  }

  export type fleet_groupOrderByWithRelationInput = {
    id?: SortOrder
    name?: SortOrder
    site?: SortOrderInput | SortOrder
    description?: SortOrderInput | SortOrder
    created_at?: SortOrderInput | SortOrder
    created_by?: SortOrderInput | SortOrder
    updated_by?: SortOrderInput | SortOrder
    truck?: truckOrderByRelationAggregateInput
  }

  export type fleet_groupWhereUniqueInput = Prisma.AtLeast<{
    id?: string
    AND?: fleet_groupWhereInput | fleet_groupWhereInput[]
    OR?: fleet_groupWhereInput[]
    NOT?: fleet_groupWhereInput | fleet_groupWhereInput[]
    name?: StringFilter<"fleet_group"> | string
    site?: StringNullableFilter<"fleet_group"> | string | null
    description?: StringNullableFilter<"fleet_group"> | string | null
    created_at?: DateTimeNullableFilter<"fleet_group"> | Date | string | null
    created_by?: UuidNullableFilter<"fleet_group"> | string | null
    updated_by?: UuidNullableFilter<"fleet_group"> | string | null
    truck?: TruckListRelationFilter
  }, "id">

  export type fleet_groupOrderByWithAggregationInput = {
    id?: SortOrder
    name?: SortOrder
    site?: SortOrderInput | SortOrder
    description?: SortOrderInput | SortOrder
    created_at?: SortOrderInput | SortOrder
    created_by?: SortOrderInput | SortOrder
    updated_by?: SortOrderInput | SortOrder
    _count?: fleet_groupCountOrderByAggregateInput
    _max?: fleet_groupMaxOrderByAggregateInput
    _min?: fleet_groupMinOrderByAggregateInput
  }

  export type fleet_groupScalarWhereWithAggregatesInput = {
    AND?: fleet_groupScalarWhereWithAggregatesInput | fleet_groupScalarWhereWithAggregatesInput[]
    OR?: fleet_groupScalarWhereWithAggregatesInput[]
    NOT?: fleet_groupScalarWhereWithAggregatesInput | fleet_groupScalarWhereWithAggregatesInput[]
    id?: UuidWithAggregatesFilter<"fleet_group"> | string
    name?: StringWithAggregatesFilter<"fleet_group"> | string
    site?: StringNullableWithAggregatesFilter<"fleet_group"> | string | null
    description?: StringNullableWithAggregatesFilter<"fleet_group"> | string | null
    created_at?: DateTimeNullableWithAggregatesFilter<"fleet_group"> | Date | string | null
    created_by?: UuidNullableWithAggregatesFilter<"fleet_group"> | string | null
    updated_by?: UuidNullableWithAggregatesFilter<"fleet_group"> | string | null
  }

  export type fuel_level_eventWhereInput = {
    AND?: fuel_level_eventWhereInput | fuel_level_eventWhereInput[]
    OR?: fuel_level_eventWhereInput[]
    NOT?: fuel_level_eventWhereInput | fuel_level_eventWhereInput[]
    id?: UuidFilter<"fuel_level_event"> | string
    truck_id?: UuidFilter<"fuel_level_event"> | string
    fuel_percent?: FloatNullableFilter<"fuel_level_event"> | number | null
    changed_at?: DateTimeFilter<"fuel_level_event"> | Date | string
    source?: StringNullableFilter<"fuel_level_event"> | string | null
    created_by?: UuidNullableFilter<"fuel_level_event"> | string | null
    truck?: XOR<TruckRelationFilter, truckWhereInput>
  }

  export type fuel_level_eventOrderByWithRelationInput = {
    id?: SortOrder
    truck_id?: SortOrder
    fuel_percent?: SortOrderInput | SortOrder
    changed_at?: SortOrder
    source?: SortOrderInput | SortOrder
    created_by?: SortOrderInput | SortOrder
    truck?: truckOrderByWithRelationInput
  }

  export type fuel_level_eventWhereUniqueInput = Prisma.AtLeast<{
    id?: string
    AND?: fuel_level_eventWhereInput | fuel_level_eventWhereInput[]
    OR?: fuel_level_eventWhereInput[]
    NOT?: fuel_level_eventWhereInput | fuel_level_eventWhereInput[]
    truck_id?: UuidFilter<"fuel_level_event"> | string
    fuel_percent?: FloatNullableFilter<"fuel_level_event"> | number | null
    changed_at?: DateTimeFilter<"fuel_level_event"> | Date | string
    source?: StringNullableFilter<"fuel_level_event"> | string | null
    created_by?: UuidNullableFilter<"fuel_level_event"> | string | null
    truck?: XOR<TruckRelationFilter, truckWhereInput>
  }, "id">

  export type fuel_level_eventOrderByWithAggregationInput = {
    id?: SortOrder
    truck_id?: SortOrder
    fuel_percent?: SortOrderInput | SortOrder
    changed_at?: SortOrder
    source?: SortOrderInput | SortOrder
    created_by?: SortOrderInput | SortOrder
    _count?: fuel_level_eventCountOrderByAggregateInput
    _avg?: fuel_level_eventAvgOrderByAggregateInput
    _max?: fuel_level_eventMaxOrderByAggregateInput
    _min?: fuel_level_eventMinOrderByAggregateInput
    _sum?: fuel_level_eventSumOrderByAggregateInput
  }

  export type fuel_level_eventScalarWhereWithAggregatesInput = {
    AND?: fuel_level_eventScalarWhereWithAggregatesInput | fuel_level_eventScalarWhereWithAggregatesInput[]
    OR?: fuel_level_eventScalarWhereWithAggregatesInput[]
    NOT?: fuel_level_eventScalarWhereWithAggregatesInput | fuel_level_eventScalarWhereWithAggregatesInput[]
    id?: UuidWithAggregatesFilter<"fuel_level_event"> | string
    truck_id?: UuidWithAggregatesFilter<"fuel_level_event"> | string
    fuel_percent?: FloatNullableWithAggregatesFilter<"fuel_level_event"> | number | null
    changed_at?: DateTimeWithAggregatesFilter<"fuel_level_event"> | Date | string
    source?: StringNullableWithAggregatesFilter<"fuel_level_event"> | string | null
    created_by?: UuidNullableWithAggregatesFilter<"fuel_level_event"> | string | null
  }

  export type geofenceWhereInput = {
    AND?: geofenceWhereInput | geofenceWhereInput[]
    OR?: geofenceWhereInput[]
    NOT?: geofenceWhereInput | geofenceWhereInput[]
    id?: UuidFilter<"geofence"> | string
    name?: StringFilter<"geofence"> | string
    created_by?: UuidNullableFilter<"geofence"> | string | null
    created_at?: DateTimeNullableFilter<"geofence"> | Date | string | null
  }

  export type geofenceOrderByWithRelationInput = {
    id?: SortOrder
    name?: SortOrder
    created_by?: SortOrderInput | SortOrder
    created_at?: SortOrderInput | SortOrder
  }

  export type geofenceWhereUniqueInput = Prisma.AtLeast<{
    id?: string
    AND?: geofenceWhereInput | geofenceWhereInput[]
    OR?: geofenceWhereInput[]
    NOT?: geofenceWhereInput | geofenceWhereInput[]
    name?: StringFilter<"geofence"> | string
    created_by?: UuidNullableFilter<"geofence"> | string | null
    created_at?: DateTimeNullableFilter<"geofence"> | Date | string | null
  }, "id">

  export type geofenceOrderByWithAggregationInput = {
    id?: SortOrder
    name?: SortOrder
    created_by?: SortOrderInput | SortOrder
    created_at?: SortOrderInput | SortOrder
    _count?: geofenceCountOrderByAggregateInput
    _max?: geofenceMaxOrderByAggregateInput
    _min?: geofenceMinOrderByAggregateInput
  }

  export type geofenceScalarWhereWithAggregatesInput = {
    AND?: geofenceScalarWhereWithAggregatesInput | geofenceScalarWhereWithAggregatesInput[]
    OR?: geofenceScalarWhereWithAggregatesInput[]
    NOT?: geofenceScalarWhereWithAggregatesInput | geofenceScalarWhereWithAggregatesInput[]
    id?: UuidWithAggregatesFilter<"geofence"> | string
    name?: StringWithAggregatesFilter<"geofence"> | string
    created_by?: UuidNullableWithAggregatesFilter<"geofence"> | string | null
    created_at?: DateTimeNullableWithAggregatesFilter<"geofence"> | Date | string | null
  }

  export type gps_positionWhereInput = {
    AND?: gps_positionWhereInput | gps_positionWhereInput[]
    OR?: gps_positionWhereInput[]
    NOT?: gps_positionWhereInput | gps_positionWhereInput[]
    id?: BigIntFilter<"gps_position"> | bigint | number
    device_id?: UuidNullableFilter<"gps_position"> | string | null
    truck_id?: UuidFilter<"gps_position"> | string
    ts?: DateTimeFilter<"gps_position"> | Date | string
    speed_kph?: FloatNullableFilter<"gps_position"> | number | null
    heading_deg?: FloatNullableFilter<"gps_position"> | number | null
    hdop?: FloatNullableFilter<"gps_position"> | number | null
    source?: StringNullableFilter<"gps_position"> | string | null
    device?: XOR<DeviceNullableRelationFilter, deviceWhereInput> | null
    truck?: XOR<TruckRelationFilter, truckWhereInput>
  }

  export type gps_positionOrderByWithRelationInput = {
    id?: SortOrder
    device_id?: SortOrderInput | SortOrder
    truck_id?: SortOrder
    ts?: SortOrder
    speed_kph?: SortOrderInput | SortOrder
    heading_deg?: SortOrderInput | SortOrder
    hdop?: SortOrderInput | SortOrder
    source?: SortOrderInput | SortOrder
    device?: deviceOrderByWithRelationInput
    truck?: truckOrderByWithRelationInput
  }

  export type gps_positionWhereUniqueInput = Prisma.AtLeast<{
    id_ts?: gps_positionIdTsCompoundUniqueInput
    AND?: gps_positionWhereInput | gps_positionWhereInput[]
    OR?: gps_positionWhereInput[]
    NOT?: gps_positionWhereInput | gps_positionWhereInput[]
    id?: BigIntFilter<"gps_position"> | bigint | number
    device_id?: UuidNullableFilter<"gps_position"> | string | null
    truck_id?: UuidFilter<"gps_position"> | string
    ts?: DateTimeFilter<"gps_position"> | Date | string
    speed_kph?: FloatNullableFilter<"gps_position"> | number | null
    heading_deg?: FloatNullableFilter<"gps_position"> | number | null
    hdop?: FloatNullableFilter<"gps_position"> | number | null
    source?: StringNullableFilter<"gps_position"> | string | null
    device?: XOR<DeviceNullableRelationFilter, deviceWhereInput> | null
    truck?: XOR<TruckRelationFilter, truckWhereInput>
  }, "id_ts">

  export type gps_positionOrderByWithAggregationInput = {
    id?: SortOrder
    device_id?: SortOrderInput | SortOrder
    truck_id?: SortOrder
    ts?: SortOrder
    speed_kph?: SortOrderInput | SortOrder
    heading_deg?: SortOrderInput | SortOrder
    hdop?: SortOrderInput | SortOrder
    source?: SortOrderInput | SortOrder
    _count?: gps_positionCountOrderByAggregateInput
    _avg?: gps_positionAvgOrderByAggregateInput
    _max?: gps_positionMaxOrderByAggregateInput
    _min?: gps_positionMinOrderByAggregateInput
    _sum?: gps_positionSumOrderByAggregateInput
  }

  export type gps_positionScalarWhereWithAggregatesInput = {
    AND?: gps_positionScalarWhereWithAggregatesInput | gps_positionScalarWhereWithAggregatesInput[]
    OR?: gps_positionScalarWhereWithAggregatesInput[]
    NOT?: gps_positionScalarWhereWithAggregatesInput | gps_positionScalarWhereWithAggregatesInput[]
    id?: BigIntWithAggregatesFilter<"gps_position"> | bigint | number
    device_id?: UuidNullableWithAggregatesFilter<"gps_position"> | string | null
    truck_id?: UuidWithAggregatesFilter<"gps_position"> | string
    ts?: DateTimeWithAggregatesFilter<"gps_position"> | Date | string
    speed_kph?: FloatNullableWithAggregatesFilter<"gps_position"> | number | null
    heading_deg?: FloatNullableWithAggregatesFilter<"gps_position"> | number | null
    hdop?: FloatNullableWithAggregatesFilter<"gps_position"> | number | null
    source?: StringNullableWithAggregatesFilter<"gps_position"> | string | null
  }

  export type hub_temperature_eventWhereInput = {
    AND?: hub_temperature_eventWhereInput | hub_temperature_eventWhereInput[]
    OR?: hub_temperature_eventWhereInput[]
    NOT?: hub_temperature_eventWhereInput | hub_temperature_eventWhereInput[]
    id?: UuidFilter<"hub_temperature_event"> | string
    device_id?: UuidFilter<"hub_temperature_event"> | string
    truck_id?: UuidFilter<"hub_temperature_event"> | string
    hub_no?: IntNullableFilter<"hub_temperature_event"> | number | null
    temp_celsius?: FloatNullableFilter<"hub_temperature_event"> | number | null
    ex_type?: StringNullableFilter<"hub_temperature_event"> | string | null
    battery_level?: IntNullableFilter<"hub_temperature_event"> | number | null
    changed_at?: DateTimeFilter<"hub_temperature_event"> | Date | string
    created_by?: UuidNullableFilter<"hub_temperature_event"> | string | null
    device?: XOR<DeviceRelationFilter, deviceWhereInput>
    truck?: XOR<TruckRelationFilter, truckWhereInput>
  }

  export type hub_temperature_eventOrderByWithRelationInput = {
    id?: SortOrder
    device_id?: SortOrder
    truck_id?: SortOrder
    hub_no?: SortOrderInput | SortOrder
    temp_celsius?: SortOrderInput | SortOrder
    ex_type?: SortOrderInput | SortOrder
    battery_level?: SortOrderInput | SortOrder
    changed_at?: SortOrder
    created_by?: SortOrderInput | SortOrder
    device?: deviceOrderByWithRelationInput
    truck?: truckOrderByWithRelationInput
  }

  export type hub_temperature_eventWhereUniqueInput = Prisma.AtLeast<{
    id?: string
    AND?: hub_temperature_eventWhereInput | hub_temperature_eventWhereInput[]
    OR?: hub_temperature_eventWhereInput[]
    NOT?: hub_temperature_eventWhereInput | hub_temperature_eventWhereInput[]
    device_id?: UuidFilter<"hub_temperature_event"> | string
    truck_id?: UuidFilter<"hub_temperature_event"> | string
    hub_no?: IntNullableFilter<"hub_temperature_event"> | number | null
    temp_celsius?: FloatNullableFilter<"hub_temperature_event"> | number | null
    ex_type?: StringNullableFilter<"hub_temperature_event"> | string | null
    battery_level?: IntNullableFilter<"hub_temperature_event"> | number | null
    changed_at?: DateTimeFilter<"hub_temperature_event"> | Date | string
    created_by?: UuidNullableFilter<"hub_temperature_event"> | string | null
    device?: XOR<DeviceRelationFilter, deviceWhereInput>
    truck?: XOR<TruckRelationFilter, truckWhereInput>
  }, "id">

  export type hub_temperature_eventOrderByWithAggregationInput = {
    id?: SortOrder
    device_id?: SortOrder
    truck_id?: SortOrder
    hub_no?: SortOrderInput | SortOrder
    temp_celsius?: SortOrderInput | SortOrder
    ex_type?: SortOrderInput | SortOrder
    battery_level?: SortOrderInput | SortOrder
    changed_at?: SortOrder
    created_by?: SortOrderInput | SortOrder
    _count?: hub_temperature_eventCountOrderByAggregateInput
    _avg?: hub_temperature_eventAvgOrderByAggregateInput
    _max?: hub_temperature_eventMaxOrderByAggregateInput
    _min?: hub_temperature_eventMinOrderByAggregateInput
    _sum?: hub_temperature_eventSumOrderByAggregateInput
  }

  export type hub_temperature_eventScalarWhereWithAggregatesInput = {
    AND?: hub_temperature_eventScalarWhereWithAggregatesInput | hub_temperature_eventScalarWhereWithAggregatesInput[]
    OR?: hub_temperature_eventScalarWhereWithAggregatesInput[]
    NOT?: hub_temperature_eventScalarWhereWithAggregatesInput | hub_temperature_eventScalarWhereWithAggregatesInput[]
    id?: UuidWithAggregatesFilter<"hub_temperature_event"> | string
    device_id?: UuidWithAggregatesFilter<"hub_temperature_event"> | string
    truck_id?: UuidWithAggregatesFilter<"hub_temperature_event"> | string
    hub_no?: IntNullableWithAggregatesFilter<"hub_temperature_event"> | number | null
    temp_celsius?: FloatNullableWithAggregatesFilter<"hub_temperature_event"> | number | null
    ex_type?: StringNullableWithAggregatesFilter<"hub_temperature_event"> | string | null
    battery_level?: IntNullableWithAggregatesFilter<"hub_temperature_event"> | number | null
    changed_at?: DateTimeWithAggregatesFilter<"hub_temperature_event"> | Date | string
    created_by?: UuidNullableWithAggregatesFilter<"hub_temperature_event"> | string | null
  }

  export type lock_eventWhereInput = {
    AND?: lock_eventWhereInput | lock_eventWhereInput[]
    OR?: lock_eventWhereInput[]
    NOT?: lock_eventWhereInput | lock_eventWhereInput[]
    id?: UuidFilter<"lock_event"> | string
    device_id?: UuidFilter<"lock_event"> | string
    truck_id?: UuidFilter<"lock_event"> | string
    is_lock?: IntNullableFilter<"lock_event"> | number | null
    reported_at?: DateTimeFilter<"lock_event"> | Date | string
    created_by?: UuidNullableFilter<"lock_event"> | string | null
    device?: XOR<DeviceRelationFilter, deviceWhereInput>
    truck?: XOR<TruckRelationFilter, truckWhereInput>
  }

  export type lock_eventOrderByWithRelationInput = {
    id?: SortOrder
    device_id?: SortOrder
    truck_id?: SortOrder
    is_lock?: SortOrderInput | SortOrder
    reported_at?: SortOrder
    created_by?: SortOrderInput | SortOrder
    device?: deviceOrderByWithRelationInput
    truck?: truckOrderByWithRelationInput
  }

  export type lock_eventWhereUniqueInput = Prisma.AtLeast<{
    id?: string
    AND?: lock_eventWhereInput | lock_eventWhereInput[]
    OR?: lock_eventWhereInput[]
    NOT?: lock_eventWhereInput | lock_eventWhereInput[]
    device_id?: UuidFilter<"lock_event"> | string
    truck_id?: UuidFilter<"lock_event"> | string
    is_lock?: IntNullableFilter<"lock_event"> | number | null
    reported_at?: DateTimeFilter<"lock_event"> | Date | string
    created_by?: UuidNullableFilter<"lock_event"> | string | null
    device?: XOR<DeviceRelationFilter, deviceWhereInput>
    truck?: XOR<TruckRelationFilter, truckWhereInput>
  }, "id">

  export type lock_eventOrderByWithAggregationInput = {
    id?: SortOrder
    device_id?: SortOrder
    truck_id?: SortOrder
    is_lock?: SortOrderInput | SortOrder
    reported_at?: SortOrder
    created_by?: SortOrderInput | SortOrder
    _count?: lock_eventCountOrderByAggregateInput
    _avg?: lock_eventAvgOrderByAggregateInput
    _max?: lock_eventMaxOrderByAggregateInput
    _min?: lock_eventMinOrderByAggregateInput
    _sum?: lock_eventSumOrderByAggregateInput
  }

  export type lock_eventScalarWhereWithAggregatesInput = {
    AND?: lock_eventScalarWhereWithAggregatesInput | lock_eventScalarWhereWithAggregatesInput[]
    OR?: lock_eventScalarWhereWithAggregatesInput[]
    NOT?: lock_eventScalarWhereWithAggregatesInput | lock_eventScalarWhereWithAggregatesInput[]
    id?: UuidWithAggregatesFilter<"lock_event"> | string
    device_id?: UuidWithAggregatesFilter<"lock_event"> | string
    truck_id?: UuidWithAggregatesFilter<"lock_event"> | string
    is_lock?: IntNullableWithAggregatesFilter<"lock_event"> | number | null
    reported_at?: DateTimeWithAggregatesFilter<"lock_event"> | Date | string
    created_by?: UuidNullableWithAggregatesFilter<"lock_event"> | string | null
  }

  export type sensorWhereInput = {
    AND?: sensorWhereInput | sensorWhereInput[]
    OR?: sensorWhereInput[]
    NOT?: sensorWhereInput | sensorWhereInput[]
    id?: UuidFilter<"sensor"> | string
    device_id?: UuidFilter<"sensor"> | string
    type?: StringNullableFilter<"sensor"> | string | null
    position_no?: IntFilter<"sensor"> | number
    sn?: StringNullableFilter<"sensor"> | string | null
    installed_at?: DateTimeNullableFilter<"sensor"> | Date | string | null
    removed_at?: DateTimeNullableFilter<"sensor"> | Date | string | null
    created_by?: UuidNullableFilter<"sensor"> | string | null
    updated_by?: UuidNullableFilter<"sensor"> | string | null
    device?: XOR<DeviceRelationFilter, deviceWhereInput>
  }

  export type sensorOrderByWithRelationInput = {
    id?: SortOrder
    device_id?: SortOrder
    type?: SortOrderInput | SortOrder
    position_no?: SortOrder
    sn?: SortOrderInput | SortOrder
    installed_at?: SortOrderInput | SortOrder
    removed_at?: SortOrderInput | SortOrder
    created_by?: SortOrderInput | SortOrder
    updated_by?: SortOrderInput | SortOrder
    device?: deviceOrderByWithRelationInput
  }

  export type sensorWhereUniqueInput = Prisma.AtLeast<{
    id?: string
    sn?: string
    AND?: sensorWhereInput | sensorWhereInput[]
    OR?: sensorWhereInput[]
    NOT?: sensorWhereInput | sensorWhereInput[]
    device_id?: UuidFilter<"sensor"> | string
    type?: StringNullableFilter<"sensor"> | string | null
    position_no?: IntFilter<"sensor"> | number
    installed_at?: DateTimeNullableFilter<"sensor"> | Date | string | null
    removed_at?: DateTimeNullableFilter<"sensor"> | Date | string | null
    created_by?: UuidNullableFilter<"sensor"> | string | null
    updated_by?: UuidNullableFilter<"sensor"> | string | null
    device?: XOR<DeviceRelationFilter, deviceWhereInput>
  }, "id" | "sn">

  export type sensorOrderByWithAggregationInput = {
    id?: SortOrder
    device_id?: SortOrder
    type?: SortOrderInput | SortOrder
    position_no?: SortOrder
    sn?: SortOrderInput | SortOrder
    installed_at?: SortOrderInput | SortOrder
    removed_at?: SortOrderInput | SortOrder
    created_by?: SortOrderInput | SortOrder
    updated_by?: SortOrderInput | SortOrder
    _count?: sensorCountOrderByAggregateInput
    _avg?: sensorAvgOrderByAggregateInput
    _max?: sensorMaxOrderByAggregateInput
    _min?: sensorMinOrderByAggregateInput
    _sum?: sensorSumOrderByAggregateInput
  }

  export type sensorScalarWhereWithAggregatesInput = {
    AND?: sensorScalarWhereWithAggregatesInput | sensorScalarWhereWithAggregatesInput[]
    OR?: sensorScalarWhereWithAggregatesInput[]
    NOT?: sensorScalarWhereWithAggregatesInput | sensorScalarWhereWithAggregatesInput[]
    id?: UuidWithAggregatesFilter<"sensor"> | string
    device_id?: UuidWithAggregatesFilter<"sensor"> | string
    type?: StringNullableWithAggregatesFilter<"sensor"> | string | null
    position_no?: IntWithAggregatesFilter<"sensor"> | number
    sn?: StringNullableWithAggregatesFilter<"sensor"> | string | null
    installed_at?: DateTimeNullableWithAggregatesFilter<"sensor"> | Date | string | null
    removed_at?: DateTimeNullableWithAggregatesFilter<"sensor"> | Date | string | null
    created_by?: UuidNullableWithAggregatesFilter<"sensor"> | string | null
    updated_by?: UuidNullableWithAggregatesFilter<"sensor"> | string | null
  }

  export type sensor_data_rawWhereInput = {
    AND?: sensor_data_rawWhereInput | sensor_data_rawWhereInput[]
    OR?: sensor_data_rawWhereInput[]
    NOT?: sensor_data_rawWhereInput | sensor_data_rawWhereInput[]
    id?: UuidFilter<"sensor_data_raw"> | string
    device_sn?: StringFilter<"sensor_data_raw"> | string
    cmd_type?: StringFilter<"sensor_data_raw"> | string
    truck_id?: UuidNullableFilter<"sensor_data_raw"> | string | null
    tire_no?: IntNullableFilter<"sensor_data_raw"> | number | null
    raw_json?: JsonFilter<"sensor_data_raw">
    processed?: BoolNullableFilter<"sensor_data_raw"> | boolean | null
    received_at?: DateTimeFilter<"sensor_data_raw"> | Date | string
    processed_at?: DateTimeNullableFilter<"sensor_data_raw"> | Date | string | null
    truck?: XOR<TruckNullableRelationFilter, truckWhereInput> | null
    sensor_processing_queue?: Sensor_processing_queueListRelationFilter
  }

  export type sensor_data_rawOrderByWithRelationInput = {
    id?: SortOrder
    device_sn?: SortOrder
    cmd_type?: SortOrder
    truck_id?: SortOrderInput | SortOrder
    tire_no?: SortOrderInput | SortOrder
    raw_json?: SortOrder
    processed?: SortOrderInput | SortOrder
    received_at?: SortOrder
    processed_at?: SortOrderInput | SortOrder
    truck?: truckOrderByWithRelationInput
    sensor_processing_queue?: sensor_processing_queueOrderByRelationAggregateInput
  }

  export type sensor_data_rawWhereUniqueInput = Prisma.AtLeast<{
    id?: string
    AND?: sensor_data_rawWhereInput | sensor_data_rawWhereInput[]
    OR?: sensor_data_rawWhereInput[]
    NOT?: sensor_data_rawWhereInput | sensor_data_rawWhereInput[]
    device_sn?: StringFilter<"sensor_data_raw"> | string
    cmd_type?: StringFilter<"sensor_data_raw"> | string
    truck_id?: UuidNullableFilter<"sensor_data_raw"> | string | null
    tire_no?: IntNullableFilter<"sensor_data_raw"> | number | null
    raw_json?: JsonFilter<"sensor_data_raw">
    processed?: BoolNullableFilter<"sensor_data_raw"> | boolean | null
    received_at?: DateTimeFilter<"sensor_data_raw"> | Date | string
    processed_at?: DateTimeNullableFilter<"sensor_data_raw"> | Date | string | null
    truck?: XOR<TruckNullableRelationFilter, truckWhereInput> | null
    sensor_processing_queue?: Sensor_processing_queueListRelationFilter
  }, "id">

  export type sensor_data_rawOrderByWithAggregationInput = {
    id?: SortOrder
    device_sn?: SortOrder
    cmd_type?: SortOrder
    truck_id?: SortOrderInput | SortOrder
    tire_no?: SortOrderInput | SortOrder
    raw_json?: SortOrder
    processed?: SortOrderInput | SortOrder
    received_at?: SortOrder
    processed_at?: SortOrderInput | SortOrder
    _count?: sensor_data_rawCountOrderByAggregateInput
    _avg?: sensor_data_rawAvgOrderByAggregateInput
    _max?: sensor_data_rawMaxOrderByAggregateInput
    _min?: sensor_data_rawMinOrderByAggregateInput
    _sum?: sensor_data_rawSumOrderByAggregateInput
  }

  export type sensor_data_rawScalarWhereWithAggregatesInput = {
    AND?: sensor_data_rawScalarWhereWithAggregatesInput | sensor_data_rawScalarWhereWithAggregatesInput[]
    OR?: sensor_data_rawScalarWhereWithAggregatesInput[]
    NOT?: sensor_data_rawScalarWhereWithAggregatesInput | sensor_data_rawScalarWhereWithAggregatesInput[]
    id?: UuidWithAggregatesFilter<"sensor_data_raw"> | string
    device_sn?: StringWithAggregatesFilter<"sensor_data_raw"> | string
    cmd_type?: StringWithAggregatesFilter<"sensor_data_raw"> | string
    truck_id?: UuidNullableWithAggregatesFilter<"sensor_data_raw"> | string | null
    tire_no?: IntNullableWithAggregatesFilter<"sensor_data_raw"> | number | null
    raw_json?: JsonWithAggregatesFilter<"sensor_data_raw">
    processed?: BoolNullableWithAggregatesFilter<"sensor_data_raw"> | boolean | null
    received_at?: DateTimeWithAggregatesFilter<"sensor_data_raw"> | Date | string
    processed_at?: DateTimeNullableWithAggregatesFilter<"sensor_data_raw"> | Date | string | null
  }

  export type sensor_processing_queueWhereInput = {
    AND?: sensor_processing_queueWhereInput | sensor_processing_queueWhereInput[]
    OR?: sensor_processing_queueWhereInput[]
    NOT?: sensor_processing_queueWhereInput | sensor_processing_queueWhereInput[]
    id?: UuidFilter<"sensor_processing_queue"> | string
    raw_data_id?: UuidNullableFilter<"sensor_processing_queue"> | string | null
    priority?: IntNullableFilter<"sensor_processing_queue"> | number | null
    attempts?: IntNullableFilter<"sensor_processing_queue"> | number | null
    max_attempts?: IntNullableFilter<"sensor_processing_queue"> | number | null
    error_message?: StringNullableFilter<"sensor_processing_queue"> | string | null
    created_at?: DateTimeNullableFilter<"sensor_processing_queue"> | Date | string | null
    processed_at?: DateTimeNullableFilter<"sensor_processing_queue"> | Date | string | null
    sensor_data_raw?: XOR<Sensor_data_rawNullableRelationFilter, sensor_data_rawWhereInput> | null
  }

  export type sensor_processing_queueOrderByWithRelationInput = {
    id?: SortOrder
    raw_data_id?: SortOrderInput | SortOrder
    priority?: SortOrderInput | SortOrder
    attempts?: SortOrderInput | SortOrder
    max_attempts?: SortOrderInput | SortOrder
    error_message?: SortOrderInput | SortOrder
    created_at?: SortOrderInput | SortOrder
    processed_at?: SortOrderInput | SortOrder
    sensor_data_raw?: sensor_data_rawOrderByWithRelationInput
  }

  export type sensor_processing_queueWhereUniqueInput = Prisma.AtLeast<{
    id?: string
    AND?: sensor_processing_queueWhereInput | sensor_processing_queueWhereInput[]
    OR?: sensor_processing_queueWhereInput[]
    NOT?: sensor_processing_queueWhereInput | sensor_processing_queueWhereInput[]
    raw_data_id?: UuidNullableFilter<"sensor_processing_queue"> | string | null
    priority?: IntNullableFilter<"sensor_processing_queue"> | number | null
    attempts?: IntNullableFilter<"sensor_processing_queue"> | number | null
    max_attempts?: IntNullableFilter<"sensor_processing_queue"> | number | null
    error_message?: StringNullableFilter<"sensor_processing_queue"> | string | null
    created_at?: DateTimeNullableFilter<"sensor_processing_queue"> | Date | string | null
    processed_at?: DateTimeNullableFilter<"sensor_processing_queue"> | Date | string | null
    sensor_data_raw?: XOR<Sensor_data_rawNullableRelationFilter, sensor_data_rawWhereInput> | null
  }, "id">

  export type sensor_processing_queueOrderByWithAggregationInput = {
    id?: SortOrder
    raw_data_id?: SortOrderInput | SortOrder
    priority?: SortOrderInput | SortOrder
    attempts?: SortOrderInput | SortOrder
    max_attempts?: SortOrderInput | SortOrder
    error_message?: SortOrderInput | SortOrder
    created_at?: SortOrderInput | SortOrder
    processed_at?: SortOrderInput | SortOrder
    _count?: sensor_processing_queueCountOrderByAggregateInput
    _avg?: sensor_processing_queueAvgOrderByAggregateInput
    _max?: sensor_processing_queueMaxOrderByAggregateInput
    _min?: sensor_processing_queueMinOrderByAggregateInput
    _sum?: sensor_processing_queueSumOrderByAggregateInput
  }

  export type sensor_processing_queueScalarWhereWithAggregatesInput = {
    AND?: sensor_processing_queueScalarWhereWithAggregatesInput | sensor_processing_queueScalarWhereWithAggregatesInput[]
    OR?: sensor_processing_queueScalarWhereWithAggregatesInput[]
    NOT?: sensor_processing_queueScalarWhereWithAggregatesInput | sensor_processing_queueScalarWhereWithAggregatesInput[]
    id?: UuidWithAggregatesFilter<"sensor_processing_queue"> | string
    raw_data_id?: UuidNullableWithAggregatesFilter<"sensor_processing_queue"> | string | null
    priority?: IntNullableWithAggregatesFilter<"sensor_processing_queue"> | number | null
    attempts?: IntNullableWithAggregatesFilter<"sensor_processing_queue"> | number | null
    max_attempts?: IntNullableWithAggregatesFilter<"sensor_processing_queue"> | number | null
    error_message?: StringNullableWithAggregatesFilter<"sensor_processing_queue"> | string | null
    created_at?: DateTimeNullableWithAggregatesFilter<"sensor_processing_queue"> | Date | string | null
    processed_at?: DateTimeNullableWithAggregatesFilter<"sensor_processing_queue"> | Date | string | null
  }

  export type spatial_ref_sysWhereInput = {
    AND?: spatial_ref_sysWhereInput | spatial_ref_sysWhereInput[]
    OR?: spatial_ref_sysWhereInput[]
    NOT?: spatial_ref_sysWhereInput | spatial_ref_sysWhereInput[]
    srid?: IntFilter<"spatial_ref_sys"> | number
    auth_name?: StringNullableFilter<"spatial_ref_sys"> | string | null
    auth_srid?: IntNullableFilter<"spatial_ref_sys"> | number | null
    srtext?: StringNullableFilter<"spatial_ref_sys"> | string | null
    proj4text?: StringNullableFilter<"spatial_ref_sys"> | string | null
  }

  export type spatial_ref_sysOrderByWithRelationInput = {
    srid?: SortOrder
    auth_name?: SortOrderInput | SortOrder
    auth_srid?: SortOrderInput | SortOrder
    srtext?: SortOrderInput | SortOrder
    proj4text?: SortOrderInput | SortOrder
  }

  export type spatial_ref_sysWhereUniqueInput = Prisma.AtLeast<{
    srid?: number
    AND?: spatial_ref_sysWhereInput | spatial_ref_sysWhereInput[]
    OR?: spatial_ref_sysWhereInput[]
    NOT?: spatial_ref_sysWhereInput | spatial_ref_sysWhereInput[]
    auth_name?: StringNullableFilter<"spatial_ref_sys"> | string | null
    auth_srid?: IntNullableFilter<"spatial_ref_sys"> | number | null
    srtext?: StringNullableFilter<"spatial_ref_sys"> | string | null
    proj4text?: StringNullableFilter<"spatial_ref_sys"> | string | null
  }, "srid">

  export type spatial_ref_sysOrderByWithAggregationInput = {
    srid?: SortOrder
    auth_name?: SortOrderInput | SortOrder
    auth_srid?: SortOrderInput | SortOrder
    srtext?: SortOrderInput | SortOrder
    proj4text?: SortOrderInput | SortOrder
    _count?: spatial_ref_sysCountOrderByAggregateInput
    _avg?: spatial_ref_sysAvgOrderByAggregateInput
    _max?: spatial_ref_sysMaxOrderByAggregateInput
    _min?: spatial_ref_sysMinOrderByAggregateInput
    _sum?: spatial_ref_sysSumOrderByAggregateInput
  }

  export type spatial_ref_sysScalarWhereWithAggregatesInput = {
    AND?: spatial_ref_sysScalarWhereWithAggregatesInput | spatial_ref_sysScalarWhereWithAggregatesInput[]
    OR?: spatial_ref_sysScalarWhereWithAggregatesInput[]
    NOT?: spatial_ref_sysScalarWhereWithAggregatesInput | spatial_ref_sysScalarWhereWithAggregatesInput[]
    srid?: IntWithAggregatesFilter<"spatial_ref_sys"> | number
    auth_name?: StringNullableWithAggregatesFilter<"spatial_ref_sys"> | string | null
    auth_srid?: IntNullableWithAggregatesFilter<"spatial_ref_sys"> | number | null
    srtext?: StringNullableWithAggregatesFilter<"spatial_ref_sys"> | string | null
    proj4text?: StringNullableWithAggregatesFilter<"spatial_ref_sys"> | string | null
  }

  export type speed_eventWhereInput = {
    AND?: speed_eventWhereInput | speed_eventWhereInput[]
    OR?: speed_eventWhereInput[]
    NOT?: speed_eventWhereInput | speed_eventWhereInput[]
    id?: UuidFilter<"speed_event"> | string
    truck_id?: UuidFilter<"speed_event"> | string
    speed_kph?: FloatNullableFilter<"speed_event"> | number | null
    changed_at?: DateTimeFilter<"speed_event"> | Date | string
    source?: StringNullableFilter<"speed_event"> | string | null
    created_by?: UuidNullableFilter<"speed_event"> | string | null
    truck?: XOR<TruckRelationFilter, truckWhereInput>
  }

  export type speed_eventOrderByWithRelationInput = {
    id?: SortOrder
    truck_id?: SortOrder
    speed_kph?: SortOrderInput | SortOrder
    changed_at?: SortOrder
    source?: SortOrderInput | SortOrder
    created_by?: SortOrderInput | SortOrder
    truck?: truckOrderByWithRelationInput
  }

  export type speed_eventWhereUniqueInput = Prisma.AtLeast<{
    id?: string
    AND?: speed_eventWhereInput | speed_eventWhereInput[]
    OR?: speed_eventWhereInput[]
    NOT?: speed_eventWhereInput | speed_eventWhereInput[]
    truck_id?: UuidFilter<"speed_event"> | string
    speed_kph?: FloatNullableFilter<"speed_event"> | number | null
    changed_at?: DateTimeFilter<"speed_event"> | Date | string
    source?: StringNullableFilter<"speed_event"> | string | null
    created_by?: UuidNullableFilter<"speed_event"> | string | null
    truck?: XOR<TruckRelationFilter, truckWhereInput>
  }, "id">

  export type speed_eventOrderByWithAggregationInput = {
    id?: SortOrder
    truck_id?: SortOrder
    speed_kph?: SortOrderInput | SortOrder
    changed_at?: SortOrder
    source?: SortOrderInput | SortOrder
    created_by?: SortOrderInput | SortOrder
    _count?: speed_eventCountOrderByAggregateInput
    _avg?: speed_eventAvgOrderByAggregateInput
    _max?: speed_eventMaxOrderByAggregateInput
    _min?: speed_eventMinOrderByAggregateInput
    _sum?: speed_eventSumOrderByAggregateInput
  }

  export type speed_eventScalarWhereWithAggregatesInput = {
    AND?: speed_eventScalarWhereWithAggregatesInput | speed_eventScalarWhereWithAggregatesInput[]
    OR?: speed_eventScalarWhereWithAggregatesInput[]
    NOT?: speed_eventScalarWhereWithAggregatesInput | speed_eventScalarWhereWithAggregatesInput[]
    id?: UuidWithAggregatesFilter<"speed_event"> | string
    truck_id?: UuidWithAggregatesFilter<"speed_event"> | string
    speed_kph?: FloatNullableWithAggregatesFilter<"speed_event"> | number | null
    changed_at?: DateTimeWithAggregatesFilter<"speed_event"> | Date | string
    source?: StringNullableWithAggregatesFilter<"speed_event"> | string | null
    created_by?: UuidNullableWithAggregatesFilter<"speed_event"> | string | null
  }

  export type tire_error_codeWhereInput = {
    AND?: tire_error_codeWhereInput | tire_error_codeWhereInput[]
    OR?: tire_error_codeWhereInput[]
    NOT?: tire_error_codeWhereInput | tire_error_codeWhereInput[]
    code?: IntFilter<"tire_error_code"> | number
    description?: StringNullableFilter<"tire_error_code"> | string | null
  }

  export type tire_error_codeOrderByWithRelationInput = {
    code?: SortOrder
    description?: SortOrderInput | SortOrder
  }

  export type tire_error_codeWhereUniqueInput = Prisma.AtLeast<{
    code?: number
    AND?: tire_error_codeWhereInput | tire_error_codeWhereInput[]
    OR?: tire_error_codeWhereInput[]
    NOT?: tire_error_codeWhereInput | tire_error_codeWhereInput[]
    description?: StringNullableFilter<"tire_error_code"> | string | null
  }, "code">

  export type tire_error_codeOrderByWithAggregationInput = {
    code?: SortOrder
    description?: SortOrderInput | SortOrder
    _count?: tire_error_codeCountOrderByAggregateInput
    _avg?: tire_error_codeAvgOrderByAggregateInput
    _max?: tire_error_codeMaxOrderByAggregateInput
    _min?: tire_error_codeMinOrderByAggregateInput
    _sum?: tire_error_codeSumOrderByAggregateInput
  }

  export type tire_error_codeScalarWhereWithAggregatesInput = {
    AND?: tire_error_codeScalarWhereWithAggregatesInput | tire_error_codeScalarWhereWithAggregatesInput[]
    OR?: tire_error_codeScalarWhereWithAggregatesInput[]
    NOT?: tire_error_codeScalarWhereWithAggregatesInput | tire_error_codeScalarWhereWithAggregatesInput[]
    code?: IntWithAggregatesFilter<"tire_error_code"> | number
    description?: StringNullableWithAggregatesFilter<"tire_error_code"> | string | null
  }

  export type tire_position_configWhereInput = {
    AND?: tire_position_configWhereInput | tire_position_configWhereInput[]
    OR?: tire_position_configWhereInput[]
    NOT?: tire_position_configWhereInput | tire_position_configWhereInput[]
    id?: UuidFilter<"tire_position_config"> | string
    truck_id?: UuidNullableFilter<"tire_position_config"> | string | null
    tire_no?: IntFilter<"tire_position_config"> | number
    position_name?: StringNullableFilter<"tire_position_config"> | string | null
    wheel_type?: StringNullableFilter<"tire_position_config"> | string | null
    is_active?: BoolNullableFilter<"tire_position_config"> | boolean | null
    created_at?: DateTimeNullableFilter<"tire_position_config"> | Date | string | null
    truck?: XOR<TruckNullableRelationFilter, truckWhereInput> | null
  }

  export type tire_position_configOrderByWithRelationInput = {
    id?: SortOrder
    truck_id?: SortOrderInput | SortOrder
    tire_no?: SortOrder
    position_name?: SortOrderInput | SortOrder
    wheel_type?: SortOrderInput | SortOrder
    is_active?: SortOrderInput | SortOrder
    created_at?: SortOrderInput | SortOrder
    truck?: truckOrderByWithRelationInput
  }

  export type tire_position_configWhereUniqueInput = Prisma.AtLeast<{
    id?: string
    truck_id_tire_no?: tire_position_configTruck_idTire_noCompoundUniqueInput
    AND?: tire_position_configWhereInput | tire_position_configWhereInput[]
    OR?: tire_position_configWhereInput[]
    NOT?: tire_position_configWhereInput | tire_position_configWhereInput[]
    truck_id?: UuidNullableFilter<"tire_position_config"> | string | null
    tire_no?: IntFilter<"tire_position_config"> | number
    position_name?: StringNullableFilter<"tire_position_config"> | string | null
    wheel_type?: StringNullableFilter<"tire_position_config"> | string | null
    is_active?: BoolNullableFilter<"tire_position_config"> | boolean | null
    created_at?: DateTimeNullableFilter<"tire_position_config"> | Date | string | null
    truck?: XOR<TruckNullableRelationFilter, truckWhereInput> | null
  }, "id" | "truck_id_tire_no">

  export type tire_position_configOrderByWithAggregationInput = {
    id?: SortOrder
    truck_id?: SortOrderInput | SortOrder
    tire_no?: SortOrder
    position_name?: SortOrderInput | SortOrder
    wheel_type?: SortOrderInput | SortOrder
    is_active?: SortOrderInput | SortOrder
    created_at?: SortOrderInput | SortOrder
    _count?: tire_position_configCountOrderByAggregateInput
    _avg?: tire_position_configAvgOrderByAggregateInput
    _max?: tire_position_configMaxOrderByAggregateInput
    _min?: tire_position_configMinOrderByAggregateInput
    _sum?: tire_position_configSumOrderByAggregateInput
  }

  export type tire_position_configScalarWhereWithAggregatesInput = {
    AND?: tire_position_configScalarWhereWithAggregatesInput | tire_position_configScalarWhereWithAggregatesInput[]
    OR?: tire_position_configScalarWhereWithAggregatesInput[]
    NOT?: tire_position_configScalarWhereWithAggregatesInput | tire_position_configScalarWhereWithAggregatesInput[]
    id?: UuidWithAggregatesFilter<"tire_position_config"> | string
    truck_id?: UuidNullableWithAggregatesFilter<"tire_position_config"> | string | null
    tire_no?: IntWithAggregatesFilter<"tire_position_config"> | number
    position_name?: StringNullableWithAggregatesFilter<"tire_position_config"> | string | null
    wheel_type?: StringNullableWithAggregatesFilter<"tire_position_config"> | string | null
    is_active?: BoolNullableWithAggregatesFilter<"tire_position_config"> | boolean | null
    created_at?: DateTimeNullableWithAggregatesFilter<"tire_position_config"> | Date | string | null
  }

  export type tire_pressure_eventWhereInput = {
    AND?: tire_pressure_eventWhereInput | tire_pressure_eventWhereInput[]
    OR?: tire_pressure_eventWhereInput[]
    NOT?: tire_pressure_eventWhereInput | tire_pressure_eventWhereInput[]
    id?: UuidFilter<"tire_pressure_event"> | string
    device_id?: UuidFilter<"tire_pressure_event"> | string
    truck_id?: UuidFilter<"tire_pressure_event"> | string
    tire_no?: IntFilter<"tire_pressure_event"> | number
    pressure_kpa?: FloatNullableFilter<"tire_pressure_event"> | number | null
    temp_celsius?: FloatNullableFilter<"tire_pressure_event"> | number | null
    ex_type?: StringNullableFilter<"tire_pressure_event"> | string | null
    battery_level?: IntNullableFilter<"tire_pressure_event"> | number | null
    changed_at?: DateTimeFilter<"tire_pressure_event"> | Date | string
    created_by?: UuidNullableFilter<"tire_pressure_event"> | string | null
    device?: XOR<DeviceRelationFilter, deviceWhereInput>
    truck?: XOR<TruckRelationFilter, truckWhereInput>
  }

  export type tire_pressure_eventOrderByWithRelationInput = {
    id?: SortOrder
    device_id?: SortOrder
    truck_id?: SortOrder
    tire_no?: SortOrder
    pressure_kpa?: SortOrderInput | SortOrder
    temp_celsius?: SortOrderInput | SortOrder
    ex_type?: SortOrderInput | SortOrder
    battery_level?: SortOrderInput | SortOrder
    changed_at?: SortOrder
    created_by?: SortOrderInput | SortOrder
    device?: deviceOrderByWithRelationInput
    truck?: truckOrderByWithRelationInput
  }

  export type tire_pressure_eventWhereUniqueInput = Prisma.AtLeast<{
    id?: string
    AND?: tire_pressure_eventWhereInput | tire_pressure_eventWhereInput[]
    OR?: tire_pressure_eventWhereInput[]
    NOT?: tire_pressure_eventWhereInput | tire_pressure_eventWhereInput[]
    device_id?: UuidFilter<"tire_pressure_event"> | string
    truck_id?: UuidFilter<"tire_pressure_event"> | string
    tire_no?: IntFilter<"tire_pressure_event"> | number
    pressure_kpa?: FloatNullableFilter<"tire_pressure_event"> | number | null
    temp_celsius?: FloatNullableFilter<"tire_pressure_event"> | number | null
    ex_type?: StringNullableFilter<"tire_pressure_event"> | string | null
    battery_level?: IntNullableFilter<"tire_pressure_event"> | number | null
    changed_at?: DateTimeFilter<"tire_pressure_event"> | Date | string
    created_by?: UuidNullableFilter<"tire_pressure_event"> | string | null
    device?: XOR<DeviceRelationFilter, deviceWhereInput>
    truck?: XOR<TruckRelationFilter, truckWhereInput>
  }, "id">

  export type tire_pressure_eventOrderByWithAggregationInput = {
    id?: SortOrder
    device_id?: SortOrder
    truck_id?: SortOrder
    tire_no?: SortOrder
    pressure_kpa?: SortOrderInput | SortOrder
    temp_celsius?: SortOrderInput | SortOrder
    ex_type?: SortOrderInput | SortOrder
    battery_level?: SortOrderInput | SortOrder
    changed_at?: SortOrder
    created_by?: SortOrderInput | SortOrder
    _count?: tire_pressure_eventCountOrderByAggregateInput
    _avg?: tire_pressure_eventAvgOrderByAggregateInput
    _max?: tire_pressure_eventMaxOrderByAggregateInput
    _min?: tire_pressure_eventMinOrderByAggregateInput
    _sum?: tire_pressure_eventSumOrderByAggregateInput
  }

  export type tire_pressure_eventScalarWhereWithAggregatesInput = {
    AND?: tire_pressure_eventScalarWhereWithAggregatesInput | tire_pressure_eventScalarWhereWithAggregatesInput[]
    OR?: tire_pressure_eventScalarWhereWithAggregatesInput[]
    NOT?: tire_pressure_eventScalarWhereWithAggregatesInput | tire_pressure_eventScalarWhereWithAggregatesInput[]
    id?: UuidWithAggregatesFilter<"tire_pressure_event"> | string
    device_id?: UuidWithAggregatesFilter<"tire_pressure_event"> | string
    truck_id?: UuidWithAggregatesFilter<"tire_pressure_event"> | string
    tire_no?: IntWithAggregatesFilter<"tire_pressure_event"> | number
    pressure_kpa?: FloatNullableWithAggregatesFilter<"tire_pressure_event"> | number | null
    temp_celsius?: FloatNullableWithAggregatesFilter<"tire_pressure_event"> | number | null
    ex_type?: StringNullableWithAggregatesFilter<"tire_pressure_event"> | string | null
    battery_level?: IntNullableWithAggregatesFilter<"tire_pressure_event"> | number | null
    changed_at?: DateTimeWithAggregatesFilter<"tire_pressure_event"> | Date | string
    created_by?: UuidNullableWithAggregatesFilter<"tire_pressure_event"> | string | null
  }

  export type tripWhereInput = {
    AND?: tripWhereInput | tripWhereInput[]
    OR?: tripWhereInput[]
    NOT?: tripWhereInput | tripWhereInput[]
    id?: UuidFilter<"trip"> | string
    truck_id?: UuidFilter<"trip"> | string
    start_ts?: DateTimeFilter<"trip"> | Date | string
    end_ts?: DateTimeNullableFilter<"trip"> | Date | string | null
    truck?: XOR<TruckRelationFilter, truckWhereInput>
  }

  export type tripOrderByWithRelationInput = {
    id?: SortOrder
    truck_id?: SortOrder
    start_ts?: SortOrder
    end_ts?: SortOrderInput | SortOrder
    truck?: truckOrderByWithRelationInput
  }

  export type tripWhereUniqueInput = Prisma.AtLeast<{
    id?: string
    AND?: tripWhereInput | tripWhereInput[]
    OR?: tripWhereInput[]
    NOT?: tripWhereInput | tripWhereInput[]
    truck_id?: UuidFilter<"trip"> | string
    start_ts?: DateTimeFilter<"trip"> | Date | string
    end_ts?: DateTimeNullableFilter<"trip"> | Date | string | null
    truck?: XOR<TruckRelationFilter, truckWhereInput>
  }, "id">

  export type tripOrderByWithAggregationInput = {
    id?: SortOrder
    truck_id?: SortOrder
    start_ts?: SortOrder
    end_ts?: SortOrderInput | SortOrder
    _count?: tripCountOrderByAggregateInput
    _max?: tripMaxOrderByAggregateInput
    _min?: tripMinOrderByAggregateInput
  }

  export type tripScalarWhereWithAggregatesInput = {
    AND?: tripScalarWhereWithAggregatesInput | tripScalarWhereWithAggregatesInput[]
    OR?: tripScalarWhereWithAggregatesInput[]
    NOT?: tripScalarWhereWithAggregatesInput | tripScalarWhereWithAggregatesInput[]
    id?: UuidWithAggregatesFilter<"trip"> | string
    truck_id?: UuidWithAggregatesFilter<"trip"> | string
    start_ts?: DateTimeWithAggregatesFilter<"trip"> | Date | string
    end_ts?: DateTimeNullableWithAggregatesFilter<"trip"> | Date | string | null
  }

  export type truckWhereInput = {
    AND?: truckWhereInput | truckWhereInput[]
    OR?: truckWhereInput[]
    NOT?: truckWhereInput | truckWhereInput[]
    id?: UuidFilter<"truck"> | string
    plate_number?: StringFilter<"truck"> | string
    vin?: StringNullableFilter<"truck"> | string | null
    name?: StringNullableFilter<"truck"> | string | null
    model?: StringNullableFilter<"truck"> | string | null
    year?: IntNullableFilter<"truck"> | number | null
    tire_config?: StringNullableFilter<"truck"> | string | null
    fleet_group_id?: UuidNullableFilter<"truck"> | string | null
    created_at?: DateTimeFilter<"truck"> | Date | string
    created_by?: UuidNullableFilter<"truck"> | string | null
    updated_by?: UuidNullableFilter<"truck"> | string | null
    alert_event?: Alert_eventListRelationFilter
    daily_route?: Daily_routeListRelationFilter
    device?: DeviceListRelationFilter
    device_status_event?: Device_status_eventListRelationFilter
    device_truck_assignment?: Device_truck_assignmentListRelationFilter
    fuel_level_event?: Fuel_level_eventListRelationFilter
    gps_position?: Gps_positionListRelationFilter
    hub_temperature_event?: Hub_temperature_eventListRelationFilter
    lock_event?: Lock_eventListRelationFilter
    sensor_data_raw?: Sensor_data_rawListRelationFilter
    speed_event?: Speed_eventListRelationFilter
    tire_position_config?: Tire_position_configListRelationFilter
    tire_pressure_event?: Tire_pressure_eventListRelationFilter
    trip?: TripListRelationFilter
    fleet_group?: XOR<Fleet_groupNullableRelationFilter, fleet_groupWhereInput> | null
    truck_status_event?: Truck_status_eventListRelationFilter
  }

  export type truckOrderByWithRelationInput = {
    id?: SortOrder
    plate_number?: SortOrder
    vin?: SortOrderInput | SortOrder
    name?: SortOrderInput | SortOrder
    model?: SortOrderInput | SortOrder
    year?: SortOrderInput | SortOrder
    tire_config?: SortOrderInput | SortOrder
    fleet_group_id?: SortOrderInput | SortOrder
    created_at?: SortOrder
    created_by?: SortOrderInput | SortOrder
    updated_by?: SortOrderInput | SortOrder
    alert_event?: alert_eventOrderByRelationAggregateInput
    daily_route?: daily_routeOrderByRelationAggregateInput
    device?: deviceOrderByRelationAggregateInput
    device_status_event?: device_status_eventOrderByRelationAggregateInput
    device_truck_assignment?: device_truck_assignmentOrderByRelationAggregateInput
    fuel_level_event?: fuel_level_eventOrderByRelationAggregateInput
    gps_position?: gps_positionOrderByRelationAggregateInput
    hub_temperature_event?: hub_temperature_eventOrderByRelationAggregateInput
    lock_event?: lock_eventOrderByRelationAggregateInput
    sensor_data_raw?: sensor_data_rawOrderByRelationAggregateInput
    speed_event?: speed_eventOrderByRelationAggregateInput
    tire_position_config?: tire_position_configOrderByRelationAggregateInput
    tire_pressure_event?: tire_pressure_eventOrderByRelationAggregateInput
    trip?: tripOrderByRelationAggregateInput
    fleet_group?: fleet_groupOrderByWithRelationInput
    truck_status_event?: truck_status_eventOrderByRelationAggregateInput
  }

  export type truckWhereUniqueInput = Prisma.AtLeast<{
    id?: string
    plate_number?: string
    vin?: string
    AND?: truckWhereInput | truckWhereInput[]
    OR?: truckWhereInput[]
    NOT?: truckWhereInput | truckWhereInput[]
    name?: StringNullableFilter<"truck"> | string | null
    model?: StringNullableFilter<"truck"> | string | null
    year?: IntNullableFilter<"truck"> | number | null
    tire_config?: StringNullableFilter<"truck"> | string | null
    fleet_group_id?: UuidNullableFilter<"truck"> | string | null
    created_at?: DateTimeFilter<"truck"> | Date | string
    created_by?: UuidNullableFilter<"truck"> | string | null
    updated_by?: UuidNullableFilter<"truck"> | string | null
    alert_event?: Alert_eventListRelationFilter
    daily_route?: Daily_routeListRelationFilter
    device?: DeviceListRelationFilter
    device_status_event?: Device_status_eventListRelationFilter
    device_truck_assignment?: Device_truck_assignmentListRelationFilter
    fuel_level_event?: Fuel_level_eventListRelationFilter
    gps_position?: Gps_positionListRelationFilter
    hub_temperature_event?: Hub_temperature_eventListRelationFilter
    lock_event?: Lock_eventListRelationFilter
    sensor_data_raw?: Sensor_data_rawListRelationFilter
    speed_event?: Speed_eventListRelationFilter
    tire_position_config?: Tire_position_configListRelationFilter
    tire_pressure_event?: Tire_pressure_eventListRelationFilter
    trip?: TripListRelationFilter
    fleet_group?: XOR<Fleet_groupNullableRelationFilter, fleet_groupWhereInput> | null
    truck_status_event?: Truck_status_eventListRelationFilter
  }, "id" | "plate_number" | "vin">

  export type truckOrderByWithAggregationInput = {
    id?: SortOrder
    plate_number?: SortOrder
    vin?: SortOrderInput | SortOrder
    name?: SortOrderInput | SortOrder
    model?: SortOrderInput | SortOrder
    year?: SortOrderInput | SortOrder
    tire_config?: SortOrderInput | SortOrder
    fleet_group_id?: SortOrderInput | SortOrder
    created_at?: SortOrder
    created_by?: SortOrderInput | SortOrder
    updated_by?: SortOrderInput | SortOrder
    _count?: truckCountOrderByAggregateInput
    _avg?: truckAvgOrderByAggregateInput
    _max?: truckMaxOrderByAggregateInput
    _min?: truckMinOrderByAggregateInput
    _sum?: truckSumOrderByAggregateInput
  }

  export type truckScalarWhereWithAggregatesInput = {
    AND?: truckScalarWhereWithAggregatesInput | truckScalarWhereWithAggregatesInput[]
    OR?: truckScalarWhereWithAggregatesInput[]
    NOT?: truckScalarWhereWithAggregatesInput | truckScalarWhereWithAggregatesInput[]
    id?: UuidWithAggregatesFilter<"truck"> | string
    plate_number?: StringWithAggregatesFilter<"truck"> | string
    vin?: StringNullableWithAggregatesFilter<"truck"> | string | null
    name?: StringNullableWithAggregatesFilter<"truck"> | string | null
    model?: StringNullableWithAggregatesFilter<"truck"> | string | null
    year?: IntNullableWithAggregatesFilter<"truck"> | number | null
    tire_config?: StringNullableWithAggregatesFilter<"truck"> | string | null
    fleet_group_id?: UuidNullableWithAggregatesFilter<"truck"> | string | null
    created_at?: DateTimeWithAggregatesFilter<"truck"> | Date | string
    created_by?: UuidNullableWithAggregatesFilter<"truck"> | string | null
    updated_by?: UuidNullableWithAggregatesFilter<"truck"> | string | null
  }

  export type truck_status_eventWhereInput = {
    AND?: truck_status_eventWhereInput | truck_status_eventWhereInput[]
    OR?: truck_status_eventWhereInput[]
    NOT?: truck_status_eventWhereInput | truck_status_eventWhereInput[]
    id?: UuidFilter<"truck_status_event"> | string
    truck_id?: UuidFilter<"truck_status_event"> | string
    status?: Enumtruck_statusFilter<"truck_status_event"> | $Enums.truck_status
    note?: StringNullableFilter<"truck_status_event"> | string | null
    changed_at?: DateTimeFilter<"truck_status_event"> | Date | string
    created_by?: UuidNullableFilter<"truck_status_event"> | string | null
    truck?: XOR<TruckRelationFilter, truckWhereInput>
  }

  export type truck_status_eventOrderByWithRelationInput = {
    id?: SortOrder
    truck_id?: SortOrder
    status?: SortOrder
    note?: SortOrderInput | SortOrder
    changed_at?: SortOrder
    created_by?: SortOrderInput | SortOrder
    truck?: truckOrderByWithRelationInput
  }

  export type truck_status_eventWhereUniqueInput = Prisma.AtLeast<{
    id?: string
    AND?: truck_status_eventWhereInput | truck_status_eventWhereInput[]
    OR?: truck_status_eventWhereInput[]
    NOT?: truck_status_eventWhereInput | truck_status_eventWhereInput[]
    truck_id?: UuidFilter<"truck_status_event"> | string
    status?: Enumtruck_statusFilter<"truck_status_event"> | $Enums.truck_status
    note?: StringNullableFilter<"truck_status_event"> | string | null
    changed_at?: DateTimeFilter<"truck_status_event"> | Date | string
    created_by?: UuidNullableFilter<"truck_status_event"> | string | null
    truck?: XOR<TruckRelationFilter, truckWhereInput>
  }, "id">

  export type truck_status_eventOrderByWithAggregationInput = {
    id?: SortOrder
    truck_id?: SortOrder
    status?: SortOrder
    note?: SortOrderInput | SortOrder
    changed_at?: SortOrder
    created_by?: SortOrderInput | SortOrder
    _count?: truck_status_eventCountOrderByAggregateInput
    _max?: truck_status_eventMaxOrderByAggregateInput
    _min?: truck_status_eventMinOrderByAggregateInput
  }

  export type truck_status_eventScalarWhereWithAggregatesInput = {
    AND?: truck_status_eventScalarWhereWithAggregatesInput | truck_status_eventScalarWhereWithAggregatesInput[]
    OR?: truck_status_eventScalarWhereWithAggregatesInput[]
    NOT?: truck_status_eventScalarWhereWithAggregatesInput | truck_status_eventScalarWhereWithAggregatesInput[]
    id?: UuidWithAggregatesFilter<"truck_status_event"> | string
    truck_id?: UuidWithAggregatesFilter<"truck_status_event"> | string
    status?: Enumtruck_statusWithAggregatesFilter<"truck_status_event"> | $Enums.truck_status
    note?: StringNullableWithAggregatesFilter<"truck_status_event"> | string | null
    changed_at?: DateTimeWithAggregatesFilter<"truck_status_event"> | Date | string
    created_by?: UuidNullableWithAggregatesFilter<"truck_status_event"> | string | null
  }

  export type usersWhereInput = {
    AND?: usersWhereInput | usersWhereInput[]
    OR?: usersWhereInput[]
    NOT?: usersWhereInput | usersWhereInput[]
    id?: UuidFilter<"users"> | string
    username?: StringFilter<"users"> | string
    email?: StringNullableFilter<"users"> | string | null
    password_hash?: StringFilter<"users"> | string
    role?: StringNullableFilter<"users"> | string | null
    is_active?: BoolNullableFilter<"users"> | boolean | null
    created_at?: DateTimeNullableFilter<"users"> | Date | string | null
    updated_at?: DateTimeNullableFilter<"users"> | Date | string | null
    device_truck_assignment_device_truck_assignment_assigned_byTousers?: Device_truck_assignmentListRelationFilter
    device_truck_assignment_device_truck_assignment_removed_byTousers?: Device_truck_assignmentListRelationFilter
  }

  export type usersOrderByWithRelationInput = {
    id?: SortOrder
    username?: SortOrder
    email?: SortOrderInput | SortOrder
    password_hash?: SortOrder
    role?: SortOrderInput | SortOrder
    is_active?: SortOrderInput | SortOrder
    created_at?: SortOrderInput | SortOrder
    updated_at?: SortOrderInput | SortOrder
    device_truck_assignment_device_truck_assignment_assigned_byTousers?: device_truck_assignmentOrderByRelationAggregateInput
    device_truck_assignment_device_truck_assignment_removed_byTousers?: device_truck_assignmentOrderByRelationAggregateInput
  }

  export type usersWhereUniqueInput = Prisma.AtLeast<{
    id?: string
    username?: string
    email?: string
    AND?: usersWhereInput | usersWhereInput[]
    OR?: usersWhereInput[]
    NOT?: usersWhereInput | usersWhereInput[]
    password_hash?: StringFilter<"users"> | string
    role?: StringNullableFilter<"users"> | string | null
    is_active?: BoolNullableFilter<"users"> | boolean | null
    created_at?: DateTimeNullableFilter<"users"> | Date | string | null
    updated_at?: DateTimeNullableFilter<"users"> | Date | string | null
    device_truck_assignment_device_truck_assignment_assigned_byTousers?: Device_truck_assignmentListRelationFilter
    device_truck_assignment_device_truck_assignment_removed_byTousers?: Device_truck_assignmentListRelationFilter
  }, "id" | "username" | "email">

  export type usersOrderByWithAggregationInput = {
    id?: SortOrder
    username?: SortOrder
    email?: SortOrderInput | SortOrder
    password_hash?: SortOrder
    role?: SortOrderInput | SortOrder
    is_active?: SortOrderInput | SortOrder
    created_at?: SortOrderInput | SortOrder
    updated_at?: SortOrderInput | SortOrder
    _count?: usersCountOrderByAggregateInput
    _max?: usersMaxOrderByAggregateInput
    _min?: usersMinOrderByAggregateInput
  }

  export type usersScalarWhereWithAggregatesInput = {
    AND?: usersScalarWhereWithAggregatesInput | usersScalarWhereWithAggregatesInput[]
    OR?: usersScalarWhereWithAggregatesInput[]
    NOT?: usersScalarWhereWithAggregatesInput | usersScalarWhereWithAggregatesInput[]
    id?: UuidWithAggregatesFilter<"users"> | string
    username?: StringWithAggregatesFilter<"users"> | string
    email?: StringNullableWithAggregatesFilter<"users"> | string | null
    password_hash?: StringWithAggregatesFilter<"users"> | string
    role?: StringNullableWithAggregatesFilter<"users"> | string | null
    is_active?: BoolNullableWithAggregatesFilter<"users"> | boolean | null
    created_at?: DateTimeNullableWithAggregatesFilter<"users"> | Date | string | null
    updated_at?: DateTimeNullableWithAggregatesFilter<"users"> | Date | string | null
  }

  export type alert_eventCreateInput = {
    id?: string
    type: $Enums.alert_type
    severity?: number | null
    detail?: NullableJsonNullValueInput | InputJsonValue
    occurred_at?: Date | string
    acknowledged?: boolean
    created_by?: string | null
    truck: truckCreateNestedOneWithoutAlert_eventInput
  }

  export type alert_eventUncheckedCreateInput = {
    id?: string
    truck_id: string
    type: $Enums.alert_type
    severity?: number | null
    detail?: NullableJsonNullValueInput | InputJsonValue
    occurred_at?: Date | string
    acknowledged?: boolean
    created_by?: string | null
  }

  export type alert_eventUpdateInput = {
    id?: StringFieldUpdateOperationsInput | string
    type?: Enumalert_typeFieldUpdateOperationsInput | $Enums.alert_type
    severity?: NullableIntFieldUpdateOperationsInput | number | null
    detail?: NullableJsonNullValueInput | InputJsonValue
    occurred_at?: DateTimeFieldUpdateOperationsInput | Date | string
    acknowledged?: BoolFieldUpdateOperationsInput | boolean
    created_by?: NullableStringFieldUpdateOperationsInput | string | null
    truck?: truckUpdateOneRequiredWithoutAlert_eventNestedInput
  }

  export type alert_eventUncheckedUpdateInput = {
    id?: StringFieldUpdateOperationsInput | string
    truck_id?: StringFieldUpdateOperationsInput | string
    type?: Enumalert_typeFieldUpdateOperationsInput | $Enums.alert_type
    severity?: NullableIntFieldUpdateOperationsInput | number | null
    detail?: NullableJsonNullValueInput | InputJsonValue
    occurred_at?: DateTimeFieldUpdateOperationsInput | Date | string
    acknowledged?: BoolFieldUpdateOperationsInput | boolean
    created_by?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type alert_eventCreateManyInput = {
    id?: string
    truck_id: string
    type: $Enums.alert_type
    severity?: number | null
    detail?: NullableJsonNullValueInput | InputJsonValue
    occurred_at?: Date | string
    acknowledged?: boolean
    created_by?: string | null
  }

  export type alert_eventUpdateManyMutationInput = {
    id?: StringFieldUpdateOperationsInput | string
    type?: Enumalert_typeFieldUpdateOperationsInput | $Enums.alert_type
    severity?: NullableIntFieldUpdateOperationsInput | number | null
    detail?: NullableJsonNullValueInput | InputJsonValue
    occurred_at?: DateTimeFieldUpdateOperationsInput | Date | string
    acknowledged?: BoolFieldUpdateOperationsInput | boolean
    created_by?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type alert_eventUncheckedUpdateManyInput = {
    id?: StringFieldUpdateOperationsInput | string
    truck_id?: StringFieldUpdateOperationsInput | string
    type?: Enumalert_typeFieldUpdateOperationsInput | $Enums.alert_type
    severity?: NullableIntFieldUpdateOperationsInput | number | null
    detail?: NullableJsonNullValueInput | InputJsonValue
    occurred_at?: DateTimeFieldUpdateOperationsInput | Date | string
    acknowledged?: BoolFieldUpdateOperationsInput | boolean
    created_by?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type daily_routeUpdateInput = {
    id?: StringFieldUpdateOperationsInput | string
    route_date?: DateTimeFieldUpdateOperationsInput | Date | string
    point_count?: IntFieldUpdateOperationsInput | number
    generated_at?: DateTimeFieldUpdateOperationsInput | Date | string
    created_by?: NullableStringFieldUpdateOperationsInput | string | null
    truck?: truckUpdateOneRequiredWithoutDaily_routeNestedInput
  }

  export type daily_routeUncheckedUpdateInput = {
    id?: StringFieldUpdateOperationsInput | string
    truck_id?: StringFieldUpdateOperationsInput | string
    route_date?: DateTimeFieldUpdateOperationsInput | Date | string
    point_count?: IntFieldUpdateOperationsInput | number
    generated_at?: DateTimeFieldUpdateOperationsInput | Date | string
    created_by?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type daily_routeUpdateManyMutationInput = {
    id?: StringFieldUpdateOperationsInput | string
    route_date?: DateTimeFieldUpdateOperationsInput | Date | string
    point_count?: IntFieldUpdateOperationsInput | number
    generated_at?: DateTimeFieldUpdateOperationsInput | Date | string
    created_by?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type daily_routeUncheckedUpdateManyInput = {
    id?: StringFieldUpdateOperationsInput | string
    truck_id?: StringFieldUpdateOperationsInput | string
    route_date?: DateTimeFieldUpdateOperationsInput | Date | string
    point_count?: IntFieldUpdateOperationsInput | number
    generated_at?: DateTimeFieldUpdateOperationsInput | Date | string
    created_by?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type deviceCreateInput = {
    id?: string
    sn: string
    sim_number?: string | null
    installed_at?: Date | string
    removed_at?: Date | string | null
    created_by?: string | null
    updated_by?: string | null
    truck: truckCreateNestedOneWithoutDeviceInput
    device_status_event?: device_status_eventCreateNestedManyWithoutDeviceInput
    device_truck_assignment?: device_truck_assignmentCreateNestedManyWithoutDeviceInput
    gps_position?: gps_positionCreateNestedManyWithoutDeviceInput
    hub_temperature_event?: hub_temperature_eventCreateNestedManyWithoutDeviceInput
    lock_event?: lock_eventCreateNestedManyWithoutDeviceInput
    sensor?: sensorCreateNestedManyWithoutDeviceInput
    tire_pressure_event?: tire_pressure_eventCreateNestedManyWithoutDeviceInput
  }

  export type deviceUncheckedCreateInput = {
    id?: string
    truck_id: string
    sn: string
    sim_number?: string | null
    installed_at?: Date | string
    removed_at?: Date | string | null
    created_by?: string | null
    updated_by?: string | null
    device_status_event?: device_status_eventUncheckedCreateNestedManyWithoutDeviceInput
    device_truck_assignment?: device_truck_assignmentUncheckedCreateNestedManyWithoutDeviceInput
    gps_position?: gps_positionUncheckedCreateNestedManyWithoutDeviceInput
    hub_temperature_event?: hub_temperature_eventUncheckedCreateNestedManyWithoutDeviceInput
    lock_event?: lock_eventUncheckedCreateNestedManyWithoutDeviceInput
    sensor?: sensorUncheckedCreateNestedManyWithoutDeviceInput
    tire_pressure_event?: tire_pressure_eventUncheckedCreateNestedManyWithoutDeviceInput
  }

  export type deviceUpdateInput = {
    id?: StringFieldUpdateOperationsInput | string
    sn?: StringFieldUpdateOperationsInput | string
    sim_number?: NullableStringFieldUpdateOperationsInput | string | null
    installed_at?: DateTimeFieldUpdateOperationsInput | Date | string
    removed_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    created_by?: NullableStringFieldUpdateOperationsInput | string | null
    updated_by?: NullableStringFieldUpdateOperationsInput | string | null
    truck?: truckUpdateOneRequiredWithoutDeviceNestedInput
    device_status_event?: device_status_eventUpdateManyWithoutDeviceNestedInput
    device_truck_assignment?: device_truck_assignmentUpdateManyWithoutDeviceNestedInput
    gps_position?: gps_positionUpdateManyWithoutDeviceNestedInput
    hub_temperature_event?: hub_temperature_eventUpdateManyWithoutDeviceNestedInput
    lock_event?: lock_eventUpdateManyWithoutDeviceNestedInput
    sensor?: sensorUpdateManyWithoutDeviceNestedInput
    tire_pressure_event?: tire_pressure_eventUpdateManyWithoutDeviceNestedInput
  }

  export type deviceUncheckedUpdateInput = {
    id?: StringFieldUpdateOperationsInput | string
    truck_id?: StringFieldUpdateOperationsInput | string
    sn?: StringFieldUpdateOperationsInput | string
    sim_number?: NullableStringFieldUpdateOperationsInput | string | null
    installed_at?: DateTimeFieldUpdateOperationsInput | Date | string
    removed_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    created_by?: NullableStringFieldUpdateOperationsInput | string | null
    updated_by?: NullableStringFieldUpdateOperationsInput | string | null
    device_status_event?: device_status_eventUncheckedUpdateManyWithoutDeviceNestedInput
    device_truck_assignment?: device_truck_assignmentUncheckedUpdateManyWithoutDeviceNestedInput
    gps_position?: gps_positionUncheckedUpdateManyWithoutDeviceNestedInput
    hub_temperature_event?: hub_temperature_eventUncheckedUpdateManyWithoutDeviceNestedInput
    lock_event?: lock_eventUncheckedUpdateManyWithoutDeviceNestedInput
    sensor?: sensorUncheckedUpdateManyWithoutDeviceNestedInput
    tire_pressure_event?: tire_pressure_eventUncheckedUpdateManyWithoutDeviceNestedInput
  }

  export type deviceCreateManyInput = {
    id?: string
    truck_id: string
    sn: string
    sim_number?: string | null
    installed_at?: Date | string
    removed_at?: Date | string | null
    created_by?: string | null
    updated_by?: string | null
  }

  export type deviceUpdateManyMutationInput = {
    id?: StringFieldUpdateOperationsInput | string
    sn?: StringFieldUpdateOperationsInput | string
    sim_number?: NullableStringFieldUpdateOperationsInput | string | null
    installed_at?: DateTimeFieldUpdateOperationsInput | Date | string
    removed_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    created_by?: NullableStringFieldUpdateOperationsInput | string | null
    updated_by?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type deviceUncheckedUpdateManyInput = {
    id?: StringFieldUpdateOperationsInput | string
    truck_id?: StringFieldUpdateOperationsInput | string
    sn?: StringFieldUpdateOperationsInput | string
    sim_number?: NullableStringFieldUpdateOperationsInput | string | null
    installed_at?: DateTimeFieldUpdateOperationsInput | Date | string
    removed_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    created_by?: NullableStringFieldUpdateOperationsInput | string | null
    updated_by?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type device_status_eventCreateInput = {
    id?: string
    host_bat?: number | null
    repeater1_bat?: number | null
    repeater2_bat?: number | null
    lock_state?: number | null
    reported_at?: Date | string
    created_by?: string | null
    device: deviceCreateNestedOneWithoutDevice_status_eventInput
    truck: truckCreateNestedOneWithoutDevice_status_eventInput
  }

  export type device_status_eventUncheckedCreateInput = {
    id?: string
    device_id: string
    truck_id: string
    host_bat?: number | null
    repeater1_bat?: number | null
    repeater2_bat?: number | null
    lock_state?: number | null
    reported_at?: Date | string
    created_by?: string | null
  }

  export type device_status_eventUpdateInput = {
    id?: StringFieldUpdateOperationsInput | string
    host_bat?: NullableIntFieldUpdateOperationsInput | number | null
    repeater1_bat?: NullableIntFieldUpdateOperationsInput | number | null
    repeater2_bat?: NullableIntFieldUpdateOperationsInput | number | null
    lock_state?: NullableIntFieldUpdateOperationsInput | number | null
    reported_at?: DateTimeFieldUpdateOperationsInput | Date | string
    created_by?: NullableStringFieldUpdateOperationsInput | string | null
    device?: deviceUpdateOneRequiredWithoutDevice_status_eventNestedInput
    truck?: truckUpdateOneRequiredWithoutDevice_status_eventNestedInput
  }

  export type device_status_eventUncheckedUpdateInput = {
    id?: StringFieldUpdateOperationsInput | string
    device_id?: StringFieldUpdateOperationsInput | string
    truck_id?: StringFieldUpdateOperationsInput | string
    host_bat?: NullableIntFieldUpdateOperationsInput | number | null
    repeater1_bat?: NullableIntFieldUpdateOperationsInput | number | null
    repeater2_bat?: NullableIntFieldUpdateOperationsInput | number | null
    lock_state?: NullableIntFieldUpdateOperationsInput | number | null
    reported_at?: DateTimeFieldUpdateOperationsInput | Date | string
    created_by?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type device_status_eventCreateManyInput = {
    id?: string
    device_id: string
    truck_id: string
    host_bat?: number | null
    repeater1_bat?: number | null
    repeater2_bat?: number | null
    lock_state?: number | null
    reported_at?: Date | string
    created_by?: string | null
  }

  export type device_status_eventUpdateManyMutationInput = {
    id?: StringFieldUpdateOperationsInput | string
    host_bat?: NullableIntFieldUpdateOperationsInput | number | null
    repeater1_bat?: NullableIntFieldUpdateOperationsInput | number | null
    repeater2_bat?: NullableIntFieldUpdateOperationsInput | number | null
    lock_state?: NullableIntFieldUpdateOperationsInput | number | null
    reported_at?: DateTimeFieldUpdateOperationsInput | Date | string
    created_by?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type device_status_eventUncheckedUpdateManyInput = {
    id?: StringFieldUpdateOperationsInput | string
    device_id?: StringFieldUpdateOperationsInput | string
    truck_id?: StringFieldUpdateOperationsInput | string
    host_bat?: NullableIntFieldUpdateOperationsInput | number | null
    repeater1_bat?: NullableIntFieldUpdateOperationsInput | number | null
    repeater2_bat?: NullableIntFieldUpdateOperationsInput | number | null
    lock_state?: NullableIntFieldUpdateOperationsInput | number | null
    reported_at?: DateTimeFieldUpdateOperationsInput | Date | string
    created_by?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type device_truck_assignmentCreateInput = {
    id?: string
    assigned_at?: Date | string
    removed_at?: Date | string | null
    is_active?: boolean | null
    users_device_truck_assignment_assigned_byTousers?: usersCreateNestedOneWithoutDevice_truck_assignment_device_truck_assignment_assigned_byTousersInput
    device?: deviceCreateNestedOneWithoutDevice_truck_assignmentInput
    users_device_truck_assignment_removed_byTousers?: usersCreateNestedOneWithoutDevice_truck_assignment_device_truck_assignment_removed_byTousersInput
    truck?: truckCreateNestedOneWithoutDevice_truck_assignmentInput
  }

  export type device_truck_assignmentUncheckedCreateInput = {
    id?: string
    device_id?: string | null
    truck_id?: string | null
    assigned_at?: Date | string
    assigned_by?: string | null
    removed_at?: Date | string | null
    removed_by?: string | null
    is_active?: boolean | null
  }

  export type device_truck_assignmentUpdateInput = {
    id?: StringFieldUpdateOperationsInput | string
    assigned_at?: DateTimeFieldUpdateOperationsInput | Date | string
    removed_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    is_active?: NullableBoolFieldUpdateOperationsInput | boolean | null
    users_device_truck_assignment_assigned_byTousers?: usersUpdateOneWithoutDevice_truck_assignment_device_truck_assignment_assigned_byTousersNestedInput
    device?: deviceUpdateOneWithoutDevice_truck_assignmentNestedInput
    users_device_truck_assignment_removed_byTousers?: usersUpdateOneWithoutDevice_truck_assignment_device_truck_assignment_removed_byTousersNestedInput
    truck?: truckUpdateOneWithoutDevice_truck_assignmentNestedInput
  }

  export type device_truck_assignmentUncheckedUpdateInput = {
    id?: StringFieldUpdateOperationsInput | string
    device_id?: NullableStringFieldUpdateOperationsInput | string | null
    truck_id?: NullableStringFieldUpdateOperationsInput | string | null
    assigned_at?: DateTimeFieldUpdateOperationsInput | Date | string
    assigned_by?: NullableStringFieldUpdateOperationsInput | string | null
    removed_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    removed_by?: NullableStringFieldUpdateOperationsInput | string | null
    is_active?: NullableBoolFieldUpdateOperationsInput | boolean | null
  }

  export type device_truck_assignmentCreateManyInput = {
    id?: string
    device_id?: string | null
    truck_id?: string | null
    assigned_at?: Date | string
    assigned_by?: string | null
    removed_at?: Date | string | null
    removed_by?: string | null
    is_active?: boolean | null
  }

  export type device_truck_assignmentUpdateManyMutationInput = {
    id?: StringFieldUpdateOperationsInput | string
    assigned_at?: DateTimeFieldUpdateOperationsInput | Date | string
    removed_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    is_active?: NullableBoolFieldUpdateOperationsInput | boolean | null
  }

  export type device_truck_assignmentUncheckedUpdateManyInput = {
    id?: StringFieldUpdateOperationsInput | string
    device_id?: NullableStringFieldUpdateOperationsInput | string | null
    truck_id?: NullableStringFieldUpdateOperationsInput | string | null
    assigned_at?: DateTimeFieldUpdateOperationsInput | Date | string
    assigned_by?: NullableStringFieldUpdateOperationsInput | string | null
    removed_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    removed_by?: NullableStringFieldUpdateOperationsInput | string | null
    is_active?: NullableBoolFieldUpdateOperationsInput | boolean | null
  }

  export type fleet_groupCreateInput = {
    id?: string
    name: string
    site?: string | null
    description?: string | null
    created_at?: Date | string | null
    created_by?: string | null
    updated_by?: string | null
    truck?: truckCreateNestedManyWithoutFleet_groupInput
  }

  export type fleet_groupUncheckedCreateInput = {
    id?: string
    name: string
    site?: string | null
    description?: string | null
    created_at?: Date | string | null
    created_by?: string | null
    updated_by?: string | null
    truck?: truckUncheckedCreateNestedManyWithoutFleet_groupInput
  }

  export type fleet_groupUpdateInput = {
    id?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    site?: NullableStringFieldUpdateOperationsInput | string | null
    description?: NullableStringFieldUpdateOperationsInput | string | null
    created_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    created_by?: NullableStringFieldUpdateOperationsInput | string | null
    updated_by?: NullableStringFieldUpdateOperationsInput | string | null
    truck?: truckUpdateManyWithoutFleet_groupNestedInput
  }

  export type fleet_groupUncheckedUpdateInput = {
    id?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    site?: NullableStringFieldUpdateOperationsInput | string | null
    description?: NullableStringFieldUpdateOperationsInput | string | null
    created_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    created_by?: NullableStringFieldUpdateOperationsInput | string | null
    updated_by?: NullableStringFieldUpdateOperationsInput | string | null
    truck?: truckUncheckedUpdateManyWithoutFleet_groupNestedInput
  }

  export type fleet_groupCreateManyInput = {
    id?: string
    name: string
    site?: string | null
    description?: string | null
    created_at?: Date | string | null
    created_by?: string | null
    updated_by?: string | null
  }

  export type fleet_groupUpdateManyMutationInput = {
    id?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    site?: NullableStringFieldUpdateOperationsInput | string | null
    description?: NullableStringFieldUpdateOperationsInput | string | null
    created_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    created_by?: NullableStringFieldUpdateOperationsInput | string | null
    updated_by?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type fleet_groupUncheckedUpdateManyInput = {
    id?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    site?: NullableStringFieldUpdateOperationsInput | string | null
    description?: NullableStringFieldUpdateOperationsInput | string | null
    created_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    created_by?: NullableStringFieldUpdateOperationsInput | string | null
    updated_by?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type fuel_level_eventCreateInput = {
    id?: string
    fuel_percent?: number | null
    changed_at: Date | string
    source?: string | null
    created_by?: string | null
    truck: truckCreateNestedOneWithoutFuel_level_eventInput
  }

  export type fuel_level_eventUncheckedCreateInput = {
    id?: string
    truck_id: string
    fuel_percent?: number | null
    changed_at: Date | string
    source?: string | null
    created_by?: string | null
  }

  export type fuel_level_eventUpdateInput = {
    id?: StringFieldUpdateOperationsInput | string
    fuel_percent?: NullableFloatFieldUpdateOperationsInput | number | null
    changed_at?: DateTimeFieldUpdateOperationsInput | Date | string
    source?: NullableStringFieldUpdateOperationsInput | string | null
    created_by?: NullableStringFieldUpdateOperationsInput | string | null
    truck?: truckUpdateOneRequiredWithoutFuel_level_eventNestedInput
  }

  export type fuel_level_eventUncheckedUpdateInput = {
    id?: StringFieldUpdateOperationsInput | string
    truck_id?: StringFieldUpdateOperationsInput | string
    fuel_percent?: NullableFloatFieldUpdateOperationsInput | number | null
    changed_at?: DateTimeFieldUpdateOperationsInput | Date | string
    source?: NullableStringFieldUpdateOperationsInput | string | null
    created_by?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type fuel_level_eventCreateManyInput = {
    id?: string
    truck_id: string
    fuel_percent?: number | null
    changed_at: Date | string
    source?: string | null
    created_by?: string | null
  }

  export type fuel_level_eventUpdateManyMutationInput = {
    id?: StringFieldUpdateOperationsInput | string
    fuel_percent?: NullableFloatFieldUpdateOperationsInput | number | null
    changed_at?: DateTimeFieldUpdateOperationsInput | Date | string
    source?: NullableStringFieldUpdateOperationsInput | string | null
    created_by?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type fuel_level_eventUncheckedUpdateManyInput = {
    id?: StringFieldUpdateOperationsInput | string
    truck_id?: StringFieldUpdateOperationsInput | string
    fuel_percent?: NullableFloatFieldUpdateOperationsInput | number | null
    changed_at?: DateTimeFieldUpdateOperationsInput | Date | string
    source?: NullableStringFieldUpdateOperationsInput | string | null
    created_by?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type geofenceUpdateInput = {
    id?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    created_by?: NullableStringFieldUpdateOperationsInput | string | null
    created_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type geofenceUncheckedUpdateInput = {
    id?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    created_by?: NullableStringFieldUpdateOperationsInput | string | null
    created_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type geofenceUpdateManyMutationInput = {
    id?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    created_by?: NullableStringFieldUpdateOperationsInput | string | null
    created_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type geofenceUncheckedUpdateManyInput = {
    id?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    created_by?: NullableStringFieldUpdateOperationsInput | string | null
    created_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type gps_positionUpdateInput = {
    id?: BigIntFieldUpdateOperationsInput | bigint | number
    ts?: DateTimeFieldUpdateOperationsInput | Date | string
    speed_kph?: NullableFloatFieldUpdateOperationsInput | number | null
    heading_deg?: NullableFloatFieldUpdateOperationsInput | number | null
    hdop?: NullableFloatFieldUpdateOperationsInput | number | null
    source?: NullableStringFieldUpdateOperationsInput | string | null
    device?: deviceUpdateOneWithoutGps_positionNestedInput
    truck?: truckUpdateOneRequiredWithoutGps_positionNestedInput
  }

  export type gps_positionUncheckedUpdateInput = {
    id?: BigIntFieldUpdateOperationsInput | bigint | number
    device_id?: NullableStringFieldUpdateOperationsInput | string | null
    truck_id?: StringFieldUpdateOperationsInput | string
    ts?: DateTimeFieldUpdateOperationsInput | Date | string
    speed_kph?: NullableFloatFieldUpdateOperationsInput | number | null
    heading_deg?: NullableFloatFieldUpdateOperationsInput | number | null
    hdop?: NullableFloatFieldUpdateOperationsInput | number | null
    source?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type gps_positionUpdateManyMutationInput = {
    id?: BigIntFieldUpdateOperationsInput | bigint | number
    ts?: DateTimeFieldUpdateOperationsInput | Date | string
    speed_kph?: NullableFloatFieldUpdateOperationsInput | number | null
    heading_deg?: NullableFloatFieldUpdateOperationsInput | number | null
    hdop?: NullableFloatFieldUpdateOperationsInput | number | null
    source?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type gps_positionUncheckedUpdateManyInput = {
    id?: BigIntFieldUpdateOperationsInput | bigint | number
    device_id?: NullableStringFieldUpdateOperationsInput | string | null
    truck_id?: StringFieldUpdateOperationsInput | string
    ts?: DateTimeFieldUpdateOperationsInput | Date | string
    speed_kph?: NullableFloatFieldUpdateOperationsInput | number | null
    heading_deg?: NullableFloatFieldUpdateOperationsInput | number | null
    hdop?: NullableFloatFieldUpdateOperationsInput | number | null
    source?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type hub_temperature_eventCreateInput = {
    id?: string
    hub_no?: number | null
    temp_celsius?: number | null
    ex_type?: string | null
    battery_level?: number | null
    changed_at?: Date | string
    created_by?: string | null
    device: deviceCreateNestedOneWithoutHub_temperature_eventInput
    truck: truckCreateNestedOneWithoutHub_temperature_eventInput
  }

  export type hub_temperature_eventUncheckedCreateInput = {
    id?: string
    device_id: string
    truck_id: string
    hub_no?: number | null
    temp_celsius?: number | null
    ex_type?: string | null
    battery_level?: number | null
    changed_at?: Date | string
    created_by?: string | null
  }

  export type hub_temperature_eventUpdateInput = {
    id?: StringFieldUpdateOperationsInput | string
    hub_no?: NullableIntFieldUpdateOperationsInput | number | null
    temp_celsius?: NullableFloatFieldUpdateOperationsInput | number | null
    ex_type?: NullableStringFieldUpdateOperationsInput | string | null
    battery_level?: NullableIntFieldUpdateOperationsInput | number | null
    changed_at?: DateTimeFieldUpdateOperationsInput | Date | string
    created_by?: NullableStringFieldUpdateOperationsInput | string | null
    device?: deviceUpdateOneRequiredWithoutHub_temperature_eventNestedInput
    truck?: truckUpdateOneRequiredWithoutHub_temperature_eventNestedInput
  }

  export type hub_temperature_eventUncheckedUpdateInput = {
    id?: StringFieldUpdateOperationsInput | string
    device_id?: StringFieldUpdateOperationsInput | string
    truck_id?: StringFieldUpdateOperationsInput | string
    hub_no?: NullableIntFieldUpdateOperationsInput | number | null
    temp_celsius?: NullableFloatFieldUpdateOperationsInput | number | null
    ex_type?: NullableStringFieldUpdateOperationsInput | string | null
    battery_level?: NullableIntFieldUpdateOperationsInput | number | null
    changed_at?: DateTimeFieldUpdateOperationsInput | Date | string
    created_by?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type hub_temperature_eventCreateManyInput = {
    id?: string
    device_id: string
    truck_id: string
    hub_no?: number | null
    temp_celsius?: number | null
    ex_type?: string | null
    battery_level?: number | null
    changed_at?: Date | string
    created_by?: string | null
  }

  export type hub_temperature_eventUpdateManyMutationInput = {
    id?: StringFieldUpdateOperationsInput | string
    hub_no?: NullableIntFieldUpdateOperationsInput | number | null
    temp_celsius?: NullableFloatFieldUpdateOperationsInput | number | null
    ex_type?: NullableStringFieldUpdateOperationsInput | string | null
    battery_level?: NullableIntFieldUpdateOperationsInput | number | null
    changed_at?: DateTimeFieldUpdateOperationsInput | Date | string
    created_by?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type hub_temperature_eventUncheckedUpdateManyInput = {
    id?: StringFieldUpdateOperationsInput | string
    device_id?: StringFieldUpdateOperationsInput | string
    truck_id?: StringFieldUpdateOperationsInput | string
    hub_no?: NullableIntFieldUpdateOperationsInput | number | null
    temp_celsius?: NullableFloatFieldUpdateOperationsInput | number | null
    ex_type?: NullableStringFieldUpdateOperationsInput | string | null
    battery_level?: NullableIntFieldUpdateOperationsInput | number | null
    changed_at?: DateTimeFieldUpdateOperationsInput | Date | string
    created_by?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type lock_eventCreateInput = {
    id?: string
    is_lock?: number | null
    reported_at?: Date | string
    created_by?: string | null
    device: deviceCreateNestedOneWithoutLock_eventInput
    truck: truckCreateNestedOneWithoutLock_eventInput
  }

  export type lock_eventUncheckedCreateInput = {
    id?: string
    device_id: string
    truck_id: string
    is_lock?: number | null
    reported_at?: Date | string
    created_by?: string | null
  }

  export type lock_eventUpdateInput = {
    id?: StringFieldUpdateOperationsInput | string
    is_lock?: NullableIntFieldUpdateOperationsInput | number | null
    reported_at?: DateTimeFieldUpdateOperationsInput | Date | string
    created_by?: NullableStringFieldUpdateOperationsInput | string | null
    device?: deviceUpdateOneRequiredWithoutLock_eventNestedInput
    truck?: truckUpdateOneRequiredWithoutLock_eventNestedInput
  }

  export type lock_eventUncheckedUpdateInput = {
    id?: StringFieldUpdateOperationsInput | string
    device_id?: StringFieldUpdateOperationsInput | string
    truck_id?: StringFieldUpdateOperationsInput | string
    is_lock?: NullableIntFieldUpdateOperationsInput | number | null
    reported_at?: DateTimeFieldUpdateOperationsInput | Date | string
    created_by?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type lock_eventCreateManyInput = {
    id?: string
    device_id: string
    truck_id: string
    is_lock?: number | null
    reported_at?: Date | string
    created_by?: string | null
  }

  export type lock_eventUpdateManyMutationInput = {
    id?: StringFieldUpdateOperationsInput | string
    is_lock?: NullableIntFieldUpdateOperationsInput | number | null
    reported_at?: DateTimeFieldUpdateOperationsInput | Date | string
    created_by?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type lock_eventUncheckedUpdateManyInput = {
    id?: StringFieldUpdateOperationsInput | string
    device_id?: StringFieldUpdateOperationsInput | string
    truck_id?: StringFieldUpdateOperationsInput | string
    is_lock?: NullableIntFieldUpdateOperationsInput | number | null
    reported_at?: DateTimeFieldUpdateOperationsInput | Date | string
    created_by?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type sensorCreateInput = {
    id?: string
    type?: string | null
    position_no: number
    sn?: string | null
    installed_at?: Date | string | null
    removed_at?: Date | string | null
    created_by?: string | null
    updated_by?: string | null
    device: deviceCreateNestedOneWithoutSensorInput
  }

  export type sensorUncheckedCreateInput = {
    id?: string
    device_id: string
    type?: string | null
    position_no: number
    sn?: string | null
    installed_at?: Date | string | null
    removed_at?: Date | string | null
    created_by?: string | null
    updated_by?: string | null
  }

  export type sensorUpdateInput = {
    id?: StringFieldUpdateOperationsInput | string
    type?: NullableStringFieldUpdateOperationsInput | string | null
    position_no?: IntFieldUpdateOperationsInput | number
    sn?: NullableStringFieldUpdateOperationsInput | string | null
    installed_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    removed_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    created_by?: NullableStringFieldUpdateOperationsInput | string | null
    updated_by?: NullableStringFieldUpdateOperationsInput | string | null
    device?: deviceUpdateOneRequiredWithoutSensorNestedInput
  }

  export type sensorUncheckedUpdateInput = {
    id?: StringFieldUpdateOperationsInput | string
    device_id?: StringFieldUpdateOperationsInput | string
    type?: NullableStringFieldUpdateOperationsInput | string | null
    position_no?: IntFieldUpdateOperationsInput | number
    sn?: NullableStringFieldUpdateOperationsInput | string | null
    installed_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    removed_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    created_by?: NullableStringFieldUpdateOperationsInput | string | null
    updated_by?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type sensorCreateManyInput = {
    id?: string
    device_id: string
    type?: string | null
    position_no: number
    sn?: string | null
    installed_at?: Date | string | null
    removed_at?: Date | string | null
    created_by?: string | null
    updated_by?: string | null
  }

  export type sensorUpdateManyMutationInput = {
    id?: StringFieldUpdateOperationsInput | string
    type?: NullableStringFieldUpdateOperationsInput | string | null
    position_no?: IntFieldUpdateOperationsInput | number
    sn?: NullableStringFieldUpdateOperationsInput | string | null
    installed_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    removed_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    created_by?: NullableStringFieldUpdateOperationsInput | string | null
    updated_by?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type sensorUncheckedUpdateManyInput = {
    id?: StringFieldUpdateOperationsInput | string
    device_id?: StringFieldUpdateOperationsInput | string
    type?: NullableStringFieldUpdateOperationsInput | string | null
    position_no?: IntFieldUpdateOperationsInput | number
    sn?: NullableStringFieldUpdateOperationsInput | string | null
    installed_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    removed_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    created_by?: NullableStringFieldUpdateOperationsInput | string | null
    updated_by?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type sensor_data_rawCreateInput = {
    id?: string
    device_sn: string
    cmd_type: string
    tire_no?: number | null
    raw_json: JsonNullValueInput | InputJsonValue
    processed?: boolean | null
    received_at?: Date | string
    processed_at?: Date | string | null
    truck?: truckCreateNestedOneWithoutSensor_data_rawInput
    sensor_processing_queue?: sensor_processing_queueCreateNestedManyWithoutSensor_data_rawInput
  }

  export type sensor_data_rawUncheckedCreateInput = {
    id?: string
    device_sn: string
    cmd_type: string
    truck_id?: string | null
    tire_no?: number | null
    raw_json: JsonNullValueInput | InputJsonValue
    processed?: boolean | null
    received_at?: Date | string
    processed_at?: Date | string | null
    sensor_processing_queue?: sensor_processing_queueUncheckedCreateNestedManyWithoutSensor_data_rawInput
  }

  export type sensor_data_rawUpdateInput = {
    id?: StringFieldUpdateOperationsInput | string
    device_sn?: StringFieldUpdateOperationsInput | string
    cmd_type?: StringFieldUpdateOperationsInput | string
    tire_no?: NullableIntFieldUpdateOperationsInput | number | null
    raw_json?: JsonNullValueInput | InputJsonValue
    processed?: NullableBoolFieldUpdateOperationsInput | boolean | null
    received_at?: DateTimeFieldUpdateOperationsInput | Date | string
    processed_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    truck?: truckUpdateOneWithoutSensor_data_rawNestedInput
    sensor_processing_queue?: sensor_processing_queueUpdateManyWithoutSensor_data_rawNestedInput
  }

  export type sensor_data_rawUncheckedUpdateInput = {
    id?: StringFieldUpdateOperationsInput | string
    device_sn?: StringFieldUpdateOperationsInput | string
    cmd_type?: StringFieldUpdateOperationsInput | string
    truck_id?: NullableStringFieldUpdateOperationsInput | string | null
    tire_no?: NullableIntFieldUpdateOperationsInput | number | null
    raw_json?: JsonNullValueInput | InputJsonValue
    processed?: NullableBoolFieldUpdateOperationsInput | boolean | null
    received_at?: DateTimeFieldUpdateOperationsInput | Date | string
    processed_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    sensor_processing_queue?: sensor_processing_queueUncheckedUpdateManyWithoutSensor_data_rawNestedInput
  }

  export type sensor_data_rawCreateManyInput = {
    id?: string
    device_sn: string
    cmd_type: string
    truck_id?: string | null
    tire_no?: number | null
    raw_json: JsonNullValueInput | InputJsonValue
    processed?: boolean | null
    received_at?: Date | string
    processed_at?: Date | string | null
  }

  export type sensor_data_rawUpdateManyMutationInput = {
    id?: StringFieldUpdateOperationsInput | string
    device_sn?: StringFieldUpdateOperationsInput | string
    cmd_type?: StringFieldUpdateOperationsInput | string
    tire_no?: NullableIntFieldUpdateOperationsInput | number | null
    raw_json?: JsonNullValueInput | InputJsonValue
    processed?: NullableBoolFieldUpdateOperationsInput | boolean | null
    received_at?: DateTimeFieldUpdateOperationsInput | Date | string
    processed_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type sensor_data_rawUncheckedUpdateManyInput = {
    id?: StringFieldUpdateOperationsInput | string
    device_sn?: StringFieldUpdateOperationsInput | string
    cmd_type?: StringFieldUpdateOperationsInput | string
    truck_id?: NullableStringFieldUpdateOperationsInput | string | null
    tire_no?: NullableIntFieldUpdateOperationsInput | number | null
    raw_json?: JsonNullValueInput | InputJsonValue
    processed?: NullableBoolFieldUpdateOperationsInput | boolean | null
    received_at?: DateTimeFieldUpdateOperationsInput | Date | string
    processed_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type sensor_processing_queueCreateInput = {
    id?: string
    priority?: number | null
    attempts?: number | null
    max_attempts?: number | null
    error_message?: string | null
    created_at?: Date | string | null
    processed_at?: Date | string | null
    sensor_data_raw?: sensor_data_rawCreateNestedOneWithoutSensor_processing_queueInput
  }

  export type sensor_processing_queueUncheckedCreateInput = {
    id?: string
    raw_data_id?: string | null
    priority?: number | null
    attempts?: number | null
    max_attempts?: number | null
    error_message?: string | null
    created_at?: Date | string | null
    processed_at?: Date | string | null
  }

  export type sensor_processing_queueUpdateInput = {
    id?: StringFieldUpdateOperationsInput | string
    priority?: NullableIntFieldUpdateOperationsInput | number | null
    attempts?: NullableIntFieldUpdateOperationsInput | number | null
    max_attempts?: NullableIntFieldUpdateOperationsInput | number | null
    error_message?: NullableStringFieldUpdateOperationsInput | string | null
    created_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    processed_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    sensor_data_raw?: sensor_data_rawUpdateOneWithoutSensor_processing_queueNestedInput
  }

  export type sensor_processing_queueUncheckedUpdateInput = {
    id?: StringFieldUpdateOperationsInput | string
    raw_data_id?: NullableStringFieldUpdateOperationsInput | string | null
    priority?: NullableIntFieldUpdateOperationsInput | number | null
    attempts?: NullableIntFieldUpdateOperationsInput | number | null
    max_attempts?: NullableIntFieldUpdateOperationsInput | number | null
    error_message?: NullableStringFieldUpdateOperationsInput | string | null
    created_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    processed_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type sensor_processing_queueCreateManyInput = {
    id?: string
    raw_data_id?: string | null
    priority?: number | null
    attempts?: number | null
    max_attempts?: number | null
    error_message?: string | null
    created_at?: Date | string | null
    processed_at?: Date | string | null
  }

  export type sensor_processing_queueUpdateManyMutationInput = {
    id?: StringFieldUpdateOperationsInput | string
    priority?: NullableIntFieldUpdateOperationsInput | number | null
    attempts?: NullableIntFieldUpdateOperationsInput | number | null
    max_attempts?: NullableIntFieldUpdateOperationsInput | number | null
    error_message?: NullableStringFieldUpdateOperationsInput | string | null
    created_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    processed_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type sensor_processing_queueUncheckedUpdateManyInput = {
    id?: StringFieldUpdateOperationsInput | string
    raw_data_id?: NullableStringFieldUpdateOperationsInput | string | null
    priority?: NullableIntFieldUpdateOperationsInput | number | null
    attempts?: NullableIntFieldUpdateOperationsInput | number | null
    max_attempts?: NullableIntFieldUpdateOperationsInput | number | null
    error_message?: NullableStringFieldUpdateOperationsInput | string | null
    created_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    processed_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type spatial_ref_sysCreateInput = {
    srid: number
    auth_name?: string | null
    auth_srid?: number | null
    srtext?: string | null
    proj4text?: string | null
  }

  export type spatial_ref_sysUncheckedCreateInput = {
    srid: number
    auth_name?: string | null
    auth_srid?: number | null
    srtext?: string | null
    proj4text?: string | null
  }

  export type spatial_ref_sysUpdateInput = {
    srid?: IntFieldUpdateOperationsInput | number
    auth_name?: NullableStringFieldUpdateOperationsInput | string | null
    auth_srid?: NullableIntFieldUpdateOperationsInput | number | null
    srtext?: NullableStringFieldUpdateOperationsInput | string | null
    proj4text?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type spatial_ref_sysUncheckedUpdateInput = {
    srid?: IntFieldUpdateOperationsInput | number
    auth_name?: NullableStringFieldUpdateOperationsInput | string | null
    auth_srid?: NullableIntFieldUpdateOperationsInput | number | null
    srtext?: NullableStringFieldUpdateOperationsInput | string | null
    proj4text?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type spatial_ref_sysCreateManyInput = {
    srid: number
    auth_name?: string | null
    auth_srid?: number | null
    srtext?: string | null
    proj4text?: string | null
  }

  export type spatial_ref_sysUpdateManyMutationInput = {
    srid?: IntFieldUpdateOperationsInput | number
    auth_name?: NullableStringFieldUpdateOperationsInput | string | null
    auth_srid?: NullableIntFieldUpdateOperationsInput | number | null
    srtext?: NullableStringFieldUpdateOperationsInput | string | null
    proj4text?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type spatial_ref_sysUncheckedUpdateManyInput = {
    srid?: IntFieldUpdateOperationsInput | number
    auth_name?: NullableStringFieldUpdateOperationsInput | string | null
    auth_srid?: NullableIntFieldUpdateOperationsInput | number | null
    srtext?: NullableStringFieldUpdateOperationsInput | string | null
    proj4text?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type speed_eventCreateInput = {
    id?: string
    speed_kph?: number | null
    changed_at: Date | string
    source?: string | null
    created_by?: string | null
    truck: truckCreateNestedOneWithoutSpeed_eventInput
  }

  export type speed_eventUncheckedCreateInput = {
    id?: string
    truck_id: string
    speed_kph?: number | null
    changed_at: Date | string
    source?: string | null
    created_by?: string | null
  }

  export type speed_eventUpdateInput = {
    id?: StringFieldUpdateOperationsInput | string
    speed_kph?: NullableFloatFieldUpdateOperationsInput | number | null
    changed_at?: DateTimeFieldUpdateOperationsInput | Date | string
    source?: NullableStringFieldUpdateOperationsInput | string | null
    created_by?: NullableStringFieldUpdateOperationsInput | string | null
    truck?: truckUpdateOneRequiredWithoutSpeed_eventNestedInput
  }

  export type speed_eventUncheckedUpdateInput = {
    id?: StringFieldUpdateOperationsInput | string
    truck_id?: StringFieldUpdateOperationsInput | string
    speed_kph?: NullableFloatFieldUpdateOperationsInput | number | null
    changed_at?: DateTimeFieldUpdateOperationsInput | Date | string
    source?: NullableStringFieldUpdateOperationsInput | string | null
    created_by?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type speed_eventCreateManyInput = {
    id?: string
    truck_id: string
    speed_kph?: number | null
    changed_at: Date | string
    source?: string | null
    created_by?: string | null
  }

  export type speed_eventUpdateManyMutationInput = {
    id?: StringFieldUpdateOperationsInput | string
    speed_kph?: NullableFloatFieldUpdateOperationsInput | number | null
    changed_at?: DateTimeFieldUpdateOperationsInput | Date | string
    source?: NullableStringFieldUpdateOperationsInput | string | null
    created_by?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type speed_eventUncheckedUpdateManyInput = {
    id?: StringFieldUpdateOperationsInput | string
    truck_id?: StringFieldUpdateOperationsInput | string
    speed_kph?: NullableFloatFieldUpdateOperationsInput | number | null
    changed_at?: DateTimeFieldUpdateOperationsInput | Date | string
    source?: NullableStringFieldUpdateOperationsInput | string | null
    created_by?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type tire_error_codeCreateInput = {
    code: number
    description?: string | null
  }

  export type tire_error_codeUncheckedCreateInput = {
    code: number
    description?: string | null
  }

  export type tire_error_codeUpdateInput = {
    code?: IntFieldUpdateOperationsInput | number
    description?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type tire_error_codeUncheckedUpdateInput = {
    code?: IntFieldUpdateOperationsInput | number
    description?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type tire_error_codeCreateManyInput = {
    code: number
    description?: string | null
  }

  export type tire_error_codeUpdateManyMutationInput = {
    code?: IntFieldUpdateOperationsInput | number
    description?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type tire_error_codeUncheckedUpdateManyInput = {
    code?: IntFieldUpdateOperationsInput | number
    description?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type tire_position_configCreateInput = {
    id?: string
    tire_no: number
    position_name?: string | null
    wheel_type?: string | null
    is_active?: boolean | null
    created_at?: Date | string | null
    truck?: truckCreateNestedOneWithoutTire_position_configInput
  }

  export type tire_position_configUncheckedCreateInput = {
    id?: string
    truck_id?: string | null
    tire_no: number
    position_name?: string | null
    wheel_type?: string | null
    is_active?: boolean | null
    created_at?: Date | string | null
  }

  export type tire_position_configUpdateInput = {
    id?: StringFieldUpdateOperationsInput | string
    tire_no?: IntFieldUpdateOperationsInput | number
    position_name?: NullableStringFieldUpdateOperationsInput | string | null
    wheel_type?: NullableStringFieldUpdateOperationsInput | string | null
    is_active?: NullableBoolFieldUpdateOperationsInput | boolean | null
    created_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    truck?: truckUpdateOneWithoutTire_position_configNestedInput
  }

  export type tire_position_configUncheckedUpdateInput = {
    id?: StringFieldUpdateOperationsInput | string
    truck_id?: NullableStringFieldUpdateOperationsInput | string | null
    tire_no?: IntFieldUpdateOperationsInput | number
    position_name?: NullableStringFieldUpdateOperationsInput | string | null
    wheel_type?: NullableStringFieldUpdateOperationsInput | string | null
    is_active?: NullableBoolFieldUpdateOperationsInput | boolean | null
    created_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type tire_position_configCreateManyInput = {
    id?: string
    truck_id?: string | null
    tire_no: number
    position_name?: string | null
    wheel_type?: string | null
    is_active?: boolean | null
    created_at?: Date | string | null
  }

  export type tire_position_configUpdateManyMutationInput = {
    id?: StringFieldUpdateOperationsInput | string
    tire_no?: IntFieldUpdateOperationsInput | number
    position_name?: NullableStringFieldUpdateOperationsInput | string | null
    wheel_type?: NullableStringFieldUpdateOperationsInput | string | null
    is_active?: NullableBoolFieldUpdateOperationsInput | boolean | null
    created_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type tire_position_configUncheckedUpdateManyInput = {
    id?: StringFieldUpdateOperationsInput | string
    truck_id?: NullableStringFieldUpdateOperationsInput | string | null
    tire_no?: IntFieldUpdateOperationsInput | number
    position_name?: NullableStringFieldUpdateOperationsInput | string | null
    wheel_type?: NullableStringFieldUpdateOperationsInput | string | null
    is_active?: NullableBoolFieldUpdateOperationsInput | boolean | null
    created_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type tire_pressure_eventCreateInput = {
    id?: string
    tire_no: number
    pressure_kpa?: number | null
    temp_celsius?: number | null
    ex_type?: string | null
    battery_level?: number | null
    changed_at?: Date | string
    created_by?: string | null
    device: deviceCreateNestedOneWithoutTire_pressure_eventInput
    truck: truckCreateNestedOneWithoutTire_pressure_eventInput
  }

  export type tire_pressure_eventUncheckedCreateInput = {
    id?: string
    device_id: string
    truck_id: string
    tire_no: number
    pressure_kpa?: number | null
    temp_celsius?: number | null
    ex_type?: string | null
    battery_level?: number | null
    changed_at?: Date | string
    created_by?: string | null
  }

  export type tire_pressure_eventUpdateInput = {
    id?: StringFieldUpdateOperationsInput | string
    tire_no?: IntFieldUpdateOperationsInput | number
    pressure_kpa?: NullableFloatFieldUpdateOperationsInput | number | null
    temp_celsius?: NullableFloatFieldUpdateOperationsInput | number | null
    ex_type?: NullableStringFieldUpdateOperationsInput | string | null
    battery_level?: NullableIntFieldUpdateOperationsInput | number | null
    changed_at?: DateTimeFieldUpdateOperationsInput | Date | string
    created_by?: NullableStringFieldUpdateOperationsInput | string | null
    device?: deviceUpdateOneRequiredWithoutTire_pressure_eventNestedInput
    truck?: truckUpdateOneRequiredWithoutTire_pressure_eventNestedInput
  }

  export type tire_pressure_eventUncheckedUpdateInput = {
    id?: StringFieldUpdateOperationsInput | string
    device_id?: StringFieldUpdateOperationsInput | string
    truck_id?: StringFieldUpdateOperationsInput | string
    tire_no?: IntFieldUpdateOperationsInput | number
    pressure_kpa?: NullableFloatFieldUpdateOperationsInput | number | null
    temp_celsius?: NullableFloatFieldUpdateOperationsInput | number | null
    ex_type?: NullableStringFieldUpdateOperationsInput | string | null
    battery_level?: NullableIntFieldUpdateOperationsInput | number | null
    changed_at?: DateTimeFieldUpdateOperationsInput | Date | string
    created_by?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type tire_pressure_eventCreateManyInput = {
    id?: string
    device_id: string
    truck_id: string
    tire_no: number
    pressure_kpa?: number | null
    temp_celsius?: number | null
    ex_type?: string | null
    battery_level?: number | null
    changed_at?: Date | string
    created_by?: string | null
  }

  export type tire_pressure_eventUpdateManyMutationInput = {
    id?: StringFieldUpdateOperationsInput | string
    tire_no?: IntFieldUpdateOperationsInput | number
    pressure_kpa?: NullableFloatFieldUpdateOperationsInput | number | null
    temp_celsius?: NullableFloatFieldUpdateOperationsInput | number | null
    ex_type?: NullableStringFieldUpdateOperationsInput | string | null
    battery_level?: NullableIntFieldUpdateOperationsInput | number | null
    changed_at?: DateTimeFieldUpdateOperationsInput | Date | string
    created_by?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type tire_pressure_eventUncheckedUpdateManyInput = {
    id?: StringFieldUpdateOperationsInput | string
    device_id?: StringFieldUpdateOperationsInput | string
    truck_id?: StringFieldUpdateOperationsInput | string
    tire_no?: IntFieldUpdateOperationsInput | number
    pressure_kpa?: NullableFloatFieldUpdateOperationsInput | number | null
    temp_celsius?: NullableFloatFieldUpdateOperationsInput | number | null
    ex_type?: NullableStringFieldUpdateOperationsInput | string | null
    battery_level?: NullableIntFieldUpdateOperationsInput | number | null
    changed_at?: DateTimeFieldUpdateOperationsInput | Date | string
    created_by?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type tripCreateInput = {
    id?: string
    start_ts: Date | string
    end_ts?: Date | string | null
    truck: truckCreateNestedOneWithoutTripInput
  }

  export type tripUncheckedCreateInput = {
    id?: string
    truck_id: string
    start_ts: Date | string
    end_ts?: Date | string | null
  }

  export type tripUpdateInput = {
    id?: StringFieldUpdateOperationsInput | string
    start_ts?: DateTimeFieldUpdateOperationsInput | Date | string
    end_ts?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    truck?: truckUpdateOneRequiredWithoutTripNestedInput
  }

  export type tripUncheckedUpdateInput = {
    id?: StringFieldUpdateOperationsInput | string
    truck_id?: StringFieldUpdateOperationsInput | string
    start_ts?: DateTimeFieldUpdateOperationsInput | Date | string
    end_ts?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type tripCreateManyInput = {
    id?: string
    truck_id: string
    start_ts: Date | string
    end_ts?: Date | string | null
  }

  export type tripUpdateManyMutationInput = {
    id?: StringFieldUpdateOperationsInput | string
    start_ts?: DateTimeFieldUpdateOperationsInput | Date | string
    end_ts?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type tripUncheckedUpdateManyInput = {
    id?: StringFieldUpdateOperationsInput | string
    truck_id?: StringFieldUpdateOperationsInput | string
    start_ts?: DateTimeFieldUpdateOperationsInput | Date | string
    end_ts?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type truckCreateInput = {
    id?: string
    plate_number: string
    vin?: string | null
    name?: string | null
    model?: string | null
    year?: number | null
    tire_config?: string | null
    created_at?: Date | string
    created_by?: string | null
    updated_by?: string | null
    alert_event?: alert_eventCreateNestedManyWithoutTruckInput
    daily_route?: daily_routeCreateNestedManyWithoutTruckInput
    device?: deviceCreateNestedManyWithoutTruckInput
    device_status_event?: device_status_eventCreateNestedManyWithoutTruckInput
    device_truck_assignment?: device_truck_assignmentCreateNestedManyWithoutTruckInput
    fuel_level_event?: fuel_level_eventCreateNestedManyWithoutTruckInput
    gps_position?: gps_positionCreateNestedManyWithoutTruckInput
    hub_temperature_event?: hub_temperature_eventCreateNestedManyWithoutTruckInput
    lock_event?: lock_eventCreateNestedManyWithoutTruckInput
    sensor_data_raw?: sensor_data_rawCreateNestedManyWithoutTruckInput
    speed_event?: speed_eventCreateNestedManyWithoutTruckInput
    tire_position_config?: tire_position_configCreateNestedManyWithoutTruckInput
    tire_pressure_event?: tire_pressure_eventCreateNestedManyWithoutTruckInput
    trip?: tripCreateNestedManyWithoutTruckInput
    fleet_group?: fleet_groupCreateNestedOneWithoutTruckInput
    truck_status_event?: truck_status_eventCreateNestedManyWithoutTruckInput
  }

  export type truckUncheckedCreateInput = {
    id?: string
    plate_number: string
    vin?: string | null
    name?: string | null
    model?: string | null
    year?: number | null
    tire_config?: string | null
    fleet_group_id?: string | null
    created_at?: Date | string
    created_by?: string | null
    updated_by?: string | null
    alert_event?: alert_eventUncheckedCreateNestedManyWithoutTruckInput
    daily_route?: daily_routeUncheckedCreateNestedManyWithoutTruckInput
    device?: deviceUncheckedCreateNestedManyWithoutTruckInput
    device_status_event?: device_status_eventUncheckedCreateNestedManyWithoutTruckInput
    device_truck_assignment?: device_truck_assignmentUncheckedCreateNestedManyWithoutTruckInput
    fuel_level_event?: fuel_level_eventUncheckedCreateNestedManyWithoutTruckInput
    gps_position?: gps_positionUncheckedCreateNestedManyWithoutTruckInput
    hub_temperature_event?: hub_temperature_eventUncheckedCreateNestedManyWithoutTruckInput
    lock_event?: lock_eventUncheckedCreateNestedManyWithoutTruckInput
    sensor_data_raw?: sensor_data_rawUncheckedCreateNestedManyWithoutTruckInput
    speed_event?: speed_eventUncheckedCreateNestedManyWithoutTruckInput
    tire_position_config?: tire_position_configUncheckedCreateNestedManyWithoutTruckInput
    tire_pressure_event?: tire_pressure_eventUncheckedCreateNestedManyWithoutTruckInput
    trip?: tripUncheckedCreateNestedManyWithoutTruckInput
    truck_status_event?: truck_status_eventUncheckedCreateNestedManyWithoutTruckInput
  }

  export type truckUpdateInput = {
    id?: StringFieldUpdateOperationsInput | string
    plate_number?: StringFieldUpdateOperationsInput | string
    vin?: NullableStringFieldUpdateOperationsInput | string | null
    name?: NullableStringFieldUpdateOperationsInput | string | null
    model?: NullableStringFieldUpdateOperationsInput | string | null
    year?: NullableIntFieldUpdateOperationsInput | number | null
    tire_config?: NullableStringFieldUpdateOperationsInput | string | null
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    created_by?: NullableStringFieldUpdateOperationsInput | string | null
    updated_by?: NullableStringFieldUpdateOperationsInput | string | null
    alert_event?: alert_eventUpdateManyWithoutTruckNestedInput
    daily_route?: daily_routeUpdateManyWithoutTruckNestedInput
    device?: deviceUpdateManyWithoutTruckNestedInput
    device_status_event?: device_status_eventUpdateManyWithoutTruckNestedInput
    device_truck_assignment?: device_truck_assignmentUpdateManyWithoutTruckNestedInput
    fuel_level_event?: fuel_level_eventUpdateManyWithoutTruckNestedInput
    gps_position?: gps_positionUpdateManyWithoutTruckNestedInput
    hub_temperature_event?: hub_temperature_eventUpdateManyWithoutTruckNestedInput
    lock_event?: lock_eventUpdateManyWithoutTruckNestedInput
    sensor_data_raw?: sensor_data_rawUpdateManyWithoutTruckNestedInput
    speed_event?: speed_eventUpdateManyWithoutTruckNestedInput
    tire_position_config?: tire_position_configUpdateManyWithoutTruckNestedInput
    tire_pressure_event?: tire_pressure_eventUpdateManyWithoutTruckNestedInput
    trip?: tripUpdateManyWithoutTruckNestedInput
    fleet_group?: fleet_groupUpdateOneWithoutTruckNestedInput
    truck_status_event?: truck_status_eventUpdateManyWithoutTruckNestedInput
  }

  export type truckUncheckedUpdateInput = {
    id?: StringFieldUpdateOperationsInput | string
    plate_number?: StringFieldUpdateOperationsInput | string
    vin?: NullableStringFieldUpdateOperationsInput | string | null
    name?: NullableStringFieldUpdateOperationsInput | string | null
    model?: NullableStringFieldUpdateOperationsInput | string | null
    year?: NullableIntFieldUpdateOperationsInput | number | null
    tire_config?: NullableStringFieldUpdateOperationsInput | string | null
    fleet_group_id?: NullableStringFieldUpdateOperationsInput | string | null
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    created_by?: NullableStringFieldUpdateOperationsInput | string | null
    updated_by?: NullableStringFieldUpdateOperationsInput | string | null
    alert_event?: alert_eventUncheckedUpdateManyWithoutTruckNestedInput
    daily_route?: daily_routeUncheckedUpdateManyWithoutTruckNestedInput
    device?: deviceUncheckedUpdateManyWithoutTruckNestedInput
    device_status_event?: device_status_eventUncheckedUpdateManyWithoutTruckNestedInput
    device_truck_assignment?: device_truck_assignmentUncheckedUpdateManyWithoutTruckNestedInput
    fuel_level_event?: fuel_level_eventUncheckedUpdateManyWithoutTruckNestedInput
    gps_position?: gps_positionUncheckedUpdateManyWithoutTruckNestedInput
    hub_temperature_event?: hub_temperature_eventUncheckedUpdateManyWithoutTruckNestedInput
    lock_event?: lock_eventUncheckedUpdateManyWithoutTruckNestedInput
    sensor_data_raw?: sensor_data_rawUncheckedUpdateManyWithoutTruckNestedInput
    speed_event?: speed_eventUncheckedUpdateManyWithoutTruckNestedInput
    tire_position_config?: tire_position_configUncheckedUpdateManyWithoutTruckNestedInput
    tire_pressure_event?: tire_pressure_eventUncheckedUpdateManyWithoutTruckNestedInput
    trip?: tripUncheckedUpdateManyWithoutTruckNestedInput
    truck_status_event?: truck_status_eventUncheckedUpdateManyWithoutTruckNestedInput
  }

  export type truckCreateManyInput = {
    id?: string
    plate_number: string
    vin?: string | null
    name?: string | null
    model?: string | null
    year?: number | null
    tire_config?: string | null
    fleet_group_id?: string | null
    created_at?: Date | string
    created_by?: string | null
    updated_by?: string | null
  }

  export type truckUpdateManyMutationInput = {
    id?: StringFieldUpdateOperationsInput | string
    plate_number?: StringFieldUpdateOperationsInput | string
    vin?: NullableStringFieldUpdateOperationsInput | string | null
    name?: NullableStringFieldUpdateOperationsInput | string | null
    model?: NullableStringFieldUpdateOperationsInput | string | null
    year?: NullableIntFieldUpdateOperationsInput | number | null
    tire_config?: NullableStringFieldUpdateOperationsInput | string | null
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    created_by?: NullableStringFieldUpdateOperationsInput | string | null
    updated_by?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type truckUncheckedUpdateManyInput = {
    id?: StringFieldUpdateOperationsInput | string
    plate_number?: StringFieldUpdateOperationsInput | string
    vin?: NullableStringFieldUpdateOperationsInput | string | null
    name?: NullableStringFieldUpdateOperationsInput | string | null
    model?: NullableStringFieldUpdateOperationsInput | string | null
    year?: NullableIntFieldUpdateOperationsInput | number | null
    tire_config?: NullableStringFieldUpdateOperationsInput | string | null
    fleet_group_id?: NullableStringFieldUpdateOperationsInput | string | null
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    created_by?: NullableStringFieldUpdateOperationsInput | string | null
    updated_by?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type truck_status_eventCreateInput = {
    id?: string
    status: $Enums.truck_status
    note?: string | null
    changed_at?: Date | string
    created_by?: string | null
    truck: truckCreateNestedOneWithoutTruck_status_eventInput
  }

  export type truck_status_eventUncheckedCreateInput = {
    id?: string
    truck_id: string
    status: $Enums.truck_status
    note?: string | null
    changed_at?: Date | string
    created_by?: string | null
  }

  export type truck_status_eventUpdateInput = {
    id?: StringFieldUpdateOperationsInput | string
    status?: Enumtruck_statusFieldUpdateOperationsInput | $Enums.truck_status
    note?: NullableStringFieldUpdateOperationsInput | string | null
    changed_at?: DateTimeFieldUpdateOperationsInput | Date | string
    created_by?: NullableStringFieldUpdateOperationsInput | string | null
    truck?: truckUpdateOneRequiredWithoutTruck_status_eventNestedInput
  }

  export type truck_status_eventUncheckedUpdateInput = {
    id?: StringFieldUpdateOperationsInput | string
    truck_id?: StringFieldUpdateOperationsInput | string
    status?: Enumtruck_statusFieldUpdateOperationsInput | $Enums.truck_status
    note?: NullableStringFieldUpdateOperationsInput | string | null
    changed_at?: DateTimeFieldUpdateOperationsInput | Date | string
    created_by?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type truck_status_eventCreateManyInput = {
    id?: string
    truck_id: string
    status: $Enums.truck_status
    note?: string | null
    changed_at?: Date | string
    created_by?: string | null
  }

  export type truck_status_eventUpdateManyMutationInput = {
    id?: StringFieldUpdateOperationsInput | string
    status?: Enumtruck_statusFieldUpdateOperationsInput | $Enums.truck_status
    note?: NullableStringFieldUpdateOperationsInput | string | null
    changed_at?: DateTimeFieldUpdateOperationsInput | Date | string
    created_by?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type truck_status_eventUncheckedUpdateManyInput = {
    id?: StringFieldUpdateOperationsInput | string
    truck_id?: StringFieldUpdateOperationsInput | string
    status?: Enumtruck_statusFieldUpdateOperationsInput | $Enums.truck_status
    note?: NullableStringFieldUpdateOperationsInput | string | null
    changed_at?: DateTimeFieldUpdateOperationsInput | Date | string
    created_by?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type usersCreateInput = {
    id?: string
    username: string
    email?: string | null
    password_hash: string
    role?: string | null
    is_active?: boolean | null
    created_at?: Date | string | null
    updated_at?: Date | string | null
    device_truck_assignment_device_truck_assignment_assigned_byTousers?: device_truck_assignmentCreateNestedManyWithoutUsers_device_truck_assignment_assigned_byTousersInput
    device_truck_assignment_device_truck_assignment_removed_byTousers?: device_truck_assignmentCreateNestedManyWithoutUsers_device_truck_assignment_removed_byTousersInput
  }

  export type usersUncheckedCreateInput = {
    id?: string
    username: string
    email?: string | null
    password_hash: string
    role?: string | null
    is_active?: boolean | null
    created_at?: Date | string | null
    updated_at?: Date | string | null
    device_truck_assignment_device_truck_assignment_assigned_byTousers?: device_truck_assignmentUncheckedCreateNestedManyWithoutUsers_device_truck_assignment_assigned_byTousersInput
    device_truck_assignment_device_truck_assignment_removed_byTousers?: device_truck_assignmentUncheckedCreateNestedManyWithoutUsers_device_truck_assignment_removed_byTousersInput
  }

  export type usersUpdateInput = {
    id?: StringFieldUpdateOperationsInput | string
    username?: StringFieldUpdateOperationsInput | string
    email?: NullableStringFieldUpdateOperationsInput | string | null
    password_hash?: StringFieldUpdateOperationsInput | string
    role?: NullableStringFieldUpdateOperationsInput | string | null
    is_active?: NullableBoolFieldUpdateOperationsInput | boolean | null
    created_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updated_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    device_truck_assignment_device_truck_assignment_assigned_byTousers?: device_truck_assignmentUpdateManyWithoutUsers_device_truck_assignment_assigned_byTousersNestedInput
    device_truck_assignment_device_truck_assignment_removed_byTousers?: device_truck_assignmentUpdateManyWithoutUsers_device_truck_assignment_removed_byTousersNestedInput
  }

  export type usersUncheckedUpdateInput = {
    id?: StringFieldUpdateOperationsInput | string
    username?: StringFieldUpdateOperationsInput | string
    email?: NullableStringFieldUpdateOperationsInput | string | null
    password_hash?: StringFieldUpdateOperationsInput | string
    role?: NullableStringFieldUpdateOperationsInput | string | null
    is_active?: NullableBoolFieldUpdateOperationsInput | boolean | null
    created_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updated_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    device_truck_assignment_device_truck_assignment_assigned_byTousers?: device_truck_assignmentUncheckedUpdateManyWithoutUsers_device_truck_assignment_assigned_byTousersNestedInput
    device_truck_assignment_device_truck_assignment_removed_byTousers?: device_truck_assignmentUncheckedUpdateManyWithoutUsers_device_truck_assignment_removed_byTousersNestedInput
  }

  export type usersCreateManyInput = {
    id?: string
    username: string
    email?: string | null
    password_hash: string
    role?: string | null
    is_active?: boolean | null
    created_at?: Date | string | null
    updated_at?: Date | string | null
  }

  export type usersUpdateManyMutationInput = {
    id?: StringFieldUpdateOperationsInput | string
    username?: StringFieldUpdateOperationsInput | string
    email?: NullableStringFieldUpdateOperationsInput | string | null
    password_hash?: StringFieldUpdateOperationsInput | string
    role?: NullableStringFieldUpdateOperationsInput | string | null
    is_active?: NullableBoolFieldUpdateOperationsInput | boolean | null
    created_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updated_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type usersUncheckedUpdateManyInput = {
    id?: StringFieldUpdateOperationsInput | string
    username?: StringFieldUpdateOperationsInput | string
    email?: NullableStringFieldUpdateOperationsInput | string | null
    password_hash?: StringFieldUpdateOperationsInput | string
    role?: NullableStringFieldUpdateOperationsInput | string | null
    is_active?: NullableBoolFieldUpdateOperationsInput | boolean | null
    created_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updated_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type UuidFilter<$PrismaModel = never> = {
    equals?: string | StringFieldRefInput<$PrismaModel>
    in?: string[] | ListStringFieldRefInput<$PrismaModel>
    notIn?: string[] | ListStringFieldRefInput<$PrismaModel>
    lt?: string | StringFieldRefInput<$PrismaModel>
    lte?: string | StringFieldRefInput<$PrismaModel>
    gt?: string | StringFieldRefInput<$PrismaModel>
    gte?: string | StringFieldRefInput<$PrismaModel>
    mode?: QueryMode
    not?: NestedUuidFilter<$PrismaModel> | string
  }

  export type Enumalert_typeFilter<$PrismaModel = never> = {
    equals?: $Enums.alert_type | Enumalert_typeFieldRefInput<$PrismaModel>
    in?: $Enums.alert_type[] | ListEnumalert_typeFieldRefInput<$PrismaModel>
    notIn?: $Enums.alert_type[] | ListEnumalert_typeFieldRefInput<$PrismaModel>
    not?: NestedEnumalert_typeFilter<$PrismaModel> | $Enums.alert_type
  }

  export type IntNullableFilter<$PrismaModel = never> = {
    equals?: number | IntFieldRefInput<$PrismaModel> | null
    in?: number[] | ListIntFieldRefInput<$PrismaModel> | null
    notIn?: number[] | ListIntFieldRefInput<$PrismaModel> | null
    lt?: number | IntFieldRefInput<$PrismaModel>
    lte?: number | IntFieldRefInput<$PrismaModel>
    gt?: number | IntFieldRefInput<$PrismaModel>
    gte?: number | IntFieldRefInput<$PrismaModel>
    not?: NestedIntNullableFilter<$PrismaModel> | number | null
  }
  export type JsonNullableFilter<$PrismaModel = never> = 
    | PatchUndefined<
        Either<Required<JsonNullableFilterBase<$PrismaModel>>, Exclude<keyof Required<JsonNullableFilterBase<$PrismaModel>>, 'path'>>,
        Required<JsonNullableFilterBase<$PrismaModel>>
      >
    | OptionalFlat<Omit<Required<JsonNullableFilterBase<$PrismaModel>>, 'path'>>

  export type JsonNullableFilterBase<$PrismaModel = never> = {
    equals?: InputJsonValue | JsonFieldRefInput<$PrismaModel> | JsonNullValueFilter
    path?: string[]
    string_contains?: string | StringFieldRefInput<$PrismaModel>
    string_starts_with?: string | StringFieldRefInput<$PrismaModel>
    string_ends_with?: string | StringFieldRefInput<$PrismaModel>
    array_contains?: InputJsonValue | JsonFieldRefInput<$PrismaModel> | null
    array_starts_with?: InputJsonValue | JsonFieldRefInput<$PrismaModel> | null
    array_ends_with?: InputJsonValue | JsonFieldRefInput<$PrismaModel> | null
    lt?: InputJsonValue | JsonFieldRefInput<$PrismaModel>
    lte?: InputJsonValue | JsonFieldRefInput<$PrismaModel>
    gt?: InputJsonValue | JsonFieldRefInput<$PrismaModel>
    gte?: InputJsonValue | JsonFieldRefInput<$PrismaModel>
    not?: InputJsonValue | JsonFieldRefInput<$PrismaModel> | JsonNullValueFilter
  }

  export type DateTimeFilter<$PrismaModel = never> = {
    equals?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    in?: Date[] | string[] | ListDateTimeFieldRefInput<$PrismaModel>
    notIn?: Date[] | string[] | ListDateTimeFieldRefInput<$PrismaModel>
    lt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    lte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    not?: NestedDateTimeFilter<$PrismaModel> | Date | string
  }

  export type BoolFilter<$PrismaModel = never> = {
    equals?: boolean | BooleanFieldRefInput<$PrismaModel>
    not?: NestedBoolFilter<$PrismaModel> | boolean
  }

  export type UuidNullableFilter<$PrismaModel = never> = {
    equals?: string | StringFieldRefInput<$PrismaModel> | null
    in?: string[] | ListStringFieldRefInput<$PrismaModel> | null
    notIn?: string[] | ListStringFieldRefInput<$PrismaModel> | null
    lt?: string | StringFieldRefInput<$PrismaModel>
    lte?: string | StringFieldRefInput<$PrismaModel>
    gt?: string | StringFieldRefInput<$PrismaModel>
    gte?: string | StringFieldRefInput<$PrismaModel>
    mode?: QueryMode
    not?: NestedUuidNullableFilter<$PrismaModel> | string | null
  }

  export type TruckRelationFilter = {
    is?: truckWhereInput
    isNot?: truckWhereInput
  }

  export type SortOrderInput = {
    sort: SortOrder
    nulls?: NullsOrder
  }

  export type alert_eventCountOrderByAggregateInput = {
    id?: SortOrder
    truck_id?: SortOrder
    type?: SortOrder
    severity?: SortOrder
    detail?: SortOrder
    occurred_at?: SortOrder
    acknowledged?: SortOrder
    created_by?: SortOrder
  }

  export type alert_eventAvgOrderByAggregateInput = {
    severity?: SortOrder
  }

  export type alert_eventMaxOrderByAggregateInput = {
    id?: SortOrder
    truck_id?: SortOrder
    type?: SortOrder
    severity?: SortOrder
    occurred_at?: SortOrder
    acknowledged?: SortOrder
    created_by?: SortOrder
  }

  export type alert_eventMinOrderByAggregateInput = {
    id?: SortOrder
    truck_id?: SortOrder
    type?: SortOrder
    severity?: SortOrder
    occurred_at?: SortOrder
    acknowledged?: SortOrder
    created_by?: SortOrder
  }

  export type alert_eventSumOrderByAggregateInput = {
    severity?: SortOrder
  }

  export type UuidWithAggregatesFilter<$PrismaModel = never> = {
    equals?: string | StringFieldRefInput<$PrismaModel>
    in?: string[] | ListStringFieldRefInput<$PrismaModel>
    notIn?: string[] | ListStringFieldRefInput<$PrismaModel>
    lt?: string | StringFieldRefInput<$PrismaModel>
    lte?: string | StringFieldRefInput<$PrismaModel>
    gt?: string | StringFieldRefInput<$PrismaModel>
    gte?: string | StringFieldRefInput<$PrismaModel>
    mode?: QueryMode
    not?: NestedUuidWithAggregatesFilter<$PrismaModel> | string
    _count?: NestedIntFilter<$PrismaModel>
    _min?: NestedStringFilter<$PrismaModel>
    _max?: NestedStringFilter<$PrismaModel>
  }

  export type Enumalert_typeWithAggregatesFilter<$PrismaModel = never> = {
    equals?: $Enums.alert_type | Enumalert_typeFieldRefInput<$PrismaModel>
    in?: $Enums.alert_type[] | ListEnumalert_typeFieldRefInput<$PrismaModel>
    notIn?: $Enums.alert_type[] | ListEnumalert_typeFieldRefInput<$PrismaModel>
    not?: NestedEnumalert_typeWithAggregatesFilter<$PrismaModel> | $Enums.alert_type
    _count?: NestedIntFilter<$PrismaModel>
    _min?: NestedEnumalert_typeFilter<$PrismaModel>
    _max?: NestedEnumalert_typeFilter<$PrismaModel>
  }

  export type IntNullableWithAggregatesFilter<$PrismaModel = never> = {
    equals?: number | IntFieldRefInput<$PrismaModel> | null
    in?: number[] | ListIntFieldRefInput<$PrismaModel> | null
    notIn?: number[] | ListIntFieldRefInput<$PrismaModel> | null
    lt?: number | IntFieldRefInput<$PrismaModel>
    lte?: number | IntFieldRefInput<$PrismaModel>
    gt?: number | IntFieldRefInput<$PrismaModel>
    gte?: number | IntFieldRefInput<$PrismaModel>
    not?: NestedIntNullableWithAggregatesFilter<$PrismaModel> | number | null
    _count?: NestedIntNullableFilter<$PrismaModel>
    _avg?: NestedFloatNullableFilter<$PrismaModel>
    _sum?: NestedIntNullableFilter<$PrismaModel>
    _min?: NestedIntNullableFilter<$PrismaModel>
    _max?: NestedIntNullableFilter<$PrismaModel>
  }
  export type JsonNullableWithAggregatesFilter<$PrismaModel = never> = 
    | PatchUndefined<
        Either<Required<JsonNullableWithAggregatesFilterBase<$PrismaModel>>, Exclude<keyof Required<JsonNullableWithAggregatesFilterBase<$PrismaModel>>, 'path'>>,
        Required<JsonNullableWithAggregatesFilterBase<$PrismaModel>>
      >
    | OptionalFlat<Omit<Required<JsonNullableWithAggregatesFilterBase<$PrismaModel>>, 'path'>>

  export type JsonNullableWithAggregatesFilterBase<$PrismaModel = never> = {
    equals?: InputJsonValue | JsonFieldRefInput<$PrismaModel> | JsonNullValueFilter
    path?: string[]
    string_contains?: string | StringFieldRefInput<$PrismaModel>
    string_starts_with?: string | StringFieldRefInput<$PrismaModel>
    string_ends_with?: string | StringFieldRefInput<$PrismaModel>
    array_contains?: InputJsonValue | JsonFieldRefInput<$PrismaModel> | null
    array_starts_with?: InputJsonValue | JsonFieldRefInput<$PrismaModel> | null
    array_ends_with?: InputJsonValue | JsonFieldRefInput<$PrismaModel> | null
    lt?: InputJsonValue | JsonFieldRefInput<$PrismaModel>
    lte?: InputJsonValue | JsonFieldRefInput<$PrismaModel>
    gt?: InputJsonValue | JsonFieldRefInput<$PrismaModel>
    gte?: InputJsonValue | JsonFieldRefInput<$PrismaModel>
    not?: InputJsonValue | JsonFieldRefInput<$PrismaModel> | JsonNullValueFilter
    _count?: NestedIntNullableFilter<$PrismaModel>
    _min?: NestedJsonNullableFilter<$PrismaModel>
    _max?: NestedJsonNullableFilter<$PrismaModel>
  }

  export type DateTimeWithAggregatesFilter<$PrismaModel = never> = {
    equals?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    in?: Date[] | string[] | ListDateTimeFieldRefInput<$PrismaModel>
    notIn?: Date[] | string[] | ListDateTimeFieldRefInput<$PrismaModel>
    lt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    lte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    not?: NestedDateTimeWithAggregatesFilter<$PrismaModel> | Date | string
    _count?: NestedIntFilter<$PrismaModel>
    _min?: NestedDateTimeFilter<$PrismaModel>
    _max?: NestedDateTimeFilter<$PrismaModel>
  }

  export type BoolWithAggregatesFilter<$PrismaModel = never> = {
    equals?: boolean | BooleanFieldRefInput<$PrismaModel>
    not?: NestedBoolWithAggregatesFilter<$PrismaModel> | boolean
    _count?: NestedIntFilter<$PrismaModel>
    _min?: NestedBoolFilter<$PrismaModel>
    _max?: NestedBoolFilter<$PrismaModel>
  }

  export type UuidNullableWithAggregatesFilter<$PrismaModel = never> = {
    equals?: string | StringFieldRefInput<$PrismaModel> | null
    in?: string[] | ListStringFieldRefInput<$PrismaModel> | null
    notIn?: string[] | ListStringFieldRefInput<$PrismaModel> | null
    lt?: string | StringFieldRefInput<$PrismaModel>
    lte?: string | StringFieldRefInput<$PrismaModel>
    gt?: string | StringFieldRefInput<$PrismaModel>
    gte?: string | StringFieldRefInput<$PrismaModel>
    mode?: QueryMode
    not?: NestedUuidNullableWithAggregatesFilter<$PrismaModel> | string | null
    _count?: NestedIntNullableFilter<$PrismaModel>
    _min?: NestedStringNullableFilter<$PrismaModel>
    _max?: NestedStringNullableFilter<$PrismaModel>
  }

  export type IntFilter<$PrismaModel = never> = {
    equals?: number | IntFieldRefInput<$PrismaModel>
    in?: number[] | ListIntFieldRefInput<$PrismaModel>
    notIn?: number[] | ListIntFieldRefInput<$PrismaModel>
    lt?: number | IntFieldRefInput<$PrismaModel>
    lte?: number | IntFieldRefInput<$PrismaModel>
    gt?: number | IntFieldRefInput<$PrismaModel>
    gte?: number | IntFieldRefInput<$PrismaModel>
    not?: NestedIntFilter<$PrismaModel> | number
  }

  export type daily_routeTruck_idRoute_dateCompoundUniqueInput = {
    truck_id: string
    route_date: Date | string
  }

  export type daily_routeCountOrderByAggregateInput = {
    id?: SortOrder
    truck_id?: SortOrder
    route_date?: SortOrder
    point_count?: SortOrder
    generated_at?: SortOrder
    created_by?: SortOrder
  }

  export type daily_routeAvgOrderByAggregateInput = {
    point_count?: SortOrder
  }

  export type daily_routeMaxOrderByAggregateInput = {
    id?: SortOrder
    truck_id?: SortOrder
    route_date?: SortOrder
    point_count?: SortOrder
    generated_at?: SortOrder
    created_by?: SortOrder
  }

  export type daily_routeMinOrderByAggregateInput = {
    id?: SortOrder
    truck_id?: SortOrder
    route_date?: SortOrder
    point_count?: SortOrder
    generated_at?: SortOrder
    created_by?: SortOrder
  }

  export type daily_routeSumOrderByAggregateInput = {
    point_count?: SortOrder
  }

  export type IntWithAggregatesFilter<$PrismaModel = never> = {
    equals?: number | IntFieldRefInput<$PrismaModel>
    in?: number[] | ListIntFieldRefInput<$PrismaModel>
    notIn?: number[] | ListIntFieldRefInput<$PrismaModel>
    lt?: number | IntFieldRefInput<$PrismaModel>
    lte?: number | IntFieldRefInput<$PrismaModel>
    gt?: number | IntFieldRefInput<$PrismaModel>
    gte?: number | IntFieldRefInput<$PrismaModel>
    not?: NestedIntWithAggregatesFilter<$PrismaModel> | number
    _count?: NestedIntFilter<$PrismaModel>
    _avg?: NestedFloatFilter<$PrismaModel>
    _sum?: NestedIntFilter<$PrismaModel>
    _min?: NestedIntFilter<$PrismaModel>
    _max?: NestedIntFilter<$PrismaModel>
  }

  export type StringFilter<$PrismaModel = never> = {
    equals?: string | StringFieldRefInput<$PrismaModel>
    in?: string[] | ListStringFieldRefInput<$PrismaModel>
    notIn?: string[] | ListStringFieldRefInput<$PrismaModel>
    lt?: string | StringFieldRefInput<$PrismaModel>
    lte?: string | StringFieldRefInput<$PrismaModel>
    gt?: string | StringFieldRefInput<$PrismaModel>
    gte?: string | StringFieldRefInput<$PrismaModel>
    contains?: string | StringFieldRefInput<$PrismaModel>
    startsWith?: string | StringFieldRefInput<$PrismaModel>
    endsWith?: string | StringFieldRefInput<$PrismaModel>
    mode?: QueryMode
    not?: NestedStringFilter<$PrismaModel> | string
  }

  export type StringNullableFilter<$PrismaModel = never> = {
    equals?: string | StringFieldRefInput<$PrismaModel> | null
    in?: string[] | ListStringFieldRefInput<$PrismaModel> | null
    notIn?: string[] | ListStringFieldRefInput<$PrismaModel> | null
    lt?: string | StringFieldRefInput<$PrismaModel>
    lte?: string | StringFieldRefInput<$PrismaModel>
    gt?: string | StringFieldRefInput<$PrismaModel>
    gte?: string | StringFieldRefInput<$PrismaModel>
    contains?: string | StringFieldRefInput<$PrismaModel>
    startsWith?: string | StringFieldRefInput<$PrismaModel>
    endsWith?: string | StringFieldRefInput<$PrismaModel>
    mode?: QueryMode
    not?: NestedStringNullableFilter<$PrismaModel> | string | null
  }

  export type DateTimeNullableFilter<$PrismaModel = never> = {
    equals?: Date | string | DateTimeFieldRefInput<$PrismaModel> | null
    in?: Date[] | string[] | ListDateTimeFieldRefInput<$PrismaModel> | null
    notIn?: Date[] | string[] | ListDateTimeFieldRefInput<$PrismaModel> | null
    lt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    lte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    not?: NestedDateTimeNullableFilter<$PrismaModel> | Date | string | null
  }

  export type Device_status_eventListRelationFilter = {
    every?: device_status_eventWhereInput
    some?: device_status_eventWhereInput
    none?: device_status_eventWhereInput
  }

  export type Device_truck_assignmentListRelationFilter = {
    every?: device_truck_assignmentWhereInput
    some?: device_truck_assignmentWhereInput
    none?: device_truck_assignmentWhereInput
  }

  export type Gps_positionListRelationFilter = {
    every?: gps_positionWhereInput
    some?: gps_positionWhereInput
    none?: gps_positionWhereInput
  }

  export type Hub_temperature_eventListRelationFilter = {
    every?: hub_temperature_eventWhereInput
    some?: hub_temperature_eventWhereInput
    none?: hub_temperature_eventWhereInput
  }

  export type Lock_eventListRelationFilter = {
    every?: lock_eventWhereInput
    some?: lock_eventWhereInput
    none?: lock_eventWhereInput
  }

  export type SensorListRelationFilter = {
    every?: sensorWhereInput
    some?: sensorWhereInput
    none?: sensorWhereInput
  }

  export type Tire_pressure_eventListRelationFilter = {
    every?: tire_pressure_eventWhereInput
    some?: tire_pressure_eventWhereInput
    none?: tire_pressure_eventWhereInput
  }

  export type device_status_eventOrderByRelationAggregateInput = {
    _count?: SortOrder
  }

  export type device_truck_assignmentOrderByRelationAggregateInput = {
    _count?: SortOrder
  }

  export type gps_positionOrderByRelationAggregateInput = {
    _count?: SortOrder
  }

  export type hub_temperature_eventOrderByRelationAggregateInput = {
    _count?: SortOrder
  }

  export type lock_eventOrderByRelationAggregateInput = {
    _count?: SortOrder
  }

  export type sensorOrderByRelationAggregateInput = {
    _count?: SortOrder
  }

  export type tire_pressure_eventOrderByRelationAggregateInput = {
    _count?: SortOrder
  }

  export type deviceCountOrderByAggregateInput = {
    id?: SortOrder
    truck_id?: SortOrder
    sn?: SortOrder
    sim_number?: SortOrder
    installed_at?: SortOrder
    removed_at?: SortOrder
    created_by?: SortOrder
    updated_by?: SortOrder
  }

  export type deviceMaxOrderByAggregateInput = {
    id?: SortOrder
    truck_id?: SortOrder
    sn?: SortOrder
    sim_number?: SortOrder
    installed_at?: SortOrder
    removed_at?: SortOrder
    created_by?: SortOrder
    updated_by?: SortOrder
  }

  export type deviceMinOrderByAggregateInput = {
    id?: SortOrder
    truck_id?: SortOrder
    sn?: SortOrder
    sim_number?: SortOrder
    installed_at?: SortOrder
    removed_at?: SortOrder
    created_by?: SortOrder
    updated_by?: SortOrder
  }

  export type StringWithAggregatesFilter<$PrismaModel = never> = {
    equals?: string | StringFieldRefInput<$PrismaModel>
    in?: string[] | ListStringFieldRefInput<$PrismaModel>
    notIn?: string[] | ListStringFieldRefInput<$PrismaModel>
    lt?: string | StringFieldRefInput<$PrismaModel>
    lte?: string | StringFieldRefInput<$PrismaModel>
    gt?: string | StringFieldRefInput<$PrismaModel>
    gte?: string | StringFieldRefInput<$PrismaModel>
    contains?: string | StringFieldRefInput<$PrismaModel>
    startsWith?: string | StringFieldRefInput<$PrismaModel>
    endsWith?: string | StringFieldRefInput<$PrismaModel>
    mode?: QueryMode
    not?: NestedStringWithAggregatesFilter<$PrismaModel> | string
    _count?: NestedIntFilter<$PrismaModel>
    _min?: NestedStringFilter<$PrismaModel>
    _max?: NestedStringFilter<$PrismaModel>
  }

  export type StringNullableWithAggregatesFilter<$PrismaModel = never> = {
    equals?: string | StringFieldRefInput<$PrismaModel> | null
    in?: string[] | ListStringFieldRefInput<$PrismaModel> | null
    notIn?: string[] | ListStringFieldRefInput<$PrismaModel> | null
    lt?: string | StringFieldRefInput<$PrismaModel>
    lte?: string | StringFieldRefInput<$PrismaModel>
    gt?: string | StringFieldRefInput<$PrismaModel>
    gte?: string | StringFieldRefInput<$PrismaModel>
    contains?: string | StringFieldRefInput<$PrismaModel>
    startsWith?: string | StringFieldRefInput<$PrismaModel>
    endsWith?: string | StringFieldRefInput<$PrismaModel>
    mode?: QueryMode
    not?: NestedStringNullableWithAggregatesFilter<$PrismaModel> | string | null
    _count?: NestedIntNullableFilter<$PrismaModel>
    _min?: NestedStringNullableFilter<$PrismaModel>
    _max?: NestedStringNullableFilter<$PrismaModel>
  }

  export type DateTimeNullableWithAggregatesFilter<$PrismaModel = never> = {
    equals?: Date | string | DateTimeFieldRefInput<$PrismaModel> | null
    in?: Date[] | string[] | ListDateTimeFieldRefInput<$PrismaModel> | null
    notIn?: Date[] | string[] | ListDateTimeFieldRefInput<$PrismaModel> | null
    lt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    lte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    not?: NestedDateTimeNullableWithAggregatesFilter<$PrismaModel> | Date | string | null
    _count?: NestedIntNullableFilter<$PrismaModel>
    _min?: NestedDateTimeNullableFilter<$PrismaModel>
    _max?: NestedDateTimeNullableFilter<$PrismaModel>
  }

  export type DeviceRelationFilter = {
    is?: deviceWhereInput
    isNot?: deviceWhereInput
  }

  export type device_status_eventCountOrderByAggregateInput = {
    id?: SortOrder
    device_id?: SortOrder
    truck_id?: SortOrder
    host_bat?: SortOrder
    repeater1_bat?: SortOrder
    repeater2_bat?: SortOrder
    lock_state?: SortOrder
    reported_at?: SortOrder
    created_by?: SortOrder
  }

  export type device_status_eventAvgOrderByAggregateInput = {
    host_bat?: SortOrder
    repeater1_bat?: SortOrder
    repeater2_bat?: SortOrder
    lock_state?: SortOrder
  }

  export type device_status_eventMaxOrderByAggregateInput = {
    id?: SortOrder
    device_id?: SortOrder
    truck_id?: SortOrder
    host_bat?: SortOrder
    repeater1_bat?: SortOrder
    repeater2_bat?: SortOrder
    lock_state?: SortOrder
    reported_at?: SortOrder
    created_by?: SortOrder
  }

  export type device_status_eventMinOrderByAggregateInput = {
    id?: SortOrder
    device_id?: SortOrder
    truck_id?: SortOrder
    host_bat?: SortOrder
    repeater1_bat?: SortOrder
    repeater2_bat?: SortOrder
    lock_state?: SortOrder
    reported_at?: SortOrder
    created_by?: SortOrder
  }

  export type device_status_eventSumOrderByAggregateInput = {
    host_bat?: SortOrder
    repeater1_bat?: SortOrder
    repeater2_bat?: SortOrder
    lock_state?: SortOrder
  }

  export type BoolNullableFilter<$PrismaModel = never> = {
    equals?: boolean | BooleanFieldRefInput<$PrismaModel> | null
    not?: NestedBoolNullableFilter<$PrismaModel> | boolean | null
  }

  export type UsersNullableRelationFilter = {
    is?: usersWhereInput | null
    isNot?: usersWhereInput | null
  }

  export type DeviceNullableRelationFilter = {
    is?: deviceWhereInput | null
    isNot?: deviceWhereInput | null
  }

  export type TruckNullableRelationFilter = {
    is?: truckWhereInput | null
    isNot?: truckWhereInput | null
  }

  export type device_truck_assignmentCountOrderByAggregateInput = {
    id?: SortOrder
    device_id?: SortOrder
    truck_id?: SortOrder
    assigned_at?: SortOrder
    assigned_by?: SortOrder
    removed_at?: SortOrder
    removed_by?: SortOrder
    is_active?: SortOrder
  }

  export type device_truck_assignmentMaxOrderByAggregateInput = {
    id?: SortOrder
    device_id?: SortOrder
    truck_id?: SortOrder
    assigned_at?: SortOrder
    assigned_by?: SortOrder
    removed_at?: SortOrder
    removed_by?: SortOrder
    is_active?: SortOrder
  }

  export type device_truck_assignmentMinOrderByAggregateInput = {
    id?: SortOrder
    device_id?: SortOrder
    truck_id?: SortOrder
    assigned_at?: SortOrder
    assigned_by?: SortOrder
    removed_at?: SortOrder
    removed_by?: SortOrder
    is_active?: SortOrder
  }

  export type BoolNullableWithAggregatesFilter<$PrismaModel = never> = {
    equals?: boolean | BooleanFieldRefInput<$PrismaModel> | null
    not?: NestedBoolNullableWithAggregatesFilter<$PrismaModel> | boolean | null
    _count?: NestedIntNullableFilter<$PrismaModel>
    _min?: NestedBoolNullableFilter<$PrismaModel>
    _max?: NestedBoolNullableFilter<$PrismaModel>
  }

  export type TruckListRelationFilter = {
    every?: truckWhereInput
    some?: truckWhereInput
    none?: truckWhereInput
  }

  export type truckOrderByRelationAggregateInput = {
    _count?: SortOrder
  }

  export type fleet_groupCountOrderByAggregateInput = {
    id?: SortOrder
    name?: SortOrder
    site?: SortOrder
    description?: SortOrder
    created_at?: SortOrder
    created_by?: SortOrder
    updated_by?: SortOrder
  }

  export type fleet_groupMaxOrderByAggregateInput = {
    id?: SortOrder
    name?: SortOrder
    site?: SortOrder
    description?: SortOrder
    created_at?: SortOrder
    created_by?: SortOrder
    updated_by?: SortOrder
  }

  export type fleet_groupMinOrderByAggregateInput = {
    id?: SortOrder
    name?: SortOrder
    site?: SortOrder
    description?: SortOrder
    created_at?: SortOrder
    created_by?: SortOrder
    updated_by?: SortOrder
  }

  export type FloatNullableFilter<$PrismaModel = never> = {
    equals?: number | FloatFieldRefInput<$PrismaModel> | null
    in?: number[] | ListFloatFieldRefInput<$PrismaModel> | null
    notIn?: number[] | ListFloatFieldRefInput<$PrismaModel> | null
    lt?: number | FloatFieldRefInput<$PrismaModel>
    lte?: number | FloatFieldRefInput<$PrismaModel>
    gt?: number | FloatFieldRefInput<$PrismaModel>
    gte?: number | FloatFieldRefInput<$PrismaModel>
    not?: NestedFloatNullableFilter<$PrismaModel> | number | null
  }

  export type fuel_level_eventCountOrderByAggregateInput = {
    id?: SortOrder
    truck_id?: SortOrder
    fuel_percent?: SortOrder
    changed_at?: SortOrder
    source?: SortOrder
    created_by?: SortOrder
  }

  export type fuel_level_eventAvgOrderByAggregateInput = {
    fuel_percent?: SortOrder
  }

  export type fuel_level_eventMaxOrderByAggregateInput = {
    id?: SortOrder
    truck_id?: SortOrder
    fuel_percent?: SortOrder
    changed_at?: SortOrder
    source?: SortOrder
    created_by?: SortOrder
  }

  export type fuel_level_eventMinOrderByAggregateInput = {
    id?: SortOrder
    truck_id?: SortOrder
    fuel_percent?: SortOrder
    changed_at?: SortOrder
    source?: SortOrder
    created_by?: SortOrder
  }

  export type fuel_level_eventSumOrderByAggregateInput = {
    fuel_percent?: SortOrder
  }

  export type FloatNullableWithAggregatesFilter<$PrismaModel = never> = {
    equals?: number | FloatFieldRefInput<$PrismaModel> | null
    in?: number[] | ListFloatFieldRefInput<$PrismaModel> | null
    notIn?: number[] | ListFloatFieldRefInput<$PrismaModel> | null
    lt?: number | FloatFieldRefInput<$PrismaModel>
    lte?: number | FloatFieldRefInput<$PrismaModel>
    gt?: number | FloatFieldRefInput<$PrismaModel>
    gte?: number | FloatFieldRefInput<$PrismaModel>
    not?: NestedFloatNullableWithAggregatesFilter<$PrismaModel> | number | null
    _count?: NestedIntNullableFilter<$PrismaModel>
    _avg?: NestedFloatNullableFilter<$PrismaModel>
    _sum?: NestedFloatNullableFilter<$PrismaModel>
    _min?: NestedFloatNullableFilter<$PrismaModel>
    _max?: NestedFloatNullableFilter<$PrismaModel>
  }

  export type geofenceCountOrderByAggregateInput = {
    id?: SortOrder
    name?: SortOrder
    created_by?: SortOrder
    created_at?: SortOrder
  }

  export type geofenceMaxOrderByAggregateInput = {
    id?: SortOrder
    name?: SortOrder
    created_by?: SortOrder
    created_at?: SortOrder
  }

  export type geofenceMinOrderByAggregateInput = {
    id?: SortOrder
    name?: SortOrder
    created_by?: SortOrder
    created_at?: SortOrder
  }

  export type BigIntFilter<$PrismaModel = never> = {
    equals?: bigint | number | BigIntFieldRefInput<$PrismaModel>
    in?: bigint[] | number[] | ListBigIntFieldRefInput<$PrismaModel>
    notIn?: bigint[] | number[] | ListBigIntFieldRefInput<$PrismaModel>
    lt?: bigint | number | BigIntFieldRefInput<$PrismaModel>
    lte?: bigint | number | BigIntFieldRefInput<$PrismaModel>
    gt?: bigint | number | BigIntFieldRefInput<$PrismaModel>
    gte?: bigint | number | BigIntFieldRefInput<$PrismaModel>
    not?: NestedBigIntFilter<$PrismaModel> | bigint | number
  }

  export type gps_positionIdTsCompoundUniqueInput = {
    id: bigint | number
    ts: Date | string
  }

  export type gps_positionCountOrderByAggregateInput = {
    id?: SortOrder
    device_id?: SortOrder
    truck_id?: SortOrder
    ts?: SortOrder
    speed_kph?: SortOrder
    heading_deg?: SortOrder
    hdop?: SortOrder
    source?: SortOrder
  }

  export type gps_positionAvgOrderByAggregateInput = {
    id?: SortOrder
    speed_kph?: SortOrder
    heading_deg?: SortOrder
    hdop?: SortOrder
  }

  export type gps_positionMaxOrderByAggregateInput = {
    id?: SortOrder
    device_id?: SortOrder
    truck_id?: SortOrder
    ts?: SortOrder
    speed_kph?: SortOrder
    heading_deg?: SortOrder
    hdop?: SortOrder
    source?: SortOrder
  }

  export type gps_positionMinOrderByAggregateInput = {
    id?: SortOrder
    device_id?: SortOrder
    truck_id?: SortOrder
    ts?: SortOrder
    speed_kph?: SortOrder
    heading_deg?: SortOrder
    hdop?: SortOrder
    source?: SortOrder
  }

  export type gps_positionSumOrderByAggregateInput = {
    id?: SortOrder
    speed_kph?: SortOrder
    heading_deg?: SortOrder
    hdop?: SortOrder
  }

  export type BigIntWithAggregatesFilter<$PrismaModel = never> = {
    equals?: bigint | number | BigIntFieldRefInput<$PrismaModel>
    in?: bigint[] | number[] | ListBigIntFieldRefInput<$PrismaModel>
    notIn?: bigint[] | number[] | ListBigIntFieldRefInput<$PrismaModel>
    lt?: bigint | number | BigIntFieldRefInput<$PrismaModel>
    lte?: bigint | number | BigIntFieldRefInput<$PrismaModel>
    gt?: bigint | number | BigIntFieldRefInput<$PrismaModel>
    gte?: bigint | number | BigIntFieldRefInput<$PrismaModel>
    not?: NestedBigIntWithAggregatesFilter<$PrismaModel> | bigint | number
    _count?: NestedIntFilter<$PrismaModel>
    _avg?: NestedFloatFilter<$PrismaModel>
    _sum?: NestedBigIntFilter<$PrismaModel>
    _min?: NestedBigIntFilter<$PrismaModel>
    _max?: NestedBigIntFilter<$PrismaModel>
  }

  export type hub_temperature_eventCountOrderByAggregateInput = {
    id?: SortOrder
    device_id?: SortOrder
    truck_id?: SortOrder
    hub_no?: SortOrder
    temp_celsius?: SortOrder
    ex_type?: SortOrder
    battery_level?: SortOrder
    changed_at?: SortOrder
    created_by?: SortOrder
  }

  export type hub_temperature_eventAvgOrderByAggregateInput = {
    hub_no?: SortOrder
    temp_celsius?: SortOrder
    battery_level?: SortOrder
  }

  export type hub_temperature_eventMaxOrderByAggregateInput = {
    id?: SortOrder
    device_id?: SortOrder
    truck_id?: SortOrder
    hub_no?: SortOrder
    temp_celsius?: SortOrder
    ex_type?: SortOrder
    battery_level?: SortOrder
    changed_at?: SortOrder
    created_by?: SortOrder
  }

  export type hub_temperature_eventMinOrderByAggregateInput = {
    id?: SortOrder
    device_id?: SortOrder
    truck_id?: SortOrder
    hub_no?: SortOrder
    temp_celsius?: SortOrder
    ex_type?: SortOrder
    battery_level?: SortOrder
    changed_at?: SortOrder
    created_by?: SortOrder
  }

  export type hub_temperature_eventSumOrderByAggregateInput = {
    hub_no?: SortOrder
    temp_celsius?: SortOrder
    battery_level?: SortOrder
  }

  export type lock_eventCountOrderByAggregateInput = {
    id?: SortOrder
    device_id?: SortOrder
    truck_id?: SortOrder
    is_lock?: SortOrder
    reported_at?: SortOrder
    created_by?: SortOrder
  }

  export type lock_eventAvgOrderByAggregateInput = {
    is_lock?: SortOrder
  }

  export type lock_eventMaxOrderByAggregateInput = {
    id?: SortOrder
    device_id?: SortOrder
    truck_id?: SortOrder
    is_lock?: SortOrder
    reported_at?: SortOrder
    created_by?: SortOrder
  }

  export type lock_eventMinOrderByAggregateInput = {
    id?: SortOrder
    device_id?: SortOrder
    truck_id?: SortOrder
    is_lock?: SortOrder
    reported_at?: SortOrder
    created_by?: SortOrder
  }

  export type lock_eventSumOrderByAggregateInput = {
    is_lock?: SortOrder
  }

  export type sensorCountOrderByAggregateInput = {
    id?: SortOrder
    device_id?: SortOrder
    type?: SortOrder
    position_no?: SortOrder
    sn?: SortOrder
    installed_at?: SortOrder
    removed_at?: SortOrder
    created_by?: SortOrder
    updated_by?: SortOrder
  }

  export type sensorAvgOrderByAggregateInput = {
    position_no?: SortOrder
  }

  export type sensorMaxOrderByAggregateInput = {
    id?: SortOrder
    device_id?: SortOrder
    type?: SortOrder
    position_no?: SortOrder
    sn?: SortOrder
    installed_at?: SortOrder
    removed_at?: SortOrder
    created_by?: SortOrder
    updated_by?: SortOrder
  }

  export type sensorMinOrderByAggregateInput = {
    id?: SortOrder
    device_id?: SortOrder
    type?: SortOrder
    position_no?: SortOrder
    sn?: SortOrder
    installed_at?: SortOrder
    removed_at?: SortOrder
    created_by?: SortOrder
    updated_by?: SortOrder
  }

  export type sensorSumOrderByAggregateInput = {
    position_no?: SortOrder
  }
  export type JsonFilter<$PrismaModel = never> = 
    | PatchUndefined<
        Either<Required<JsonFilterBase<$PrismaModel>>, Exclude<keyof Required<JsonFilterBase<$PrismaModel>>, 'path'>>,
        Required<JsonFilterBase<$PrismaModel>>
      >
    | OptionalFlat<Omit<Required<JsonFilterBase<$PrismaModel>>, 'path'>>

  export type JsonFilterBase<$PrismaModel = never> = {
    equals?: InputJsonValue | JsonFieldRefInput<$PrismaModel> | JsonNullValueFilter
    path?: string[]
    string_contains?: string | StringFieldRefInput<$PrismaModel>
    string_starts_with?: string | StringFieldRefInput<$PrismaModel>
    string_ends_with?: string | StringFieldRefInput<$PrismaModel>
    array_contains?: InputJsonValue | JsonFieldRefInput<$PrismaModel> | null
    array_starts_with?: InputJsonValue | JsonFieldRefInput<$PrismaModel> | null
    array_ends_with?: InputJsonValue | JsonFieldRefInput<$PrismaModel> | null
    lt?: InputJsonValue | JsonFieldRefInput<$PrismaModel>
    lte?: InputJsonValue | JsonFieldRefInput<$PrismaModel>
    gt?: InputJsonValue | JsonFieldRefInput<$PrismaModel>
    gte?: InputJsonValue | JsonFieldRefInput<$PrismaModel>
    not?: InputJsonValue | JsonFieldRefInput<$PrismaModel> | JsonNullValueFilter
  }

  export type Sensor_processing_queueListRelationFilter = {
    every?: sensor_processing_queueWhereInput
    some?: sensor_processing_queueWhereInput
    none?: sensor_processing_queueWhereInput
  }

  export type sensor_processing_queueOrderByRelationAggregateInput = {
    _count?: SortOrder
  }

  export type sensor_data_rawCountOrderByAggregateInput = {
    id?: SortOrder
    device_sn?: SortOrder
    cmd_type?: SortOrder
    truck_id?: SortOrder
    tire_no?: SortOrder
    raw_json?: SortOrder
    processed?: SortOrder
    received_at?: SortOrder
    processed_at?: SortOrder
  }

  export type sensor_data_rawAvgOrderByAggregateInput = {
    tire_no?: SortOrder
  }

  export type sensor_data_rawMaxOrderByAggregateInput = {
    id?: SortOrder
    device_sn?: SortOrder
    cmd_type?: SortOrder
    truck_id?: SortOrder
    tire_no?: SortOrder
    processed?: SortOrder
    received_at?: SortOrder
    processed_at?: SortOrder
  }

  export type sensor_data_rawMinOrderByAggregateInput = {
    id?: SortOrder
    device_sn?: SortOrder
    cmd_type?: SortOrder
    truck_id?: SortOrder
    tire_no?: SortOrder
    processed?: SortOrder
    received_at?: SortOrder
    processed_at?: SortOrder
  }

  export type sensor_data_rawSumOrderByAggregateInput = {
    tire_no?: SortOrder
  }
  export type JsonWithAggregatesFilter<$PrismaModel = never> = 
    | PatchUndefined<
        Either<Required<JsonWithAggregatesFilterBase<$PrismaModel>>, Exclude<keyof Required<JsonWithAggregatesFilterBase<$PrismaModel>>, 'path'>>,
        Required<JsonWithAggregatesFilterBase<$PrismaModel>>
      >
    | OptionalFlat<Omit<Required<JsonWithAggregatesFilterBase<$PrismaModel>>, 'path'>>

  export type JsonWithAggregatesFilterBase<$PrismaModel = never> = {
    equals?: InputJsonValue | JsonFieldRefInput<$PrismaModel> | JsonNullValueFilter
    path?: string[]
    string_contains?: string | StringFieldRefInput<$PrismaModel>
    string_starts_with?: string | StringFieldRefInput<$PrismaModel>
    string_ends_with?: string | StringFieldRefInput<$PrismaModel>
    array_contains?: InputJsonValue | JsonFieldRefInput<$PrismaModel> | null
    array_starts_with?: InputJsonValue | JsonFieldRefInput<$PrismaModel> | null
    array_ends_with?: InputJsonValue | JsonFieldRefInput<$PrismaModel> | null
    lt?: InputJsonValue | JsonFieldRefInput<$PrismaModel>
    lte?: InputJsonValue | JsonFieldRefInput<$PrismaModel>
    gt?: InputJsonValue | JsonFieldRefInput<$PrismaModel>
    gte?: InputJsonValue | JsonFieldRefInput<$PrismaModel>
    not?: InputJsonValue | JsonFieldRefInput<$PrismaModel> | JsonNullValueFilter
    _count?: NestedIntFilter<$PrismaModel>
    _min?: NestedJsonFilter<$PrismaModel>
    _max?: NestedJsonFilter<$PrismaModel>
  }

  export type Sensor_data_rawNullableRelationFilter = {
    is?: sensor_data_rawWhereInput | null
    isNot?: sensor_data_rawWhereInput | null
  }

  export type sensor_processing_queueCountOrderByAggregateInput = {
    id?: SortOrder
    raw_data_id?: SortOrder
    priority?: SortOrder
    attempts?: SortOrder
    max_attempts?: SortOrder
    error_message?: SortOrder
    created_at?: SortOrder
    processed_at?: SortOrder
  }

  export type sensor_processing_queueAvgOrderByAggregateInput = {
    priority?: SortOrder
    attempts?: SortOrder
    max_attempts?: SortOrder
  }

  export type sensor_processing_queueMaxOrderByAggregateInput = {
    id?: SortOrder
    raw_data_id?: SortOrder
    priority?: SortOrder
    attempts?: SortOrder
    max_attempts?: SortOrder
    error_message?: SortOrder
    created_at?: SortOrder
    processed_at?: SortOrder
  }

  export type sensor_processing_queueMinOrderByAggregateInput = {
    id?: SortOrder
    raw_data_id?: SortOrder
    priority?: SortOrder
    attempts?: SortOrder
    max_attempts?: SortOrder
    error_message?: SortOrder
    created_at?: SortOrder
    processed_at?: SortOrder
  }

  export type sensor_processing_queueSumOrderByAggregateInput = {
    priority?: SortOrder
    attempts?: SortOrder
    max_attempts?: SortOrder
  }

  export type spatial_ref_sysCountOrderByAggregateInput = {
    srid?: SortOrder
    auth_name?: SortOrder
    auth_srid?: SortOrder
    srtext?: SortOrder
    proj4text?: SortOrder
  }

  export type spatial_ref_sysAvgOrderByAggregateInput = {
    srid?: SortOrder
    auth_srid?: SortOrder
  }

  export type spatial_ref_sysMaxOrderByAggregateInput = {
    srid?: SortOrder
    auth_name?: SortOrder
    auth_srid?: SortOrder
    srtext?: SortOrder
    proj4text?: SortOrder
  }

  export type spatial_ref_sysMinOrderByAggregateInput = {
    srid?: SortOrder
    auth_name?: SortOrder
    auth_srid?: SortOrder
    srtext?: SortOrder
    proj4text?: SortOrder
  }

  export type spatial_ref_sysSumOrderByAggregateInput = {
    srid?: SortOrder
    auth_srid?: SortOrder
  }

  export type speed_eventCountOrderByAggregateInput = {
    id?: SortOrder
    truck_id?: SortOrder
    speed_kph?: SortOrder
    changed_at?: SortOrder
    source?: SortOrder
    created_by?: SortOrder
  }

  export type speed_eventAvgOrderByAggregateInput = {
    speed_kph?: SortOrder
  }

  export type speed_eventMaxOrderByAggregateInput = {
    id?: SortOrder
    truck_id?: SortOrder
    speed_kph?: SortOrder
    changed_at?: SortOrder
    source?: SortOrder
    created_by?: SortOrder
  }

  export type speed_eventMinOrderByAggregateInput = {
    id?: SortOrder
    truck_id?: SortOrder
    speed_kph?: SortOrder
    changed_at?: SortOrder
    source?: SortOrder
    created_by?: SortOrder
  }

  export type speed_eventSumOrderByAggregateInput = {
    speed_kph?: SortOrder
  }

  export type tire_error_codeCountOrderByAggregateInput = {
    code?: SortOrder
    description?: SortOrder
  }

  export type tire_error_codeAvgOrderByAggregateInput = {
    code?: SortOrder
  }

  export type tire_error_codeMaxOrderByAggregateInput = {
    code?: SortOrder
    description?: SortOrder
  }

  export type tire_error_codeMinOrderByAggregateInput = {
    code?: SortOrder
    description?: SortOrder
  }

  export type tire_error_codeSumOrderByAggregateInput = {
    code?: SortOrder
  }

  export type tire_position_configTruck_idTire_noCompoundUniqueInput = {
    truck_id: string
    tire_no: number
  }

  export type tire_position_configCountOrderByAggregateInput = {
    id?: SortOrder
    truck_id?: SortOrder
    tire_no?: SortOrder
    position_name?: SortOrder
    wheel_type?: SortOrder
    is_active?: SortOrder
    created_at?: SortOrder
  }

  export type tire_position_configAvgOrderByAggregateInput = {
    tire_no?: SortOrder
  }

  export type tire_position_configMaxOrderByAggregateInput = {
    id?: SortOrder
    truck_id?: SortOrder
    tire_no?: SortOrder
    position_name?: SortOrder
    wheel_type?: SortOrder
    is_active?: SortOrder
    created_at?: SortOrder
  }

  export type tire_position_configMinOrderByAggregateInput = {
    id?: SortOrder
    truck_id?: SortOrder
    tire_no?: SortOrder
    position_name?: SortOrder
    wheel_type?: SortOrder
    is_active?: SortOrder
    created_at?: SortOrder
  }

  export type tire_position_configSumOrderByAggregateInput = {
    tire_no?: SortOrder
  }

  export type tire_pressure_eventCountOrderByAggregateInput = {
    id?: SortOrder
    device_id?: SortOrder
    truck_id?: SortOrder
    tire_no?: SortOrder
    pressure_kpa?: SortOrder
    temp_celsius?: SortOrder
    ex_type?: SortOrder
    battery_level?: SortOrder
    changed_at?: SortOrder
    created_by?: SortOrder
  }

  export type tire_pressure_eventAvgOrderByAggregateInput = {
    tire_no?: SortOrder
    pressure_kpa?: SortOrder
    temp_celsius?: SortOrder
    battery_level?: SortOrder
  }

  export type tire_pressure_eventMaxOrderByAggregateInput = {
    id?: SortOrder
    device_id?: SortOrder
    truck_id?: SortOrder
    tire_no?: SortOrder
    pressure_kpa?: SortOrder
    temp_celsius?: SortOrder
    ex_type?: SortOrder
    battery_level?: SortOrder
    changed_at?: SortOrder
    created_by?: SortOrder
  }

  export type tire_pressure_eventMinOrderByAggregateInput = {
    id?: SortOrder
    device_id?: SortOrder
    truck_id?: SortOrder
    tire_no?: SortOrder
    pressure_kpa?: SortOrder
    temp_celsius?: SortOrder
    ex_type?: SortOrder
    battery_level?: SortOrder
    changed_at?: SortOrder
    created_by?: SortOrder
  }

  export type tire_pressure_eventSumOrderByAggregateInput = {
    tire_no?: SortOrder
    pressure_kpa?: SortOrder
    temp_celsius?: SortOrder
    battery_level?: SortOrder
  }

  export type tripCountOrderByAggregateInput = {
    id?: SortOrder
    truck_id?: SortOrder
    start_ts?: SortOrder
    end_ts?: SortOrder
  }

  export type tripMaxOrderByAggregateInput = {
    id?: SortOrder
    truck_id?: SortOrder
    start_ts?: SortOrder
    end_ts?: SortOrder
  }

  export type tripMinOrderByAggregateInput = {
    id?: SortOrder
    truck_id?: SortOrder
    start_ts?: SortOrder
    end_ts?: SortOrder
  }

  export type Alert_eventListRelationFilter = {
    every?: alert_eventWhereInput
    some?: alert_eventWhereInput
    none?: alert_eventWhereInput
  }

  export type Daily_routeListRelationFilter = {
    every?: daily_routeWhereInput
    some?: daily_routeWhereInput
    none?: daily_routeWhereInput
  }

  export type DeviceListRelationFilter = {
    every?: deviceWhereInput
    some?: deviceWhereInput
    none?: deviceWhereInput
  }

  export type Fuel_level_eventListRelationFilter = {
    every?: fuel_level_eventWhereInput
    some?: fuel_level_eventWhereInput
    none?: fuel_level_eventWhereInput
  }

  export type Sensor_data_rawListRelationFilter = {
    every?: sensor_data_rawWhereInput
    some?: sensor_data_rawWhereInput
    none?: sensor_data_rawWhereInput
  }

  export type Speed_eventListRelationFilter = {
    every?: speed_eventWhereInput
    some?: speed_eventWhereInput
    none?: speed_eventWhereInput
  }

  export type Tire_position_configListRelationFilter = {
    every?: tire_position_configWhereInput
    some?: tire_position_configWhereInput
    none?: tire_position_configWhereInput
  }

  export type TripListRelationFilter = {
    every?: tripWhereInput
    some?: tripWhereInput
    none?: tripWhereInput
  }

  export type Fleet_groupNullableRelationFilter = {
    is?: fleet_groupWhereInput | null
    isNot?: fleet_groupWhereInput | null
  }

  export type Truck_status_eventListRelationFilter = {
    every?: truck_status_eventWhereInput
    some?: truck_status_eventWhereInput
    none?: truck_status_eventWhereInput
  }

  export type alert_eventOrderByRelationAggregateInput = {
    _count?: SortOrder
  }

  export type daily_routeOrderByRelationAggregateInput = {
    _count?: SortOrder
  }

  export type deviceOrderByRelationAggregateInput = {
    _count?: SortOrder
  }

  export type fuel_level_eventOrderByRelationAggregateInput = {
    _count?: SortOrder
  }

  export type sensor_data_rawOrderByRelationAggregateInput = {
    _count?: SortOrder
  }

  export type speed_eventOrderByRelationAggregateInput = {
    _count?: SortOrder
  }

  export type tire_position_configOrderByRelationAggregateInput = {
    _count?: SortOrder
  }

  export type tripOrderByRelationAggregateInput = {
    _count?: SortOrder
  }

  export type truck_status_eventOrderByRelationAggregateInput = {
    _count?: SortOrder
  }

  export type truckCountOrderByAggregateInput = {
    id?: SortOrder
    plate_number?: SortOrder
    vin?: SortOrder
    name?: SortOrder
    model?: SortOrder
    year?: SortOrder
    tire_config?: SortOrder
    fleet_group_id?: SortOrder
    created_at?: SortOrder
    created_by?: SortOrder
    updated_by?: SortOrder
  }

  export type truckAvgOrderByAggregateInput = {
    year?: SortOrder
  }

  export type truckMaxOrderByAggregateInput = {
    id?: SortOrder
    plate_number?: SortOrder
    vin?: SortOrder
    name?: SortOrder
    model?: SortOrder
    year?: SortOrder
    tire_config?: SortOrder
    fleet_group_id?: SortOrder
    created_at?: SortOrder
    created_by?: SortOrder
    updated_by?: SortOrder
  }

  export type truckMinOrderByAggregateInput = {
    id?: SortOrder
    plate_number?: SortOrder
    vin?: SortOrder
    name?: SortOrder
    model?: SortOrder
    year?: SortOrder
    tire_config?: SortOrder
    fleet_group_id?: SortOrder
    created_at?: SortOrder
    created_by?: SortOrder
    updated_by?: SortOrder
  }

  export type truckSumOrderByAggregateInput = {
    year?: SortOrder
  }

  export type Enumtruck_statusFilter<$PrismaModel = never> = {
    equals?: $Enums.truck_status | Enumtruck_statusFieldRefInput<$PrismaModel>
    in?: $Enums.truck_status[] | ListEnumtruck_statusFieldRefInput<$PrismaModel>
    notIn?: $Enums.truck_status[] | ListEnumtruck_statusFieldRefInput<$PrismaModel>
    not?: NestedEnumtruck_statusFilter<$PrismaModel> | $Enums.truck_status
  }

  export type truck_status_eventCountOrderByAggregateInput = {
    id?: SortOrder
    truck_id?: SortOrder
    status?: SortOrder
    note?: SortOrder
    changed_at?: SortOrder
    created_by?: SortOrder
  }

  export type truck_status_eventMaxOrderByAggregateInput = {
    id?: SortOrder
    truck_id?: SortOrder
    status?: SortOrder
    note?: SortOrder
    changed_at?: SortOrder
    created_by?: SortOrder
  }

  export type truck_status_eventMinOrderByAggregateInput = {
    id?: SortOrder
    truck_id?: SortOrder
    status?: SortOrder
    note?: SortOrder
    changed_at?: SortOrder
    created_by?: SortOrder
  }

  export type Enumtruck_statusWithAggregatesFilter<$PrismaModel = never> = {
    equals?: $Enums.truck_status | Enumtruck_statusFieldRefInput<$PrismaModel>
    in?: $Enums.truck_status[] | ListEnumtruck_statusFieldRefInput<$PrismaModel>
    notIn?: $Enums.truck_status[] | ListEnumtruck_statusFieldRefInput<$PrismaModel>
    not?: NestedEnumtruck_statusWithAggregatesFilter<$PrismaModel> | $Enums.truck_status
    _count?: NestedIntFilter<$PrismaModel>
    _min?: NestedEnumtruck_statusFilter<$PrismaModel>
    _max?: NestedEnumtruck_statusFilter<$PrismaModel>
  }

  export type usersCountOrderByAggregateInput = {
    id?: SortOrder
    username?: SortOrder
    email?: SortOrder
    password_hash?: SortOrder
    role?: SortOrder
    is_active?: SortOrder
    created_at?: SortOrder
    updated_at?: SortOrder
  }

  export type usersMaxOrderByAggregateInput = {
    id?: SortOrder
    username?: SortOrder
    email?: SortOrder
    password_hash?: SortOrder
    role?: SortOrder
    is_active?: SortOrder
    created_at?: SortOrder
    updated_at?: SortOrder
  }

  export type usersMinOrderByAggregateInput = {
    id?: SortOrder
    username?: SortOrder
    email?: SortOrder
    password_hash?: SortOrder
    role?: SortOrder
    is_active?: SortOrder
    created_at?: SortOrder
    updated_at?: SortOrder
  }

  export type truckCreateNestedOneWithoutAlert_eventInput = {
    create?: XOR<truckCreateWithoutAlert_eventInput, truckUncheckedCreateWithoutAlert_eventInput>
    connectOrCreate?: truckCreateOrConnectWithoutAlert_eventInput
    connect?: truckWhereUniqueInput
  }

  export type StringFieldUpdateOperationsInput = {
    set?: string
  }

  export type Enumalert_typeFieldUpdateOperationsInput = {
    set?: $Enums.alert_type
  }

  export type NullableIntFieldUpdateOperationsInput = {
    set?: number | null
    increment?: number
    decrement?: number
    multiply?: number
    divide?: number
  }

  export type DateTimeFieldUpdateOperationsInput = {
    set?: Date | string
  }

  export type BoolFieldUpdateOperationsInput = {
    set?: boolean
  }

  export type NullableStringFieldUpdateOperationsInput = {
    set?: string | null
  }

  export type truckUpdateOneRequiredWithoutAlert_eventNestedInput = {
    create?: XOR<truckCreateWithoutAlert_eventInput, truckUncheckedCreateWithoutAlert_eventInput>
    connectOrCreate?: truckCreateOrConnectWithoutAlert_eventInput
    upsert?: truckUpsertWithoutAlert_eventInput
    connect?: truckWhereUniqueInput
    update?: XOR<XOR<truckUpdateToOneWithWhereWithoutAlert_eventInput, truckUpdateWithoutAlert_eventInput>, truckUncheckedUpdateWithoutAlert_eventInput>
  }

  export type IntFieldUpdateOperationsInput = {
    set?: number
    increment?: number
    decrement?: number
    multiply?: number
    divide?: number
  }

  export type truckUpdateOneRequiredWithoutDaily_routeNestedInput = {
    create?: XOR<truckCreateWithoutDaily_routeInput, truckUncheckedCreateWithoutDaily_routeInput>
    connectOrCreate?: truckCreateOrConnectWithoutDaily_routeInput
    upsert?: truckUpsertWithoutDaily_routeInput
    connect?: truckWhereUniqueInput
    update?: XOR<XOR<truckUpdateToOneWithWhereWithoutDaily_routeInput, truckUpdateWithoutDaily_routeInput>, truckUncheckedUpdateWithoutDaily_routeInput>
  }

  export type truckCreateNestedOneWithoutDeviceInput = {
    create?: XOR<truckCreateWithoutDeviceInput, truckUncheckedCreateWithoutDeviceInput>
    connectOrCreate?: truckCreateOrConnectWithoutDeviceInput
    connect?: truckWhereUniqueInput
  }

  export type device_status_eventCreateNestedManyWithoutDeviceInput = {
    create?: XOR<device_status_eventCreateWithoutDeviceInput, device_status_eventUncheckedCreateWithoutDeviceInput> | device_status_eventCreateWithoutDeviceInput[] | device_status_eventUncheckedCreateWithoutDeviceInput[]
    connectOrCreate?: device_status_eventCreateOrConnectWithoutDeviceInput | device_status_eventCreateOrConnectWithoutDeviceInput[]
    createMany?: device_status_eventCreateManyDeviceInputEnvelope
    connect?: device_status_eventWhereUniqueInput | device_status_eventWhereUniqueInput[]
  }

  export type device_truck_assignmentCreateNestedManyWithoutDeviceInput = {
    create?: XOR<device_truck_assignmentCreateWithoutDeviceInput, device_truck_assignmentUncheckedCreateWithoutDeviceInput> | device_truck_assignmentCreateWithoutDeviceInput[] | device_truck_assignmentUncheckedCreateWithoutDeviceInput[]
    connectOrCreate?: device_truck_assignmentCreateOrConnectWithoutDeviceInput | device_truck_assignmentCreateOrConnectWithoutDeviceInput[]
    createMany?: device_truck_assignmentCreateManyDeviceInputEnvelope
    connect?: device_truck_assignmentWhereUniqueInput | device_truck_assignmentWhereUniqueInput[]
  }

  export type gps_positionCreateNestedManyWithoutDeviceInput = {
    connect?: gps_positionWhereUniqueInput | gps_positionWhereUniqueInput[]
  }

  export type hub_temperature_eventCreateNestedManyWithoutDeviceInput = {
    create?: XOR<hub_temperature_eventCreateWithoutDeviceInput, hub_temperature_eventUncheckedCreateWithoutDeviceInput> | hub_temperature_eventCreateWithoutDeviceInput[] | hub_temperature_eventUncheckedCreateWithoutDeviceInput[]
    connectOrCreate?: hub_temperature_eventCreateOrConnectWithoutDeviceInput | hub_temperature_eventCreateOrConnectWithoutDeviceInput[]
    createMany?: hub_temperature_eventCreateManyDeviceInputEnvelope
    connect?: hub_temperature_eventWhereUniqueInput | hub_temperature_eventWhereUniqueInput[]
  }

  export type lock_eventCreateNestedManyWithoutDeviceInput = {
    create?: XOR<lock_eventCreateWithoutDeviceInput, lock_eventUncheckedCreateWithoutDeviceInput> | lock_eventCreateWithoutDeviceInput[] | lock_eventUncheckedCreateWithoutDeviceInput[]
    connectOrCreate?: lock_eventCreateOrConnectWithoutDeviceInput | lock_eventCreateOrConnectWithoutDeviceInput[]
    createMany?: lock_eventCreateManyDeviceInputEnvelope
    connect?: lock_eventWhereUniqueInput | lock_eventWhereUniqueInput[]
  }

  export type sensorCreateNestedManyWithoutDeviceInput = {
    create?: XOR<sensorCreateWithoutDeviceInput, sensorUncheckedCreateWithoutDeviceInput> | sensorCreateWithoutDeviceInput[] | sensorUncheckedCreateWithoutDeviceInput[]
    connectOrCreate?: sensorCreateOrConnectWithoutDeviceInput | sensorCreateOrConnectWithoutDeviceInput[]
    createMany?: sensorCreateManyDeviceInputEnvelope
    connect?: sensorWhereUniqueInput | sensorWhereUniqueInput[]
  }

  export type tire_pressure_eventCreateNestedManyWithoutDeviceInput = {
    create?: XOR<tire_pressure_eventCreateWithoutDeviceInput, tire_pressure_eventUncheckedCreateWithoutDeviceInput> | tire_pressure_eventCreateWithoutDeviceInput[] | tire_pressure_eventUncheckedCreateWithoutDeviceInput[]
    connectOrCreate?: tire_pressure_eventCreateOrConnectWithoutDeviceInput | tire_pressure_eventCreateOrConnectWithoutDeviceInput[]
    createMany?: tire_pressure_eventCreateManyDeviceInputEnvelope
    connect?: tire_pressure_eventWhereUniqueInput | tire_pressure_eventWhereUniqueInput[]
  }

  export type device_status_eventUncheckedCreateNestedManyWithoutDeviceInput = {
    create?: XOR<device_status_eventCreateWithoutDeviceInput, device_status_eventUncheckedCreateWithoutDeviceInput> | device_status_eventCreateWithoutDeviceInput[] | device_status_eventUncheckedCreateWithoutDeviceInput[]
    connectOrCreate?: device_status_eventCreateOrConnectWithoutDeviceInput | device_status_eventCreateOrConnectWithoutDeviceInput[]
    createMany?: device_status_eventCreateManyDeviceInputEnvelope
    connect?: device_status_eventWhereUniqueInput | device_status_eventWhereUniqueInput[]
  }

  export type device_truck_assignmentUncheckedCreateNestedManyWithoutDeviceInput = {
    create?: XOR<device_truck_assignmentCreateWithoutDeviceInput, device_truck_assignmentUncheckedCreateWithoutDeviceInput> | device_truck_assignmentCreateWithoutDeviceInput[] | device_truck_assignmentUncheckedCreateWithoutDeviceInput[]
    connectOrCreate?: device_truck_assignmentCreateOrConnectWithoutDeviceInput | device_truck_assignmentCreateOrConnectWithoutDeviceInput[]
    createMany?: device_truck_assignmentCreateManyDeviceInputEnvelope
    connect?: device_truck_assignmentWhereUniqueInput | device_truck_assignmentWhereUniqueInput[]
  }

  export type gps_positionUncheckedCreateNestedManyWithoutDeviceInput = {
    connect?: gps_positionWhereUniqueInput | gps_positionWhereUniqueInput[]
  }

  export type hub_temperature_eventUncheckedCreateNestedManyWithoutDeviceInput = {
    create?: XOR<hub_temperature_eventCreateWithoutDeviceInput, hub_temperature_eventUncheckedCreateWithoutDeviceInput> | hub_temperature_eventCreateWithoutDeviceInput[] | hub_temperature_eventUncheckedCreateWithoutDeviceInput[]
    connectOrCreate?: hub_temperature_eventCreateOrConnectWithoutDeviceInput | hub_temperature_eventCreateOrConnectWithoutDeviceInput[]
    createMany?: hub_temperature_eventCreateManyDeviceInputEnvelope
    connect?: hub_temperature_eventWhereUniqueInput | hub_temperature_eventWhereUniqueInput[]
  }

  export type lock_eventUncheckedCreateNestedManyWithoutDeviceInput = {
    create?: XOR<lock_eventCreateWithoutDeviceInput, lock_eventUncheckedCreateWithoutDeviceInput> | lock_eventCreateWithoutDeviceInput[] | lock_eventUncheckedCreateWithoutDeviceInput[]
    connectOrCreate?: lock_eventCreateOrConnectWithoutDeviceInput | lock_eventCreateOrConnectWithoutDeviceInput[]
    createMany?: lock_eventCreateManyDeviceInputEnvelope
    connect?: lock_eventWhereUniqueInput | lock_eventWhereUniqueInput[]
  }

  export type sensorUncheckedCreateNestedManyWithoutDeviceInput = {
    create?: XOR<sensorCreateWithoutDeviceInput, sensorUncheckedCreateWithoutDeviceInput> | sensorCreateWithoutDeviceInput[] | sensorUncheckedCreateWithoutDeviceInput[]
    connectOrCreate?: sensorCreateOrConnectWithoutDeviceInput | sensorCreateOrConnectWithoutDeviceInput[]
    createMany?: sensorCreateManyDeviceInputEnvelope
    connect?: sensorWhereUniqueInput | sensorWhereUniqueInput[]
  }

  export type tire_pressure_eventUncheckedCreateNestedManyWithoutDeviceInput = {
    create?: XOR<tire_pressure_eventCreateWithoutDeviceInput, tire_pressure_eventUncheckedCreateWithoutDeviceInput> | tire_pressure_eventCreateWithoutDeviceInput[] | tire_pressure_eventUncheckedCreateWithoutDeviceInput[]
    connectOrCreate?: tire_pressure_eventCreateOrConnectWithoutDeviceInput | tire_pressure_eventCreateOrConnectWithoutDeviceInput[]
    createMany?: tire_pressure_eventCreateManyDeviceInputEnvelope
    connect?: tire_pressure_eventWhereUniqueInput | tire_pressure_eventWhereUniqueInput[]
  }

  export type NullableDateTimeFieldUpdateOperationsInput = {
    set?: Date | string | null
  }

  export type truckUpdateOneRequiredWithoutDeviceNestedInput = {
    create?: XOR<truckCreateWithoutDeviceInput, truckUncheckedCreateWithoutDeviceInput>
    connectOrCreate?: truckCreateOrConnectWithoutDeviceInput
    upsert?: truckUpsertWithoutDeviceInput
    connect?: truckWhereUniqueInput
    update?: XOR<XOR<truckUpdateToOneWithWhereWithoutDeviceInput, truckUpdateWithoutDeviceInput>, truckUncheckedUpdateWithoutDeviceInput>
  }

  export type device_status_eventUpdateManyWithoutDeviceNestedInput = {
    create?: XOR<device_status_eventCreateWithoutDeviceInput, device_status_eventUncheckedCreateWithoutDeviceInput> | device_status_eventCreateWithoutDeviceInput[] | device_status_eventUncheckedCreateWithoutDeviceInput[]
    connectOrCreate?: device_status_eventCreateOrConnectWithoutDeviceInput | device_status_eventCreateOrConnectWithoutDeviceInput[]
    upsert?: device_status_eventUpsertWithWhereUniqueWithoutDeviceInput | device_status_eventUpsertWithWhereUniqueWithoutDeviceInput[]
    createMany?: device_status_eventCreateManyDeviceInputEnvelope
    set?: device_status_eventWhereUniqueInput | device_status_eventWhereUniqueInput[]
    disconnect?: device_status_eventWhereUniqueInput | device_status_eventWhereUniqueInput[]
    delete?: device_status_eventWhereUniqueInput | device_status_eventWhereUniqueInput[]
    connect?: device_status_eventWhereUniqueInput | device_status_eventWhereUniqueInput[]
    update?: device_status_eventUpdateWithWhereUniqueWithoutDeviceInput | device_status_eventUpdateWithWhereUniqueWithoutDeviceInput[]
    updateMany?: device_status_eventUpdateManyWithWhereWithoutDeviceInput | device_status_eventUpdateManyWithWhereWithoutDeviceInput[]
    deleteMany?: device_status_eventScalarWhereInput | device_status_eventScalarWhereInput[]
  }

  export type device_truck_assignmentUpdateManyWithoutDeviceNestedInput = {
    create?: XOR<device_truck_assignmentCreateWithoutDeviceInput, device_truck_assignmentUncheckedCreateWithoutDeviceInput> | device_truck_assignmentCreateWithoutDeviceInput[] | device_truck_assignmentUncheckedCreateWithoutDeviceInput[]
    connectOrCreate?: device_truck_assignmentCreateOrConnectWithoutDeviceInput | device_truck_assignmentCreateOrConnectWithoutDeviceInput[]
    upsert?: device_truck_assignmentUpsertWithWhereUniqueWithoutDeviceInput | device_truck_assignmentUpsertWithWhereUniqueWithoutDeviceInput[]
    createMany?: device_truck_assignmentCreateManyDeviceInputEnvelope
    set?: device_truck_assignmentWhereUniqueInput | device_truck_assignmentWhereUniqueInput[]
    disconnect?: device_truck_assignmentWhereUniqueInput | device_truck_assignmentWhereUniqueInput[]
    delete?: device_truck_assignmentWhereUniqueInput | device_truck_assignmentWhereUniqueInput[]
    connect?: device_truck_assignmentWhereUniqueInput | device_truck_assignmentWhereUniqueInput[]
    update?: device_truck_assignmentUpdateWithWhereUniqueWithoutDeviceInput | device_truck_assignmentUpdateWithWhereUniqueWithoutDeviceInput[]
    updateMany?: device_truck_assignmentUpdateManyWithWhereWithoutDeviceInput | device_truck_assignmentUpdateManyWithWhereWithoutDeviceInput[]
    deleteMany?: device_truck_assignmentScalarWhereInput | device_truck_assignmentScalarWhereInput[]
  }

  export type gps_positionUpdateManyWithoutDeviceNestedInput = {
    set?: gps_positionWhereUniqueInput | gps_positionWhereUniqueInput[]
    disconnect?: gps_positionWhereUniqueInput | gps_positionWhereUniqueInput[]
    delete?: gps_positionWhereUniqueInput | gps_positionWhereUniqueInput[]
    connect?: gps_positionWhereUniqueInput | gps_positionWhereUniqueInput[]
    update?: gps_positionUpdateWithWhereUniqueWithoutDeviceInput | gps_positionUpdateWithWhereUniqueWithoutDeviceInput[]
    updateMany?: gps_positionUpdateManyWithWhereWithoutDeviceInput | gps_positionUpdateManyWithWhereWithoutDeviceInput[]
    deleteMany?: gps_positionScalarWhereInput | gps_positionScalarWhereInput[]
  }

  export type hub_temperature_eventUpdateManyWithoutDeviceNestedInput = {
    create?: XOR<hub_temperature_eventCreateWithoutDeviceInput, hub_temperature_eventUncheckedCreateWithoutDeviceInput> | hub_temperature_eventCreateWithoutDeviceInput[] | hub_temperature_eventUncheckedCreateWithoutDeviceInput[]
    connectOrCreate?: hub_temperature_eventCreateOrConnectWithoutDeviceInput | hub_temperature_eventCreateOrConnectWithoutDeviceInput[]
    upsert?: hub_temperature_eventUpsertWithWhereUniqueWithoutDeviceInput | hub_temperature_eventUpsertWithWhereUniqueWithoutDeviceInput[]
    createMany?: hub_temperature_eventCreateManyDeviceInputEnvelope
    set?: hub_temperature_eventWhereUniqueInput | hub_temperature_eventWhereUniqueInput[]
    disconnect?: hub_temperature_eventWhereUniqueInput | hub_temperature_eventWhereUniqueInput[]
    delete?: hub_temperature_eventWhereUniqueInput | hub_temperature_eventWhereUniqueInput[]
    connect?: hub_temperature_eventWhereUniqueInput | hub_temperature_eventWhereUniqueInput[]
    update?: hub_temperature_eventUpdateWithWhereUniqueWithoutDeviceInput | hub_temperature_eventUpdateWithWhereUniqueWithoutDeviceInput[]
    updateMany?: hub_temperature_eventUpdateManyWithWhereWithoutDeviceInput | hub_temperature_eventUpdateManyWithWhereWithoutDeviceInput[]
    deleteMany?: hub_temperature_eventScalarWhereInput | hub_temperature_eventScalarWhereInput[]
  }

  export type lock_eventUpdateManyWithoutDeviceNestedInput = {
    create?: XOR<lock_eventCreateWithoutDeviceInput, lock_eventUncheckedCreateWithoutDeviceInput> | lock_eventCreateWithoutDeviceInput[] | lock_eventUncheckedCreateWithoutDeviceInput[]
    connectOrCreate?: lock_eventCreateOrConnectWithoutDeviceInput | lock_eventCreateOrConnectWithoutDeviceInput[]
    upsert?: lock_eventUpsertWithWhereUniqueWithoutDeviceInput | lock_eventUpsertWithWhereUniqueWithoutDeviceInput[]
    createMany?: lock_eventCreateManyDeviceInputEnvelope
    set?: lock_eventWhereUniqueInput | lock_eventWhereUniqueInput[]
    disconnect?: lock_eventWhereUniqueInput | lock_eventWhereUniqueInput[]
    delete?: lock_eventWhereUniqueInput | lock_eventWhereUniqueInput[]
    connect?: lock_eventWhereUniqueInput | lock_eventWhereUniqueInput[]
    update?: lock_eventUpdateWithWhereUniqueWithoutDeviceInput | lock_eventUpdateWithWhereUniqueWithoutDeviceInput[]
    updateMany?: lock_eventUpdateManyWithWhereWithoutDeviceInput | lock_eventUpdateManyWithWhereWithoutDeviceInput[]
    deleteMany?: lock_eventScalarWhereInput | lock_eventScalarWhereInput[]
  }

  export type sensorUpdateManyWithoutDeviceNestedInput = {
    create?: XOR<sensorCreateWithoutDeviceInput, sensorUncheckedCreateWithoutDeviceInput> | sensorCreateWithoutDeviceInput[] | sensorUncheckedCreateWithoutDeviceInput[]
    connectOrCreate?: sensorCreateOrConnectWithoutDeviceInput | sensorCreateOrConnectWithoutDeviceInput[]
    upsert?: sensorUpsertWithWhereUniqueWithoutDeviceInput | sensorUpsertWithWhereUniqueWithoutDeviceInput[]
    createMany?: sensorCreateManyDeviceInputEnvelope
    set?: sensorWhereUniqueInput | sensorWhereUniqueInput[]
    disconnect?: sensorWhereUniqueInput | sensorWhereUniqueInput[]
    delete?: sensorWhereUniqueInput | sensorWhereUniqueInput[]
    connect?: sensorWhereUniqueInput | sensorWhereUniqueInput[]
    update?: sensorUpdateWithWhereUniqueWithoutDeviceInput | sensorUpdateWithWhereUniqueWithoutDeviceInput[]
    updateMany?: sensorUpdateManyWithWhereWithoutDeviceInput | sensorUpdateManyWithWhereWithoutDeviceInput[]
    deleteMany?: sensorScalarWhereInput | sensorScalarWhereInput[]
  }

  export type tire_pressure_eventUpdateManyWithoutDeviceNestedInput = {
    create?: XOR<tire_pressure_eventCreateWithoutDeviceInput, tire_pressure_eventUncheckedCreateWithoutDeviceInput> | tire_pressure_eventCreateWithoutDeviceInput[] | tire_pressure_eventUncheckedCreateWithoutDeviceInput[]
    connectOrCreate?: tire_pressure_eventCreateOrConnectWithoutDeviceInput | tire_pressure_eventCreateOrConnectWithoutDeviceInput[]
    upsert?: tire_pressure_eventUpsertWithWhereUniqueWithoutDeviceInput | tire_pressure_eventUpsertWithWhereUniqueWithoutDeviceInput[]
    createMany?: tire_pressure_eventCreateManyDeviceInputEnvelope
    set?: tire_pressure_eventWhereUniqueInput | tire_pressure_eventWhereUniqueInput[]
    disconnect?: tire_pressure_eventWhereUniqueInput | tire_pressure_eventWhereUniqueInput[]
    delete?: tire_pressure_eventWhereUniqueInput | tire_pressure_eventWhereUniqueInput[]
    connect?: tire_pressure_eventWhereUniqueInput | tire_pressure_eventWhereUniqueInput[]
    update?: tire_pressure_eventUpdateWithWhereUniqueWithoutDeviceInput | tire_pressure_eventUpdateWithWhereUniqueWithoutDeviceInput[]
    updateMany?: tire_pressure_eventUpdateManyWithWhereWithoutDeviceInput | tire_pressure_eventUpdateManyWithWhereWithoutDeviceInput[]
    deleteMany?: tire_pressure_eventScalarWhereInput | tire_pressure_eventScalarWhereInput[]
  }

  export type device_status_eventUncheckedUpdateManyWithoutDeviceNestedInput = {
    create?: XOR<device_status_eventCreateWithoutDeviceInput, device_status_eventUncheckedCreateWithoutDeviceInput> | device_status_eventCreateWithoutDeviceInput[] | device_status_eventUncheckedCreateWithoutDeviceInput[]
    connectOrCreate?: device_status_eventCreateOrConnectWithoutDeviceInput | device_status_eventCreateOrConnectWithoutDeviceInput[]
    upsert?: device_status_eventUpsertWithWhereUniqueWithoutDeviceInput | device_status_eventUpsertWithWhereUniqueWithoutDeviceInput[]
    createMany?: device_status_eventCreateManyDeviceInputEnvelope
    set?: device_status_eventWhereUniqueInput | device_status_eventWhereUniqueInput[]
    disconnect?: device_status_eventWhereUniqueInput | device_status_eventWhereUniqueInput[]
    delete?: device_status_eventWhereUniqueInput | device_status_eventWhereUniqueInput[]
    connect?: device_status_eventWhereUniqueInput | device_status_eventWhereUniqueInput[]
    update?: device_status_eventUpdateWithWhereUniqueWithoutDeviceInput | device_status_eventUpdateWithWhereUniqueWithoutDeviceInput[]
    updateMany?: device_status_eventUpdateManyWithWhereWithoutDeviceInput | device_status_eventUpdateManyWithWhereWithoutDeviceInput[]
    deleteMany?: device_status_eventScalarWhereInput | device_status_eventScalarWhereInput[]
  }

  export type device_truck_assignmentUncheckedUpdateManyWithoutDeviceNestedInput = {
    create?: XOR<device_truck_assignmentCreateWithoutDeviceInput, device_truck_assignmentUncheckedCreateWithoutDeviceInput> | device_truck_assignmentCreateWithoutDeviceInput[] | device_truck_assignmentUncheckedCreateWithoutDeviceInput[]
    connectOrCreate?: device_truck_assignmentCreateOrConnectWithoutDeviceInput | device_truck_assignmentCreateOrConnectWithoutDeviceInput[]
    upsert?: device_truck_assignmentUpsertWithWhereUniqueWithoutDeviceInput | device_truck_assignmentUpsertWithWhereUniqueWithoutDeviceInput[]
    createMany?: device_truck_assignmentCreateManyDeviceInputEnvelope
    set?: device_truck_assignmentWhereUniqueInput | device_truck_assignmentWhereUniqueInput[]
    disconnect?: device_truck_assignmentWhereUniqueInput | device_truck_assignmentWhereUniqueInput[]
    delete?: device_truck_assignmentWhereUniqueInput | device_truck_assignmentWhereUniqueInput[]
    connect?: device_truck_assignmentWhereUniqueInput | device_truck_assignmentWhereUniqueInput[]
    update?: device_truck_assignmentUpdateWithWhereUniqueWithoutDeviceInput | device_truck_assignmentUpdateWithWhereUniqueWithoutDeviceInput[]
    updateMany?: device_truck_assignmentUpdateManyWithWhereWithoutDeviceInput | device_truck_assignmentUpdateManyWithWhereWithoutDeviceInput[]
    deleteMany?: device_truck_assignmentScalarWhereInput | device_truck_assignmentScalarWhereInput[]
  }

  export type gps_positionUncheckedUpdateManyWithoutDeviceNestedInput = {
    set?: gps_positionWhereUniqueInput | gps_positionWhereUniqueInput[]
    disconnect?: gps_positionWhereUniqueInput | gps_positionWhereUniqueInput[]
    delete?: gps_positionWhereUniqueInput | gps_positionWhereUniqueInput[]
    connect?: gps_positionWhereUniqueInput | gps_positionWhereUniqueInput[]
    update?: gps_positionUpdateWithWhereUniqueWithoutDeviceInput | gps_positionUpdateWithWhereUniqueWithoutDeviceInput[]
    updateMany?: gps_positionUpdateManyWithWhereWithoutDeviceInput | gps_positionUpdateManyWithWhereWithoutDeviceInput[]
    deleteMany?: gps_positionScalarWhereInput | gps_positionScalarWhereInput[]
  }

  export type hub_temperature_eventUncheckedUpdateManyWithoutDeviceNestedInput = {
    create?: XOR<hub_temperature_eventCreateWithoutDeviceInput, hub_temperature_eventUncheckedCreateWithoutDeviceInput> | hub_temperature_eventCreateWithoutDeviceInput[] | hub_temperature_eventUncheckedCreateWithoutDeviceInput[]
    connectOrCreate?: hub_temperature_eventCreateOrConnectWithoutDeviceInput | hub_temperature_eventCreateOrConnectWithoutDeviceInput[]
    upsert?: hub_temperature_eventUpsertWithWhereUniqueWithoutDeviceInput | hub_temperature_eventUpsertWithWhereUniqueWithoutDeviceInput[]
    createMany?: hub_temperature_eventCreateManyDeviceInputEnvelope
    set?: hub_temperature_eventWhereUniqueInput | hub_temperature_eventWhereUniqueInput[]
    disconnect?: hub_temperature_eventWhereUniqueInput | hub_temperature_eventWhereUniqueInput[]
    delete?: hub_temperature_eventWhereUniqueInput | hub_temperature_eventWhereUniqueInput[]
    connect?: hub_temperature_eventWhereUniqueInput | hub_temperature_eventWhereUniqueInput[]
    update?: hub_temperature_eventUpdateWithWhereUniqueWithoutDeviceInput | hub_temperature_eventUpdateWithWhereUniqueWithoutDeviceInput[]
    updateMany?: hub_temperature_eventUpdateManyWithWhereWithoutDeviceInput | hub_temperature_eventUpdateManyWithWhereWithoutDeviceInput[]
    deleteMany?: hub_temperature_eventScalarWhereInput | hub_temperature_eventScalarWhereInput[]
  }

  export type lock_eventUncheckedUpdateManyWithoutDeviceNestedInput = {
    create?: XOR<lock_eventCreateWithoutDeviceInput, lock_eventUncheckedCreateWithoutDeviceInput> | lock_eventCreateWithoutDeviceInput[] | lock_eventUncheckedCreateWithoutDeviceInput[]
    connectOrCreate?: lock_eventCreateOrConnectWithoutDeviceInput | lock_eventCreateOrConnectWithoutDeviceInput[]
    upsert?: lock_eventUpsertWithWhereUniqueWithoutDeviceInput | lock_eventUpsertWithWhereUniqueWithoutDeviceInput[]
    createMany?: lock_eventCreateManyDeviceInputEnvelope
    set?: lock_eventWhereUniqueInput | lock_eventWhereUniqueInput[]
    disconnect?: lock_eventWhereUniqueInput | lock_eventWhereUniqueInput[]
    delete?: lock_eventWhereUniqueInput | lock_eventWhereUniqueInput[]
    connect?: lock_eventWhereUniqueInput | lock_eventWhereUniqueInput[]
    update?: lock_eventUpdateWithWhereUniqueWithoutDeviceInput | lock_eventUpdateWithWhereUniqueWithoutDeviceInput[]
    updateMany?: lock_eventUpdateManyWithWhereWithoutDeviceInput | lock_eventUpdateManyWithWhereWithoutDeviceInput[]
    deleteMany?: lock_eventScalarWhereInput | lock_eventScalarWhereInput[]
  }

  export type sensorUncheckedUpdateManyWithoutDeviceNestedInput = {
    create?: XOR<sensorCreateWithoutDeviceInput, sensorUncheckedCreateWithoutDeviceInput> | sensorCreateWithoutDeviceInput[] | sensorUncheckedCreateWithoutDeviceInput[]
    connectOrCreate?: sensorCreateOrConnectWithoutDeviceInput | sensorCreateOrConnectWithoutDeviceInput[]
    upsert?: sensorUpsertWithWhereUniqueWithoutDeviceInput | sensorUpsertWithWhereUniqueWithoutDeviceInput[]
    createMany?: sensorCreateManyDeviceInputEnvelope
    set?: sensorWhereUniqueInput | sensorWhereUniqueInput[]
    disconnect?: sensorWhereUniqueInput | sensorWhereUniqueInput[]
    delete?: sensorWhereUniqueInput | sensorWhereUniqueInput[]
    connect?: sensorWhereUniqueInput | sensorWhereUniqueInput[]
    update?: sensorUpdateWithWhereUniqueWithoutDeviceInput | sensorUpdateWithWhereUniqueWithoutDeviceInput[]
    updateMany?: sensorUpdateManyWithWhereWithoutDeviceInput | sensorUpdateManyWithWhereWithoutDeviceInput[]
    deleteMany?: sensorScalarWhereInput | sensorScalarWhereInput[]
  }

  export type tire_pressure_eventUncheckedUpdateManyWithoutDeviceNestedInput = {
    create?: XOR<tire_pressure_eventCreateWithoutDeviceInput, tire_pressure_eventUncheckedCreateWithoutDeviceInput> | tire_pressure_eventCreateWithoutDeviceInput[] | tire_pressure_eventUncheckedCreateWithoutDeviceInput[]
    connectOrCreate?: tire_pressure_eventCreateOrConnectWithoutDeviceInput | tire_pressure_eventCreateOrConnectWithoutDeviceInput[]
    upsert?: tire_pressure_eventUpsertWithWhereUniqueWithoutDeviceInput | tire_pressure_eventUpsertWithWhereUniqueWithoutDeviceInput[]
    createMany?: tire_pressure_eventCreateManyDeviceInputEnvelope
    set?: tire_pressure_eventWhereUniqueInput | tire_pressure_eventWhereUniqueInput[]
    disconnect?: tire_pressure_eventWhereUniqueInput | tire_pressure_eventWhereUniqueInput[]
    delete?: tire_pressure_eventWhereUniqueInput | tire_pressure_eventWhereUniqueInput[]
    connect?: tire_pressure_eventWhereUniqueInput | tire_pressure_eventWhereUniqueInput[]
    update?: tire_pressure_eventUpdateWithWhereUniqueWithoutDeviceInput | tire_pressure_eventUpdateWithWhereUniqueWithoutDeviceInput[]
    updateMany?: tire_pressure_eventUpdateManyWithWhereWithoutDeviceInput | tire_pressure_eventUpdateManyWithWhereWithoutDeviceInput[]
    deleteMany?: tire_pressure_eventScalarWhereInput | tire_pressure_eventScalarWhereInput[]
  }

  export type deviceCreateNestedOneWithoutDevice_status_eventInput = {
    create?: XOR<deviceCreateWithoutDevice_status_eventInput, deviceUncheckedCreateWithoutDevice_status_eventInput>
    connectOrCreate?: deviceCreateOrConnectWithoutDevice_status_eventInput
    connect?: deviceWhereUniqueInput
  }

  export type truckCreateNestedOneWithoutDevice_status_eventInput = {
    create?: XOR<truckCreateWithoutDevice_status_eventInput, truckUncheckedCreateWithoutDevice_status_eventInput>
    connectOrCreate?: truckCreateOrConnectWithoutDevice_status_eventInput
    connect?: truckWhereUniqueInput
  }

  export type deviceUpdateOneRequiredWithoutDevice_status_eventNestedInput = {
    create?: XOR<deviceCreateWithoutDevice_status_eventInput, deviceUncheckedCreateWithoutDevice_status_eventInput>
    connectOrCreate?: deviceCreateOrConnectWithoutDevice_status_eventInput
    upsert?: deviceUpsertWithoutDevice_status_eventInput
    connect?: deviceWhereUniqueInput
    update?: XOR<XOR<deviceUpdateToOneWithWhereWithoutDevice_status_eventInput, deviceUpdateWithoutDevice_status_eventInput>, deviceUncheckedUpdateWithoutDevice_status_eventInput>
  }

  export type truckUpdateOneRequiredWithoutDevice_status_eventNestedInput = {
    create?: XOR<truckCreateWithoutDevice_status_eventInput, truckUncheckedCreateWithoutDevice_status_eventInput>
    connectOrCreate?: truckCreateOrConnectWithoutDevice_status_eventInput
    upsert?: truckUpsertWithoutDevice_status_eventInput
    connect?: truckWhereUniqueInput
    update?: XOR<XOR<truckUpdateToOneWithWhereWithoutDevice_status_eventInput, truckUpdateWithoutDevice_status_eventInput>, truckUncheckedUpdateWithoutDevice_status_eventInput>
  }

  export type usersCreateNestedOneWithoutDevice_truck_assignment_device_truck_assignment_assigned_byTousersInput = {
    create?: XOR<usersCreateWithoutDevice_truck_assignment_device_truck_assignment_assigned_byTousersInput, usersUncheckedCreateWithoutDevice_truck_assignment_device_truck_assignment_assigned_byTousersInput>
    connectOrCreate?: usersCreateOrConnectWithoutDevice_truck_assignment_device_truck_assignment_assigned_byTousersInput
    connect?: usersWhereUniqueInput
  }

  export type deviceCreateNestedOneWithoutDevice_truck_assignmentInput = {
    create?: XOR<deviceCreateWithoutDevice_truck_assignmentInput, deviceUncheckedCreateWithoutDevice_truck_assignmentInput>
    connectOrCreate?: deviceCreateOrConnectWithoutDevice_truck_assignmentInput
    connect?: deviceWhereUniqueInput
  }

  export type usersCreateNestedOneWithoutDevice_truck_assignment_device_truck_assignment_removed_byTousersInput = {
    create?: XOR<usersCreateWithoutDevice_truck_assignment_device_truck_assignment_removed_byTousersInput, usersUncheckedCreateWithoutDevice_truck_assignment_device_truck_assignment_removed_byTousersInput>
    connectOrCreate?: usersCreateOrConnectWithoutDevice_truck_assignment_device_truck_assignment_removed_byTousersInput
    connect?: usersWhereUniqueInput
  }

  export type truckCreateNestedOneWithoutDevice_truck_assignmentInput = {
    create?: XOR<truckCreateWithoutDevice_truck_assignmentInput, truckUncheckedCreateWithoutDevice_truck_assignmentInput>
    connectOrCreate?: truckCreateOrConnectWithoutDevice_truck_assignmentInput
    connect?: truckWhereUniqueInput
  }

  export type NullableBoolFieldUpdateOperationsInput = {
    set?: boolean | null
  }

  export type usersUpdateOneWithoutDevice_truck_assignment_device_truck_assignment_assigned_byTousersNestedInput = {
    create?: XOR<usersCreateWithoutDevice_truck_assignment_device_truck_assignment_assigned_byTousersInput, usersUncheckedCreateWithoutDevice_truck_assignment_device_truck_assignment_assigned_byTousersInput>
    connectOrCreate?: usersCreateOrConnectWithoutDevice_truck_assignment_device_truck_assignment_assigned_byTousersInput
    upsert?: usersUpsertWithoutDevice_truck_assignment_device_truck_assignment_assigned_byTousersInput
    disconnect?: usersWhereInput | boolean
    delete?: usersWhereInput | boolean
    connect?: usersWhereUniqueInput
    update?: XOR<XOR<usersUpdateToOneWithWhereWithoutDevice_truck_assignment_device_truck_assignment_assigned_byTousersInput, usersUpdateWithoutDevice_truck_assignment_device_truck_assignment_assigned_byTousersInput>, usersUncheckedUpdateWithoutDevice_truck_assignment_device_truck_assignment_assigned_byTousersInput>
  }

  export type deviceUpdateOneWithoutDevice_truck_assignmentNestedInput = {
    create?: XOR<deviceCreateWithoutDevice_truck_assignmentInput, deviceUncheckedCreateWithoutDevice_truck_assignmentInput>
    connectOrCreate?: deviceCreateOrConnectWithoutDevice_truck_assignmentInput
    upsert?: deviceUpsertWithoutDevice_truck_assignmentInput
    disconnect?: deviceWhereInput | boolean
    delete?: deviceWhereInput | boolean
    connect?: deviceWhereUniqueInput
    update?: XOR<XOR<deviceUpdateToOneWithWhereWithoutDevice_truck_assignmentInput, deviceUpdateWithoutDevice_truck_assignmentInput>, deviceUncheckedUpdateWithoutDevice_truck_assignmentInput>
  }

  export type usersUpdateOneWithoutDevice_truck_assignment_device_truck_assignment_removed_byTousersNestedInput = {
    create?: XOR<usersCreateWithoutDevice_truck_assignment_device_truck_assignment_removed_byTousersInput, usersUncheckedCreateWithoutDevice_truck_assignment_device_truck_assignment_removed_byTousersInput>
    connectOrCreate?: usersCreateOrConnectWithoutDevice_truck_assignment_device_truck_assignment_removed_byTousersInput
    upsert?: usersUpsertWithoutDevice_truck_assignment_device_truck_assignment_removed_byTousersInput
    disconnect?: usersWhereInput | boolean
    delete?: usersWhereInput | boolean
    connect?: usersWhereUniqueInput
    update?: XOR<XOR<usersUpdateToOneWithWhereWithoutDevice_truck_assignment_device_truck_assignment_removed_byTousersInput, usersUpdateWithoutDevice_truck_assignment_device_truck_assignment_removed_byTousersInput>, usersUncheckedUpdateWithoutDevice_truck_assignment_device_truck_assignment_removed_byTousersInput>
  }

  export type truckUpdateOneWithoutDevice_truck_assignmentNestedInput = {
    create?: XOR<truckCreateWithoutDevice_truck_assignmentInput, truckUncheckedCreateWithoutDevice_truck_assignmentInput>
    connectOrCreate?: truckCreateOrConnectWithoutDevice_truck_assignmentInput
    upsert?: truckUpsertWithoutDevice_truck_assignmentInput
    disconnect?: truckWhereInput | boolean
    delete?: truckWhereInput | boolean
    connect?: truckWhereUniqueInput
    update?: XOR<XOR<truckUpdateToOneWithWhereWithoutDevice_truck_assignmentInput, truckUpdateWithoutDevice_truck_assignmentInput>, truckUncheckedUpdateWithoutDevice_truck_assignmentInput>
  }

  export type truckCreateNestedManyWithoutFleet_groupInput = {
    create?: XOR<truckCreateWithoutFleet_groupInput, truckUncheckedCreateWithoutFleet_groupInput> | truckCreateWithoutFleet_groupInput[] | truckUncheckedCreateWithoutFleet_groupInput[]
    connectOrCreate?: truckCreateOrConnectWithoutFleet_groupInput | truckCreateOrConnectWithoutFleet_groupInput[]
    createMany?: truckCreateManyFleet_groupInputEnvelope
    connect?: truckWhereUniqueInput | truckWhereUniqueInput[]
  }

  export type truckUncheckedCreateNestedManyWithoutFleet_groupInput = {
    create?: XOR<truckCreateWithoutFleet_groupInput, truckUncheckedCreateWithoutFleet_groupInput> | truckCreateWithoutFleet_groupInput[] | truckUncheckedCreateWithoutFleet_groupInput[]
    connectOrCreate?: truckCreateOrConnectWithoutFleet_groupInput | truckCreateOrConnectWithoutFleet_groupInput[]
    createMany?: truckCreateManyFleet_groupInputEnvelope
    connect?: truckWhereUniqueInput | truckWhereUniqueInput[]
  }

  export type truckUpdateManyWithoutFleet_groupNestedInput = {
    create?: XOR<truckCreateWithoutFleet_groupInput, truckUncheckedCreateWithoutFleet_groupInput> | truckCreateWithoutFleet_groupInput[] | truckUncheckedCreateWithoutFleet_groupInput[]
    connectOrCreate?: truckCreateOrConnectWithoutFleet_groupInput | truckCreateOrConnectWithoutFleet_groupInput[]
    upsert?: truckUpsertWithWhereUniqueWithoutFleet_groupInput | truckUpsertWithWhereUniqueWithoutFleet_groupInput[]
    createMany?: truckCreateManyFleet_groupInputEnvelope
    set?: truckWhereUniqueInput | truckWhereUniqueInput[]
    disconnect?: truckWhereUniqueInput | truckWhereUniqueInput[]
    delete?: truckWhereUniqueInput | truckWhereUniqueInput[]
    connect?: truckWhereUniqueInput | truckWhereUniqueInput[]
    update?: truckUpdateWithWhereUniqueWithoutFleet_groupInput | truckUpdateWithWhereUniqueWithoutFleet_groupInput[]
    updateMany?: truckUpdateManyWithWhereWithoutFleet_groupInput | truckUpdateManyWithWhereWithoutFleet_groupInput[]
    deleteMany?: truckScalarWhereInput | truckScalarWhereInput[]
  }

  export type truckUncheckedUpdateManyWithoutFleet_groupNestedInput = {
    create?: XOR<truckCreateWithoutFleet_groupInput, truckUncheckedCreateWithoutFleet_groupInput> | truckCreateWithoutFleet_groupInput[] | truckUncheckedCreateWithoutFleet_groupInput[]
    connectOrCreate?: truckCreateOrConnectWithoutFleet_groupInput | truckCreateOrConnectWithoutFleet_groupInput[]
    upsert?: truckUpsertWithWhereUniqueWithoutFleet_groupInput | truckUpsertWithWhereUniqueWithoutFleet_groupInput[]
    createMany?: truckCreateManyFleet_groupInputEnvelope
    set?: truckWhereUniqueInput | truckWhereUniqueInput[]
    disconnect?: truckWhereUniqueInput | truckWhereUniqueInput[]
    delete?: truckWhereUniqueInput | truckWhereUniqueInput[]
    connect?: truckWhereUniqueInput | truckWhereUniqueInput[]
    update?: truckUpdateWithWhereUniqueWithoutFleet_groupInput | truckUpdateWithWhereUniqueWithoutFleet_groupInput[]
    updateMany?: truckUpdateManyWithWhereWithoutFleet_groupInput | truckUpdateManyWithWhereWithoutFleet_groupInput[]
    deleteMany?: truckScalarWhereInput | truckScalarWhereInput[]
  }

  export type truckCreateNestedOneWithoutFuel_level_eventInput = {
    create?: XOR<truckCreateWithoutFuel_level_eventInput, truckUncheckedCreateWithoutFuel_level_eventInput>
    connectOrCreate?: truckCreateOrConnectWithoutFuel_level_eventInput
    connect?: truckWhereUniqueInput
  }

  export type NullableFloatFieldUpdateOperationsInput = {
    set?: number | null
    increment?: number
    decrement?: number
    multiply?: number
    divide?: number
  }

  export type truckUpdateOneRequiredWithoutFuel_level_eventNestedInput = {
    create?: XOR<truckCreateWithoutFuel_level_eventInput, truckUncheckedCreateWithoutFuel_level_eventInput>
    connectOrCreate?: truckCreateOrConnectWithoutFuel_level_eventInput
    upsert?: truckUpsertWithoutFuel_level_eventInput
    connect?: truckWhereUniqueInput
    update?: XOR<XOR<truckUpdateToOneWithWhereWithoutFuel_level_eventInput, truckUpdateWithoutFuel_level_eventInput>, truckUncheckedUpdateWithoutFuel_level_eventInput>
  }

  export type BigIntFieldUpdateOperationsInput = {
    set?: bigint | number
    increment?: bigint | number
    decrement?: bigint | number
    multiply?: bigint | number
    divide?: bigint | number
  }

  export type deviceUpdateOneWithoutGps_positionNestedInput = {
    create?: XOR<deviceCreateWithoutGps_positionInput, deviceUncheckedCreateWithoutGps_positionInput>
    connectOrCreate?: deviceCreateOrConnectWithoutGps_positionInput
    upsert?: deviceUpsertWithoutGps_positionInput
    disconnect?: deviceWhereInput | boolean
    delete?: deviceWhereInput | boolean
    connect?: deviceWhereUniqueInput
    update?: XOR<XOR<deviceUpdateToOneWithWhereWithoutGps_positionInput, deviceUpdateWithoutGps_positionInput>, deviceUncheckedUpdateWithoutGps_positionInput>
  }

  export type truckUpdateOneRequiredWithoutGps_positionNestedInput = {
    create?: XOR<truckCreateWithoutGps_positionInput, truckUncheckedCreateWithoutGps_positionInput>
    connectOrCreate?: truckCreateOrConnectWithoutGps_positionInput
    upsert?: truckUpsertWithoutGps_positionInput
    connect?: truckWhereUniqueInput
    update?: XOR<XOR<truckUpdateToOneWithWhereWithoutGps_positionInput, truckUpdateWithoutGps_positionInput>, truckUncheckedUpdateWithoutGps_positionInput>
  }

  export type deviceCreateNestedOneWithoutHub_temperature_eventInput = {
    create?: XOR<deviceCreateWithoutHub_temperature_eventInput, deviceUncheckedCreateWithoutHub_temperature_eventInput>
    connectOrCreate?: deviceCreateOrConnectWithoutHub_temperature_eventInput
    connect?: deviceWhereUniqueInput
  }

  export type truckCreateNestedOneWithoutHub_temperature_eventInput = {
    create?: XOR<truckCreateWithoutHub_temperature_eventInput, truckUncheckedCreateWithoutHub_temperature_eventInput>
    connectOrCreate?: truckCreateOrConnectWithoutHub_temperature_eventInput
    connect?: truckWhereUniqueInput
  }

  export type deviceUpdateOneRequiredWithoutHub_temperature_eventNestedInput = {
    create?: XOR<deviceCreateWithoutHub_temperature_eventInput, deviceUncheckedCreateWithoutHub_temperature_eventInput>
    connectOrCreate?: deviceCreateOrConnectWithoutHub_temperature_eventInput
    upsert?: deviceUpsertWithoutHub_temperature_eventInput
    connect?: deviceWhereUniqueInput
    update?: XOR<XOR<deviceUpdateToOneWithWhereWithoutHub_temperature_eventInput, deviceUpdateWithoutHub_temperature_eventInput>, deviceUncheckedUpdateWithoutHub_temperature_eventInput>
  }

  export type truckUpdateOneRequiredWithoutHub_temperature_eventNestedInput = {
    create?: XOR<truckCreateWithoutHub_temperature_eventInput, truckUncheckedCreateWithoutHub_temperature_eventInput>
    connectOrCreate?: truckCreateOrConnectWithoutHub_temperature_eventInput
    upsert?: truckUpsertWithoutHub_temperature_eventInput
    connect?: truckWhereUniqueInput
    update?: XOR<XOR<truckUpdateToOneWithWhereWithoutHub_temperature_eventInput, truckUpdateWithoutHub_temperature_eventInput>, truckUncheckedUpdateWithoutHub_temperature_eventInput>
  }

  export type deviceCreateNestedOneWithoutLock_eventInput = {
    create?: XOR<deviceCreateWithoutLock_eventInput, deviceUncheckedCreateWithoutLock_eventInput>
    connectOrCreate?: deviceCreateOrConnectWithoutLock_eventInput
    connect?: deviceWhereUniqueInput
  }

  export type truckCreateNestedOneWithoutLock_eventInput = {
    create?: XOR<truckCreateWithoutLock_eventInput, truckUncheckedCreateWithoutLock_eventInput>
    connectOrCreate?: truckCreateOrConnectWithoutLock_eventInput
    connect?: truckWhereUniqueInput
  }

  export type deviceUpdateOneRequiredWithoutLock_eventNestedInput = {
    create?: XOR<deviceCreateWithoutLock_eventInput, deviceUncheckedCreateWithoutLock_eventInput>
    connectOrCreate?: deviceCreateOrConnectWithoutLock_eventInput
    upsert?: deviceUpsertWithoutLock_eventInput
    connect?: deviceWhereUniqueInput
    update?: XOR<XOR<deviceUpdateToOneWithWhereWithoutLock_eventInput, deviceUpdateWithoutLock_eventInput>, deviceUncheckedUpdateWithoutLock_eventInput>
  }

  export type truckUpdateOneRequiredWithoutLock_eventNestedInput = {
    create?: XOR<truckCreateWithoutLock_eventInput, truckUncheckedCreateWithoutLock_eventInput>
    connectOrCreate?: truckCreateOrConnectWithoutLock_eventInput
    upsert?: truckUpsertWithoutLock_eventInput
    connect?: truckWhereUniqueInput
    update?: XOR<XOR<truckUpdateToOneWithWhereWithoutLock_eventInput, truckUpdateWithoutLock_eventInput>, truckUncheckedUpdateWithoutLock_eventInput>
  }

  export type deviceCreateNestedOneWithoutSensorInput = {
    create?: XOR<deviceCreateWithoutSensorInput, deviceUncheckedCreateWithoutSensorInput>
    connectOrCreate?: deviceCreateOrConnectWithoutSensorInput
    connect?: deviceWhereUniqueInput
  }

  export type deviceUpdateOneRequiredWithoutSensorNestedInput = {
    create?: XOR<deviceCreateWithoutSensorInput, deviceUncheckedCreateWithoutSensorInput>
    connectOrCreate?: deviceCreateOrConnectWithoutSensorInput
    upsert?: deviceUpsertWithoutSensorInput
    connect?: deviceWhereUniqueInput
    update?: XOR<XOR<deviceUpdateToOneWithWhereWithoutSensorInput, deviceUpdateWithoutSensorInput>, deviceUncheckedUpdateWithoutSensorInput>
  }

  export type truckCreateNestedOneWithoutSensor_data_rawInput = {
    create?: XOR<truckCreateWithoutSensor_data_rawInput, truckUncheckedCreateWithoutSensor_data_rawInput>
    connectOrCreate?: truckCreateOrConnectWithoutSensor_data_rawInput
    connect?: truckWhereUniqueInput
  }

  export type sensor_processing_queueCreateNestedManyWithoutSensor_data_rawInput = {
    create?: XOR<sensor_processing_queueCreateWithoutSensor_data_rawInput, sensor_processing_queueUncheckedCreateWithoutSensor_data_rawInput> | sensor_processing_queueCreateWithoutSensor_data_rawInput[] | sensor_processing_queueUncheckedCreateWithoutSensor_data_rawInput[]
    connectOrCreate?: sensor_processing_queueCreateOrConnectWithoutSensor_data_rawInput | sensor_processing_queueCreateOrConnectWithoutSensor_data_rawInput[]
    createMany?: sensor_processing_queueCreateManySensor_data_rawInputEnvelope
    connect?: sensor_processing_queueWhereUniqueInput | sensor_processing_queueWhereUniqueInput[]
  }

  export type sensor_processing_queueUncheckedCreateNestedManyWithoutSensor_data_rawInput = {
    create?: XOR<sensor_processing_queueCreateWithoutSensor_data_rawInput, sensor_processing_queueUncheckedCreateWithoutSensor_data_rawInput> | sensor_processing_queueCreateWithoutSensor_data_rawInput[] | sensor_processing_queueUncheckedCreateWithoutSensor_data_rawInput[]
    connectOrCreate?: sensor_processing_queueCreateOrConnectWithoutSensor_data_rawInput | sensor_processing_queueCreateOrConnectWithoutSensor_data_rawInput[]
    createMany?: sensor_processing_queueCreateManySensor_data_rawInputEnvelope
    connect?: sensor_processing_queueWhereUniqueInput | sensor_processing_queueWhereUniqueInput[]
  }

  export type truckUpdateOneWithoutSensor_data_rawNestedInput = {
    create?: XOR<truckCreateWithoutSensor_data_rawInput, truckUncheckedCreateWithoutSensor_data_rawInput>
    connectOrCreate?: truckCreateOrConnectWithoutSensor_data_rawInput
    upsert?: truckUpsertWithoutSensor_data_rawInput
    disconnect?: truckWhereInput | boolean
    delete?: truckWhereInput | boolean
    connect?: truckWhereUniqueInput
    update?: XOR<XOR<truckUpdateToOneWithWhereWithoutSensor_data_rawInput, truckUpdateWithoutSensor_data_rawInput>, truckUncheckedUpdateWithoutSensor_data_rawInput>
  }

  export type sensor_processing_queueUpdateManyWithoutSensor_data_rawNestedInput = {
    create?: XOR<sensor_processing_queueCreateWithoutSensor_data_rawInput, sensor_processing_queueUncheckedCreateWithoutSensor_data_rawInput> | sensor_processing_queueCreateWithoutSensor_data_rawInput[] | sensor_processing_queueUncheckedCreateWithoutSensor_data_rawInput[]
    connectOrCreate?: sensor_processing_queueCreateOrConnectWithoutSensor_data_rawInput | sensor_processing_queueCreateOrConnectWithoutSensor_data_rawInput[]
    upsert?: sensor_processing_queueUpsertWithWhereUniqueWithoutSensor_data_rawInput | sensor_processing_queueUpsertWithWhereUniqueWithoutSensor_data_rawInput[]
    createMany?: sensor_processing_queueCreateManySensor_data_rawInputEnvelope
    set?: sensor_processing_queueWhereUniqueInput | sensor_processing_queueWhereUniqueInput[]
    disconnect?: sensor_processing_queueWhereUniqueInput | sensor_processing_queueWhereUniqueInput[]
    delete?: sensor_processing_queueWhereUniqueInput | sensor_processing_queueWhereUniqueInput[]
    connect?: sensor_processing_queueWhereUniqueInput | sensor_processing_queueWhereUniqueInput[]
    update?: sensor_processing_queueUpdateWithWhereUniqueWithoutSensor_data_rawInput | sensor_processing_queueUpdateWithWhereUniqueWithoutSensor_data_rawInput[]
    updateMany?: sensor_processing_queueUpdateManyWithWhereWithoutSensor_data_rawInput | sensor_processing_queueUpdateManyWithWhereWithoutSensor_data_rawInput[]
    deleteMany?: sensor_processing_queueScalarWhereInput | sensor_processing_queueScalarWhereInput[]
  }

  export type sensor_processing_queueUncheckedUpdateManyWithoutSensor_data_rawNestedInput = {
    create?: XOR<sensor_processing_queueCreateWithoutSensor_data_rawInput, sensor_processing_queueUncheckedCreateWithoutSensor_data_rawInput> | sensor_processing_queueCreateWithoutSensor_data_rawInput[] | sensor_processing_queueUncheckedCreateWithoutSensor_data_rawInput[]
    connectOrCreate?: sensor_processing_queueCreateOrConnectWithoutSensor_data_rawInput | sensor_processing_queueCreateOrConnectWithoutSensor_data_rawInput[]
    upsert?: sensor_processing_queueUpsertWithWhereUniqueWithoutSensor_data_rawInput | sensor_processing_queueUpsertWithWhereUniqueWithoutSensor_data_rawInput[]
    createMany?: sensor_processing_queueCreateManySensor_data_rawInputEnvelope
    set?: sensor_processing_queueWhereUniqueInput | sensor_processing_queueWhereUniqueInput[]
    disconnect?: sensor_processing_queueWhereUniqueInput | sensor_processing_queueWhereUniqueInput[]
    delete?: sensor_processing_queueWhereUniqueInput | sensor_processing_queueWhereUniqueInput[]
    connect?: sensor_processing_queueWhereUniqueInput | sensor_processing_queueWhereUniqueInput[]
    update?: sensor_processing_queueUpdateWithWhereUniqueWithoutSensor_data_rawInput | sensor_processing_queueUpdateWithWhereUniqueWithoutSensor_data_rawInput[]
    updateMany?: sensor_processing_queueUpdateManyWithWhereWithoutSensor_data_rawInput | sensor_processing_queueUpdateManyWithWhereWithoutSensor_data_rawInput[]
    deleteMany?: sensor_processing_queueScalarWhereInput | sensor_processing_queueScalarWhereInput[]
  }

  export type sensor_data_rawCreateNestedOneWithoutSensor_processing_queueInput = {
    create?: XOR<sensor_data_rawCreateWithoutSensor_processing_queueInput, sensor_data_rawUncheckedCreateWithoutSensor_processing_queueInput>
    connectOrCreate?: sensor_data_rawCreateOrConnectWithoutSensor_processing_queueInput
    connect?: sensor_data_rawWhereUniqueInput
  }

  export type sensor_data_rawUpdateOneWithoutSensor_processing_queueNestedInput = {
    create?: XOR<sensor_data_rawCreateWithoutSensor_processing_queueInput, sensor_data_rawUncheckedCreateWithoutSensor_processing_queueInput>
    connectOrCreate?: sensor_data_rawCreateOrConnectWithoutSensor_processing_queueInput
    upsert?: sensor_data_rawUpsertWithoutSensor_processing_queueInput
    disconnect?: sensor_data_rawWhereInput | boolean
    delete?: sensor_data_rawWhereInput | boolean
    connect?: sensor_data_rawWhereUniqueInput
    update?: XOR<XOR<sensor_data_rawUpdateToOneWithWhereWithoutSensor_processing_queueInput, sensor_data_rawUpdateWithoutSensor_processing_queueInput>, sensor_data_rawUncheckedUpdateWithoutSensor_processing_queueInput>
  }

  export type truckCreateNestedOneWithoutSpeed_eventInput = {
    create?: XOR<truckCreateWithoutSpeed_eventInput, truckUncheckedCreateWithoutSpeed_eventInput>
    connectOrCreate?: truckCreateOrConnectWithoutSpeed_eventInput
    connect?: truckWhereUniqueInput
  }

  export type truckUpdateOneRequiredWithoutSpeed_eventNestedInput = {
    create?: XOR<truckCreateWithoutSpeed_eventInput, truckUncheckedCreateWithoutSpeed_eventInput>
    connectOrCreate?: truckCreateOrConnectWithoutSpeed_eventInput
    upsert?: truckUpsertWithoutSpeed_eventInput
    connect?: truckWhereUniqueInput
    update?: XOR<XOR<truckUpdateToOneWithWhereWithoutSpeed_eventInput, truckUpdateWithoutSpeed_eventInput>, truckUncheckedUpdateWithoutSpeed_eventInput>
  }

  export type truckCreateNestedOneWithoutTire_position_configInput = {
    create?: XOR<truckCreateWithoutTire_position_configInput, truckUncheckedCreateWithoutTire_position_configInput>
    connectOrCreate?: truckCreateOrConnectWithoutTire_position_configInput
    connect?: truckWhereUniqueInput
  }

  export type truckUpdateOneWithoutTire_position_configNestedInput = {
    create?: XOR<truckCreateWithoutTire_position_configInput, truckUncheckedCreateWithoutTire_position_configInput>
    connectOrCreate?: truckCreateOrConnectWithoutTire_position_configInput
    upsert?: truckUpsertWithoutTire_position_configInput
    disconnect?: truckWhereInput | boolean
    delete?: truckWhereInput | boolean
    connect?: truckWhereUniqueInput
    update?: XOR<XOR<truckUpdateToOneWithWhereWithoutTire_position_configInput, truckUpdateWithoutTire_position_configInput>, truckUncheckedUpdateWithoutTire_position_configInput>
  }

  export type deviceCreateNestedOneWithoutTire_pressure_eventInput = {
    create?: XOR<deviceCreateWithoutTire_pressure_eventInput, deviceUncheckedCreateWithoutTire_pressure_eventInput>
    connectOrCreate?: deviceCreateOrConnectWithoutTire_pressure_eventInput
    connect?: deviceWhereUniqueInput
  }

  export type truckCreateNestedOneWithoutTire_pressure_eventInput = {
    create?: XOR<truckCreateWithoutTire_pressure_eventInput, truckUncheckedCreateWithoutTire_pressure_eventInput>
    connectOrCreate?: truckCreateOrConnectWithoutTire_pressure_eventInput
    connect?: truckWhereUniqueInput
  }

  export type deviceUpdateOneRequiredWithoutTire_pressure_eventNestedInput = {
    create?: XOR<deviceCreateWithoutTire_pressure_eventInput, deviceUncheckedCreateWithoutTire_pressure_eventInput>
    connectOrCreate?: deviceCreateOrConnectWithoutTire_pressure_eventInput
    upsert?: deviceUpsertWithoutTire_pressure_eventInput
    connect?: deviceWhereUniqueInput
    update?: XOR<XOR<deviceUpdateToOneWithWhereWithoutTire_pressure_eventInput, deviceUpdateWithoutTire_pressure_eventInput>, deviceUncheckedUpdateWithoutTire_pressure_eventInput>
  }

  export type truckUpdateOneRequiredWithoutTire_pressure_eventNestedInput = {
    create?: XOR<truckCreateWithoutTire_pressure_eventInput, truckUncheckedCreateWithoutTire_pressure_eventInput>
    connectOrCreate?: truckCreateOrConnectWithoutTire_pressure_eventInput
    upsert?: truckUpsertWithoutTire_pressure_eventInput
    connect?: truckWhereUniqueInput
    update?: XOR<XOR<truckUpdateToOneWithWhereWithoutTire_pressure_eventInput, truckUpdateWithoutTire_pressure_eventInput>, truckUncheckedUpdateWithoutTire_pressure_eventInput>
  }

  export type truckCreateNestedOneWithoutTripInput = {
    create?: XOR<truckCreateWithoutTripInput, truckUncheckedCreateWithoutTripInput>
    connectOrCreate?: truckCreateOrConnectWithoutTripInput
    connect?: truckWhereUniqueInput
  }

  export type truckUpdateOneRequiredWithoutTripNestedInput = {
    create?: XOR<truckCreateWithoutTripInput, truckUncheckedCreateWithoutTripInput>
    connectOrCreate?: truckCreateOrConnectWithoutTripInput
    upsert?: truckUpsertWithoutTripInput
    connect?: truckWhereUniqueInput
    update?: XOR<XOR<truckUpdateToOneWithWhereWithoutTripInput, truckUpdateWithoutTripInput>, truckUncheckedUpdateWithoutTripInput>
  }

  export type alert_eventCreateNestedManyWithoutTruckInput = {
    create?: XOR<alert_eventCreateWithoutTruckInput, alert_eventUncheckedCreateWithoutTruckInput> | alert_eventCreateWithoutTruckInput[] | alert_eventUncheckedCreateWithoutTruckInput[]
    connectOrCreate?: alert_eventCreateOrConnectWithoutTruckInput | alert_eventCreateOrConnectWithoutTruckInput[]
    createMany?: alert_eventCreateManyTruckInputEnvelope
    connect?: alert_eventWhereUniqueInput | alert_eventWhereUniqueInput[]
  }

  export type daily_routeCreateNestedManyWithoutTruckInput = {
    connect?: daily_routeWhereUniqueInput | daily_routeWhereUniqueInput[]
  }

  export type deviceCreateNestedManyWithoutTruckInput = {
    create?: XOR<deviceCreateWithoutTruckInput, deviceUncheckedCreateWithoutTruckInput> | deviceCreateWithoutTruckInput[] | deviceUncheckedCreateWithoutTruckInput[]
    connectOrCreate?: deviceCreateOrConnectWithoutTruckInput | deviceCreateOrConnectWithoutTruckInput[]
    createMany?: deviceCreateManyTruckInputEnvelope
    connect?: deviceWhereUniqueInput | deviceWhereUniqueInput[]
  }

  export type device_status_eventCreateNestedManyWithoutTruckInput = {
    create?: XOR<device_status_eventCreateWithoutTruckInput, device_status_eventUncheckedCreateWithoutTruckInput> | device_status_eventCreateWithoutTruckInput[] | device_status_eventUncheckedCreateWithoutTruckInput[]
    connectOrCreate?: device_status_eventCreateOrConnectWithoutTruckInput | device_status_eventCreateOrConnectWithoutTruckInput[]
    createMany?: device_status_eventCreateManyTruckInputEnvelope
    connect?: device_status_eventWhereUniqueInput | device_status_eventWhereUniqueInput[]
  }

  export type device_truck_assignmentCreateNestedManyWithoutTruckInput = {
    create?: XOR<device_truck_assignmentCreateWithoutTruckInput, device_truck_assignmentUncheckedCreateWithoutTruckInput> | device_truck_assignmentCreateWithoutTruckInput[] | device_truck_assignmentUncheckedCreateWithoutTruckInput[]
    connectOrCreate?: device_truck_assignmentCreateOrConnectWithoutTruckInput | device_truck_assignmentCreateOrConnectWithoutTruckInput[]
    createMany?: device_truck_assignmentCreateManyTruckInputEnvelope
    connect?: device_truck_assignmentWhereUniqueInput | device_truck_assignmentWhereUniqueInput[]
  }

  export type fuel_level_eventCreateNestedManyWithoutTruckInput = {
    create?: XOR<fuel_level_eventCreateWithoutTruckInput, fuel_level_eventUncheckedCreateWithoutTruckInput> | fuel_level_eventCreateWithoutTruckInput[] | fuel_level_eventUncheckedCreateWithoutTruckInput[]
    connectOrCreate?: fuel_level_eventCreateOrConnectWithoutTruckInput | fuel_level_eventCreateOrConnectWithoutTruckInput[]
    createMany?: fuel_level_eventCreateManyTruckInputEnvelope
    connect?: fuel_level_eventWhereUniqueInput | fuel_level_eventWhereUniqueInput[]
  }

  export type gps_positionCreateNestedManyWithoutTruckInput = {
    connect?: gps_positionWhereUniqueInput | gps_positionWhereUniqueInput[]
  }

  export type hub_temperature_eventCreateNestedManyWithoutTruckInput = {
    create?: XOR<hub_temperature_eventCreateWithoutTruckInput, hub_temperature_eventUncheckedCreateWithoutTruckInput> | hub_temperature_eventCreateWithoutTruckInput[] | hub_temperature_eventUncheckedCreateWithoutTruckInput[]
    connectOrCreate?: hub_temperature_eventCreateOrConnectWithoutTruckInput | hub_temperature_eventCreateOrConnectWithoutTruckInput[]
    createMany?: hub_temperature_eventCreateManyTruckInputEnvelope
    connect?: hub_temperature_eventWhereUniqueInput | hub_temperature_eventWhereUniqueInput[]
  }

  export type lock_eventCreateNestedManyWithoutTruckInput = {
    create?: XOR<lock_eventCreateWithoutTruckInput, lock_eventUncheckedCreateWithoutTruckInput> | lock_eventCreateWithoutTruckInput[] | lock_eventUncheckedCreateWithoutTruckInput[]
    connectOrCreate?: lock_eventCreateOrConnectWithoutTruckInput | lock_eventCreateOrConnectWithoutTruckInput[]
    createMany?: lock_eventCreateManyTruckInputEnvelope
    connect?: lock_eventWhereUniqueInput | lock_eventWhereUniqueInput[]
  }

  export type sensor_data_rawCreateNestedManyWithoutTruckInput = {
    create?: XOR<sensor_data_rawCreateWithoutTruckInput, sensor_data_rawUncheckedCreateWithoutTruckInput> | sensor_data_rawCreateWithoutTruckInput[] | sensor_data_rawUncheckedCreateWithoutTruckInput[]
    connectOrCreate?: sensor_data_rawCreateOrConnectWithoutTruckInput | sensor_data_rawCreateOrConnectWithoutTruckInput[]
    createMany?: sensor_data_rawCreateManyTruckInputEnvelope
    connect?: sensor_data_rawWhereUniqueInput | sensor_data_rawWhereUniqueInput[]
  }

  export type speed_eventCreateNestedManyWithoutTruckInput = {
    create?: XOR<speed_eventCreateWithoutTruckInput, speed_eventUncheckedCreateWithoutTruckInput> | speed_eventCreateWithoutTruckInput[] | speed_eventUncheckedCreateWithoutTruckInput[]
    connectOrCreate?: speed_eventCreateOrConnectWithoutTruckInput | speed_eventCreateOrConnectWithoutTruckInput[]
    createMany?: speed_eventCreateManyTruckInputEnvelope
    connect?: speed_eventWhereUniqueInput | speed_eventWhereUniqueInput[]
  }

  export type tire_position_configCreateNestedManyWithoutTruckInput = {
    create?: XOR<tire_position_configCreateWithoutTruckInput, tire_position_configUncheckedCreateWithoutTruckInput> | tire_position_configCreateWithoutTruckInput[] | tire_position_configUncheckedCreateWithoutTruckInput[]
    connectOrCreate?: tire_position_configCreateOrConnectWithoutTruckInput | tire_position_configCreateOrConnectWithoutTruckInput[]
    createMany?: tire_position_configCreateManyTruckInputEnvelope
    connect?: tire_position_configWhereUniqueInput | tire_position_configWhereUniqueInput[]
  }

  export type tire_pressure_eventCreateNestedManyWithoutTruckInput = {
    create?: XOR<tire_pressure_eventCreateWithoutTruckInput, tire_pressure_eventUncheckedCreateWithoutTruckInput> | tire_pressure_eventCreateWithoutTruckInput[] | tire_pressure_eventUncheckedCreateWithoutTruckInput[]
    connectOrCreate?: tire_pressure_eventCreateOrConnectWithoutTruckInput | tire_pressure_eventCreateOrConnectWithoutTruckInput[]
    createMany?: tire_pressure_eventCreateManyTruckInputEnvelope
    connect?: tire_pressure_eventWhereUniqueInput | tire_pressure_eventWhereUniqueInput[]
  }

  export type tripCreateNestedManyWithoutTruckInput = {
    create?: XOR<tripCreateWithoutTruckInput, tripUncheckedCreateWithoutTruckInput> | tripCreateWithoutTruckInput[] | tripUncheckedCreateWithoutTruckInput[]
    connectOrCreate?: tripCreateOrConnectWithoutTruckInput | tripCreateOrConnectWithoutTruckInput[]
    createMany?: tripCreateManyTruckInputEnvelope
    connect?: tripWhereUniqueInput | tripWhereUniqueInput[]
  }

  export type fleet_groupCreateNestedOneWithoutTruckInput = {
    create?: XOR<fleet_groupCreateWithoutTruckInput, fleet_groupUncheckedCreateWithoutTruckInput>
    connectOrCreate?: fleet_groupCreateOrConnectWithoutTruckInput
    connect?: fleet_groupWhereUniqueInput
  }

  export type truck_status_eventCreateNestedManyWithoutTruckInput = {
    create?: XOR<truck_status_eventCreateWithoutTruckInput, truck_status_eventUncheckedCreateWithoutTruckInput> | truck_status_eventCreateWithoutTruckInput[] | truck_status_eventUncheckedCreateWithoutTruckInput[]
    connectOrCreate?: truck_status_eventCreateOrConnectWithoutTruckInput | truck_status_eventCreateOrConnectWithoutTruckInput[]
    createMany?: truck_status_eventCreateManyTruckInputEnvelope
    connect?: truck_status_eventWhereUniqueInput | truck_status_eventWhereUniqueInput[]
  }

  export type alert_eventUncheckedCreateNestedManyWithoutTruckInput = {
    create?: XOR<alert_eventCreateWithoutTruckInput, alert_eventUncheckedCreateWithoutTruckInput> | alert_eventCreateWithoutTruckInput[] | alert_eventUncheckedCreateWithoutTruckInput[]
    connectOrCreate?: alert_eventCreateOrConnectWithoutTruckInput | alert_eventCreateOrConnectWithoutTruckInput[]
    createMany?: alert_eventCreateManyTruckInputEnvelope
    connect?: alert_eventWhereUniqueInput | alert_eventWhereUniqueInput[]
  }

  export type daily_routeUncheckedCreateNestedManyWithoutTruckInput = {
    connect?: daily_routeWhereUniqueInput | daily_routeWhereUniqueInput[]
  }

  export type deviceUncheckedCreateNestedManyWithoutTruckInput = {
    create?: XOR<deviceCreateWithoutTruckInput, deviceUncheckedCreateWithoutTruckInput> | deviceCreateWithoutTruckInput[] | deviceUncheckedCreateWithoutTruckInput[]
    connectOrCreate?: deviceCreateOrConnectWithoutTruckInput | deviceCreateOrConnectWithoutTruckInput[]
    createMany?: deviceCreateManyTruckInputEnvelope
    connect?: deviceWhereUniqueInput | deviceWhereUniqueInput[]
  }

  export type device_status_eventUncheckedCreateNestedManyWithoutTruckInput = {
    create?: XOR<device_status_eventCreateWithoutTruckInput, device_status_eventUncheckedCreateWithoutTruckInput> | device_status_eventCreateWithoutTruckInput[] | device_status_eventUncheckedCreateWithoutTruckInput[]
    connectOrCreate?: device_status_eventCreateOrConnectWithoutTruckInput | device_status_eventCreateOrConnectWithoutTruckInput[]
    createMany?: device_status_eventCreateManyTruckInputEnvelope
    connect?: device_status_eventWhereUniqueInput | device_status_eventWhereUniqueInput[]
  }

  export type device_truck_assignmentUncheckedCreateNestedManyWithoutTruckInput = {
    create?: XOR<device_truck_assignmentCreateWithoutTruckInput, device_truck_assignmentUncheckedCreateWithoutTruckInput> | device_truck_assignmentCreateWithoutTruckInput[] | device_truck_assignmentUncheckedCreateWithoutTruckInput[]
    connectOrCreate?: device_truck_assignmentCreateOrConnectWithoutTruckInput | device_truck_assignmentCreateOrConnectWithoutTruckInput[]
    createMany?: device_truck_assignmentCreateManyTruckInputEnvelope
    connect?: device_truck_assignmentWhereUniqueInput | device_truck_assignmentWhereUniqueInput[]
  }

  export type fuel_level_eventUncheckedCreateNestedManyWithoutTruckInput = {
    create?: XOR<fuel_level_eventCreateWithoutTruckInput, fuel_level_eventUncheckedCreateWithoutTruckInput> | fuel_level_eventCreateWithoutTruckInput[] | fuel_level_eventUncheckedCreateWithoutTruckInput[]
    connectOrCreate?: fuel_level_eventCreateOrConnectWithoutTruckInput | fuel_level_eventCreateOrConnectWithoutTruckInput[]
    createMany?: fuel_level_eventCreateManyTruckInputEnvelope
    connect?: fuel_level_eventWhereUniqueInput | fuel_level_eventWhereUniqueInput[]
  }

  export type gps_positionUncheckedCreateNestedManyWithoutTruckInput = {
    connect?: gps_positionWhereUniqueInput | gps_positionWhereUniqueInput[]
  }

  export type hub_temperature_eventUncheckedCreateNestedManyWithoutTruckInput = {
    create?: XOR<hub_temperature_eventCreateWithoutTruckInput, hub_temperature_eventUncheckedCreateWithoutTruckInput> | hub_temperature_eventCreateWithoutTruckInput[] | hub_temperature_eventUncheckedCreateWithoutTruckInput[]
    connectOrCreate?: hub_temperature_eventCreateOrConnectWithoutTruckInput | hub_temperature_eventCreateOrConnectWithoutTruckInput[]
    createMany?: hub_temperature_eventCreateManyTruckInputEnvelope
    connect?: hub_temperature_eventWhereUniqueInput | hub_temperature_eventWhereUniqueInput[]
  }

  export type lock_eventUncheckedCreateNestedManyWithoutTruckInput = {
    create?: XOR<lock_eventCreateWithoutTruckInput, lock_eventUncheckedCreateWithoutTruckInput> | lock_eventCreateWithoutTruckInput[] | lock_eventUncheckedCreateWithoutTruckInput[]
    connectOrCreate?: lock_eventCreateOrConnectWithoutTruckInput | lock_eventCreateOrConnectWithoutTruckInput[]
    createMany?: lock_eventCreateManyTruckInputEnvelope
    connect?: lock_eventWhereUniqueInput | lock_eventWhereUniqueInput[]
  }

  export type sensor_data_rawUncheckedCreateNestedManyWithoutTruckInput = {
    create?: XOR<sensor_data_rawCreateWithoutTruckInput, sensor_data_rawUncheckedCreateWithoutTruckInput> | sensor_data_rawCreateWithoutTruckInput[] | sensor_data_rawUncheckedCreateWithoutTruckInput[]
    connectOrCreate?: sensor_data_rawCreateOrConnectWithoutTruckInput | sensor_data_rawCreateOrConnectWithoutTruckInput[]
    createMany?: sensor_data_rawCreateManyTruckInputEnvelope
    connect?: sensor_data_rawWhereUniqueInput | sensor_data_rawWhereUniqueInput[]
  }

  export type speed_eventUncheckedCreateNestedManyWithoutTruckInput = {
    create?: XOR<speed_eventCreateWithoutTruckInput, speed_eventUncheckedCreateWithoutTruckInput> | speed_eventCreateWithoutTruckInput[] | speed_eventUncheckedCreateWithoutTruckInput[]
    connectOrCreate?: speed_eventCreateOrConnectWithoutTruckInput | speed_eventCreateOrConnectWithoutTruckInput[]
    createMany?: speed_eventCreateManyTruckInputEnvelope
    connect?: speed_eventWhereUniqueInput | speed_eventWhereUniqueInput[]
  }

  export type tire_position_configUncheckedCreateNestedManyWithoutTruckInput = {
    create?: XOR<tire_position_configCreateWithoutTruckInput, tire_position_configUncheckedCreateWithoutTruckInput> | tire_position_configCreateWithoutTruckInput[] | tire_position_configUncheckedCreateWithoutTruckInput[]
    connectOrCreate?: tire_position_configCreateOrConnectWithoutTruckInput | tire_position_configCreateOrConnectWithoutTruckInput[]
    createMany?: tire_position_configCreateManyTruckInputEnvelope
    connect?: tire_position_configWhereUniqueInput | tire_position_configWhereUniqueInput[]
  }

  export type tire_pressure_eventUncheckedCreateNestedManyWithoutTruckInput = {
    create?: XOR<tire_pressure_eventCreateWithoutTruckInput, tire_pressure_eventUncheckedCreateWithoutTruckInput> | tire_pressure_eventCreateWithoutTruckInput[] | tire_pressure_eventUncheckedCreateWithoutTruckInput[]
    connectOrCreate?: tire_pressure_eventCreateOrConnectWithoutTruckInput | tire_pressure_eventCreateOrConnectWithoutTruckInput[]
    createMany?: tire_pressure_eventCreateManyTruckInputEnvelope
    connect?: tire_pressure_eventWhereUniqueInput | tire_pressure_eventWhereUniqueInput[]
  }

  export type tripUncheckedCreateNestedManyWithoutTruckInput = {
    create?: XOR<tripCreateWithoutTruckInput, tripUncheckedCreateWithoutTruckInput> | tripCreateWithoutTruckInput[] | tripUncheckedCreateWithoutTruckInput[]
    connectOrCreate?: tripCreateOrConnectWithoutTruckInput | tripCreateOrConnectWithoutTruckInput[]
    createMany?: tripCreateManyTruckInputEnvelope
    connect?: tripWhereUniqueInput | tripWhereUniqueInput[]
  }

  export type truck_status_eventUncheckedCreateNestedManyWithoutTruckInput = {
    create?: XOR<truck_status_eventCreateWithoutTruckInput, truck_status_eventUncheckedCreateWithoutTruckInput> | truck_status_eventCreateWithoutTruckInput[] | truck_status_eventUncheckedCreateWithoutTruckInput[]
    connectOrCreate?: truck_status_eventCreateOrConnectWithoutTruckInput | truck_status_eventCreateOrConnectWithoutTruckInput[]
    createMany?: truck_status_eventCreateManyTruckInputEnvelope
    connect?: truck_status_eventWhereUniqueInput | truck_status_eventWhereUniqueInput[]
  }

  export type alert_eventUpdateManyWithoutTruckNestedInput = {
    create?: XOR<alert_eventCreateWithoutTruckInput, alert_eventUncheckedCreateWithoutTruckInput> | alert_eventCreateWithoutTruckInput[] | alert_eventUncheckedCreateWithoutTruckInput[]
    connectOrCreate?: alert_eventCreateOrConnectWithoutTruckInput | alert_eventCreateOrConnectWithoutTruckInput[]
    upsert?: alert_eventUpsertWithWhereUniqueWithoutTruckInput | alert_eventUpsertWithWhereUniqueWithoutTruckInput[]
    createMany?: alert_eventCreateManyTruckInputEnvelope
    set?: alert_eventWhereUniqueInput | alert_eventWhereUniqueInput[]
    disconnect?: alert_eventWhereUniqueInput | alert_eventWhereUniqueInput[]
    delete?: alert_eventWhereUniqueInput | alert_eventWhereUniqueInput[]
    connect?: alert_eventWhereUniqueInput | alert_eventWhereUniqueInput[]
    update?: alert_eventUpdateWithWhereUniqueWithoutTruckInput | alert_eventUpdateWithWhereUniqueWithoutTruckInput[]
    updateMany?: alert_eventUpdateManyWithWhereWithoutTruckInput | alert_eventUpdateManyWithWhereWithoutTruckInput[]
    deleteMany?: alert_eventScalarWhereInput | alert_eventScalarWhereInput[]
  }

  export type daily_routeUpdateManyWithoutTruckNestedInput = {
    set?: daily_routeWhereUniqueInput | daily_routeWhereUniqueInput[]
    disconnect?: daily_routeWhereUniqueInput | daily_routeWhereUniqueInput[]
    delete?: daily_routeWhereUniqueInput | daily_routeWhereUniqueInput[]
    connect?: daily_routeWhereUniqueInput | daily_routeWhereUniqueInput[]
    update?: daily_routeUpdateWithWhereUniqueWithoutTruckInput | daily_routeUpdateWithWhereUniqueWithoutTruckInput[]
    updateMany?: daily_routeUpdateManyWithWhereWithoutTruckInput | daily_routeUpdateManyWithWhereWithoutTruckInput[]
    deleteMany?: daily_routeScalarWhereInput | daily_routeScalarWhereInput[]
  }

  export type deviceUpdateManyWithoutTruckNestedInput = {
    create?: XOR<deviceCreateWithoutTruckInput, deviceUncheckedCreateWithoutTruckInput> | deviceCreateWithoutTruckInput[] | deviceUncheckedCreateWithoutTruckInput[]
    connectOrCreate?: deviceCreateOrConnectWithoutTruckInput | deviceCreateOrConnectWithoutTruckInput[]
    upsert?: deviceUpsertWithWhereUniqueWithoutTruckInput | deviceUpsertWithWhereUniqueWithoutTruckInput[]
    createMany?: deviceCreateManyTruckInputEnvelope
    set?: deviceWhereUniqueInput | deviceWhereUniqueInput[]
    disconnect?: deviceWhereUniqueInput | deviceWhereUniqueInput[]
    delete?: deviceWhereUniqueInput | deviceWhereUniqueInput[]
    connect?: deviceWhereUniqueInput | deviceWhereUniqueInput[]
    update?: deviceUpdateWithWhereUniqueWithoutTruckInput | deviceUpdateWithWhereUniqueWithoutTruckInput[]
    updateMany?: deviceUpdateManyWithWhereWithoutTruckInput | deviceUpdateManyWithWhereWithoutTruckInput[]
    deleteMany?: deviceScalarWhereInput | deviceScalarWhereInput[]
  }

  export type device_status_eventUpdateManyWithoutTruckNestedInput = {
    create?: XOR<device_status_eventCreateWithoutTruckInput, device_status_eventUncheckedCreateWithoutTruckInput> | device_status_eventCreateWithoutTruckInput[] | device_status_eventUncheckedCreateWithoutTruckInput[]
    connectOrCreate?: device_status_eventCreateOrConnectWithoutTruckInput | device_status_eventCreateOrConnectWithoutTruckInput[]
    upsert?: device_status_eventUpsertWithWhereUniqueWithoutTruckInput | device_status_eventUpsertWithWhereUniqueWithoutTruckInput[]
    createMany?: device_status_eventCreateManyTruckInputEnvelope
    set?: device_status_eventWhereUniqueInput | device_status_eventWhereUniqueInput[]
    disconnect?: device_status_eventWhereUniqueInput | device_status_eventWhereUniqueInput[]
    delete?: device_status_eventWhereUniqueInput | device_status_eventWhereUniqueInput[]
    connect?: device_status_eventWhereUniqueInput | device_status_eventWhereUniqueInput[]
    update?: device_status_eventUpdateWithWhereUniqueWithoutTruckInput | device_status_eventUpdateWithWhereUniqueWithoutTruckInput[]
    updateMany?: device_status_eventUpdateManyWithWhereWithoutTruckInput | device_status_eventUpdateManyWithWhereWithoutTruckInput[]
    deleteMany?: device_status_eventScalarWhereInput | device_status_eventScalarWhereInput[]
  }

  export type device_truck_assignmentUpdateManyWithoutTruckNestedInput = {
    create?: XOR<device_truck_assignmentCreateWithoutTruckInput, device_truck_assignmentUncheckedCreateWithoutTruckInput> | device_truck_assignmentCreateWithoutTruckInput[] | device_truck_assignmentUncheckedCreateWithoutTruckInput[]
    connectOrCreate?: device_truck_assignmentCreateOrConnectWithoutTruckInput | device_truck_assignmentCreateOrConnectWithoutTruckInput[]
    upsert?: device_truck_assignmentUpsertWithWhereUniqueWithoutTruckInput | device_truck_assignmentUpsertWithWhereUniqueWithoutTruckInput[]
    createMany?: device_truck_assignmentCreateManyTruckInputEnvelope
    set?: device_truck_assignmentWhereUniqueInput | device_truck_assignmentWhereUniqueInput[]
    disconnect?: device_truck_assignmentWhereUniqueInput | device_truck_assignmentWhereUniqueInput[]
    delete?: device_truck_assignmentWhereUniqueInput | device_truck_assignmentWhereUniqueInput[]
    connect?: device_truck_assignmentWhereUniqueInput | device_truck_assignmentWhereUniqueInput[]
    update?: device_truck_assignmentUpdateWithWhereUniqueWithoutTruckInput | device_truck_assignmentUpdateWithWhereUniqueWithoutTruckInput[]
    updateMany?: device_truck_assignmentUpdateManyWithWhereWithoutTruckInput | device_truck_assignmentUpdateManyWithWhereWithoutTruckInput[]
    deleteMany?: device_truck_assignmentScalarWhereInput | device_truck_assignmentScalarWhereInput[]
  }

  export type fuel_level_eventUpdateManyWithoutTruckNestedInput = {
    create?: XOR<fuel_level_eventCreateWithoutTruckInput, fuel_level_eventUncheckedCreateWithoutTruckInput> | fuel_level_eventCreateWithoutTruckInput[] | fuel_level_eventUncheckedCreateWithoutTruckInput[]
    connectOrCreate?: fuel_level_eventCreateOrConnectWithoutTruckInput | fuel_level_eventCreateOrConnectWithoutTruckInput[]
    upsert?: fuel_level_eventUpsertWithWhereUniqueWithoutTruckInput | fuel_level_eventUpsertWithWhereUniqueWithoutTruckInput[]
    createMany?: fuel_level_eventCreateManyTruckInputEnvelope
    set?: fuel_level_eventWhereUniqueInput | fuel_level_eventWhereUniqueInput[]
    disconnect?: fuel_level_eventWhereUniqueInput | fuel_level_eventWhereUniqueInput[]
    delete?: fuel_level_eventWhereUniqueInput | fuel_level_eventWhereUniqueInput[]
    connect?: fuel_level_eventWhereUniqueInput | fuel_level_eventWhereUniqueInput[]
    update?: fuel_level_eventUpdateWithWhereUniqueWithoutTruckInput | fuel_level_eventUpdateWithWhereUniqueWithoutTruckInput[]
    updateMany?: fuel_level_eventUpdateManyWithWhereWithoutTruckInput | fuel_level_eventUpdateManyWithWhereWithoutTruckInput[]
    deleteMany?: fuel_level_eventScalarWhereInput | fuel_level_eventScalarWhereInput[]
  }

  export type gps_positionUpdateManyWithoutTruckNestedInput = {
    set?: gps_positionWhereUniqueInput | gps_positionWhereUniqueInput[]
    disconnect?: gps_positionWhereUniqueInput | gps_positionWhereUniqueInput[]
    delete?: gps_positionWhereUniqueInput | gps_positionWhereUniqueInput[]
    connect?: gps_positionWhereUniqueInput | gps_positionWhereUniqueInput[]
    update?: gps_positionUpdateWithWhereUniqueWithoutTruckInput | gps_positionUpdateWithWhereUniqueWithoutTruckInput[]
    updateMany?: gps_positionUpdateManyWithWhereWithoutTruckInput | gps_positionUpdateManyWithWhereWithoutTruckInput[]
    deleteMany?: gps_positionScalarWhereInput | gps_positionScalarWhereInput[]
  }

  export type hub_temperature_eventUpdateManyWithoutTruckNestedInput = {
    create?: XOR<hub_temperature_eventCreateWithoutTruckInput, hub_temperature_eventUncheckedCreateWithoutTruckInput> | hub_temperature_eventCreateWithoutTruckInput[] | hub_temperature_eventUncheckedCreateWithoutTruckInput[]
    connectOrCreate?: hub_temperature_eventCreateOrConnectWithoutTruckInput | hub_temperature_eventCreateOrConnectWithoutTruckInput[]
    upsert?: hub_temperature_eventUpsertWithWhereUniqueWithoutTruckInput | hub_temperature_eventUpsertWithWhereUniqueWithoutTruckInput[]
    createMany?: hub_temperature_eventCreateManyTruckInputEnvelope
    set?: hub_temperature_eventWhereUniqueInput | hub_temperature_eventWhereUniqueInput[]
    disconnect?: hub_temperature_eventWhereUniqueInput | hub_temperature_eventWhereUniqueInput[]
    delete?: hub_temperature_eventWhereUniqueInput | hub_temperature_eventWhereUniqueInput[]
    connect?: hub_temperature_eventWhereUniqueInput | hub_temperature_eventWhereUniqueInput[]
    update?: hub_temperature_eventUpdateWithWhereUniqueWithoutTruckInput | hub_temperature_eventUpdateWithWhereUniqueWithoutTruckInput[]
    updateMany?: hub_temperature_eventUpdateManyWithWhereWithoutTruckInput | hub_temperature_eventUpdateManyWithWhereWithoutTruckInput[]
    deleteMany?: hub_temperature_eventScalarWhereInput | hub_temperature_eventScalarWhereInput[]
  }

  export type lock_eventUpdateManyWithoutTruckNestedInput = {
    create?: XOR<lock_eventCreateWithoutTruckInput, lock_eventUncheckedCreateWithoutTruckInput> | lock_eventCreateWithoutTruckInput[] | lock_eventUncheckedCreateWithoutTruckInput[]
    connectOrCreate?: lock_eventCreateOrConnectWithoutTruckInput | lock_eventCreateOrConnectWithoutTruckInput[]
    upsert?: lock_eventUpsertWithWhereUniqueWithoutTruckInput | lock_eventUpsertWithWhereUniqueWithoutTruckInput[]
    createMany?: lock_eventCreateManyTruckInputEnvelope
    set?: lock_eventWhereUniqueInput | lock_eventWhereUniqueInput[]
    disconnect?: lock_eventWhereUniqueInput | lock_eventWhereUniqueInput[]
    delete?: lock_eventWhereUniqueInput | lock_eventWhereUniqueInput[]
    connect?: lock_eventWhereUniqueInput | lock_eventWhereUniqueInput[]
    update?: lock_eventUpdateWithWhereUniqueWithoutTruckInput | lock_eventUpdateWithWhereUniqueWithoutTruckInput[]
    updateMany?: lock_eventUpdateManyWithWhereWithoutTruckInput | lock_eventUpdateManyWithWhereWithoutTruckInput[]
    deleteMany?: lock_eventScalarWhereInput | lock_eventScalarWhereInput[]
  }

  export type sensor_data_rawUpdateManyWithoutTruckNestedInput = {
    create?: XOR<sensor_data_rawCreateWithoutTruckInput, sensor_data_rawUncheckedCreateWithoutTruckInput> | sensor_data_rawCreateWithoutTruckInput[] | sensor_data_rawUncheckedCreateWithoutTruckInput[]
    connectOrCreate?: sensor_data_rawCreateOrConnectWithoutTruckInput | sensor_data_rawCreateOrConnectWithoutTruckInput[]
    upsert?: sensor_data_rawUpsertWithWhereUniqueWithoutTruckInput | sensor_data_rawUpsertWithWhereUniqueWithoutTruckInput[]
    createMany?: sensor_data_rawCreateManyTruckInputEnvelope
    set?: sensor_data_rawWhereUniqueInput | sensor_data_rawWhereUniqueInput[]
    disconnect?: sensor_data_rawWhereUniqueInput | sensor_data_rawWhereUniqueInput[]
    delete?: sensor_data_rawWhereUniqueInput | sensor_data_rawWhereUniqueInput[]
    connect?: sensor_data_rawWhereUniqueInput | sensor_data_rawWhereUniqueInput[]
    update?: sensor_data_rawUpdateWithWhereUniqueWithoutTruckInput | sensor_data_rawUpdateWithWhereUniqueWithoutTruckInput[]
    updateMany?: sensor_data_rawUpdateManyWithWhereWithoutTruckInput | sensor_data_rawUpdateManyWithWhereWithoutTruckInput[]
    deleteMany?: sensor_data_rawScalarWhereInput | sensor_data_rawScalarWhereInput[]
  }

  export type speed_eventUpdateManyWithoutTruckNestedInput = {
    create?: XOR<speed_eventCreateWithoutTruckInput, speed_eventUncheckedCreateWithoutTruckInput> | speed_eventCreateWithoutTruckInput[] | speed_eventUncheckedCreateWithoutTruckInput[]
    connectOrCreate?: speed_eventCreateOrConnectWithoutTruckInput | speed_eventCreateOrConnectWithoutTruckInput[]
    upsert?: speed_eventUpsertWithWhereUniqueWithoutTruckInput | speed_eventUpsertWithWhereUniqueWithoutTruckInput[]
    createMany?: speed_eventCreateManyTruckInputEnvelope
    set?: speed_eventWhereUniqueInput | speed_eventWhereUniqueInput[]
    disconnect?: speed_eventWhereUniqueInput | speed_eventWhereUniqueInput[]
    delete?: speed_eventWhereUniqueInput | speed_eventWhereUniqueInput[]
    connect?: speed_eventWhereUniqueInput | speed_eventWhereUniqueInput[]
    update?: speed_eventUpdateWithWhereUniqueWithoutTruckInput | speed_eventUpdateWithWhereUniqueWithoutTruckInput[]
    updateMany?: speed_eventUpdateManyWithWhereWithoutTruckInput | speed_eventUpdateManyWithWhereWithoutTruckInput[]
    deleteMany?: speed_eventScalarWhereInput | speed_eventScalarWhereInput[]
  }

  export type tire_position_configUpdateManyWithoutTruckNestedInput = {
    create?: XOR<tire_position_configCreateWithoutTruckInput, tire_position_configUncheckedCreateWithoutTruckInput> | tire_position_configCreateWithoutTruckInput[] | tire_position_configUncheckedCreateWithoutTruckInput[]
    connectOrCreate?: tire_position_configCreateOrConnectWithoutTruckInput | tire_position_configCreateOrConnectWithoutTruckInput[]
    upsert?: tire_position_configUpsertWithWhereUniqueWithoutTruckInput | tire_position_configUpsertWithWhereUniqueWithoutTruckInput[]
    createMany?: tire_position_configCreateManyTruckInputEnvelope
    set?: tire_position_configWhereUniqueInput | tire_position_configWhereUniqueInput[]
    disconnect?: tire_position_configWhereUniqueInput | tire_position_configWhereUniqueInput[]
    delete?: tire_position_configWhereUniqueInput | tire_position_configWhereUniqueInput[]
    connect?: tire_position_configWhereUniqueInput | tire_position_configWhereUniqueInput[]
    update?: tire_position_configUpdateWithWhereUniqueWithoutTruckInput | tire_position_configUpdateWithWhereUniqueWithoutTruckInput[]
    updateMany?: tire_position_configUpdateManyWithWhereWithoutTruckInput | tire_position_configUpdateManyWithWhereWithoutTruckInput[]
    deleteMany?: tire_position_configScalarWhereInput | tire_position_configScalarWhereInput[]
  }

  export type tire_pressure_eventUpdateManyWithoutTruckNestedInput = {
    create?: XOR<tire_pressure_eventCreateWithoutTruckInput, tire_pressure_eventUncheckedCreateWithoutTruckInput> | tire_pressure_eventCreateWithoutTruckInput[] | tire_pressure_eventUncheckedCreateWithoutTruckInput[]
    connectOrCreate?: tire_pressure_eventCreateOrConnectWithoutTruckInput | tire_pressure_eventCreateOrConnectWithoutTruckInput[]
    upsert?: tire_pressure_eventUpsertWithWhereUniqueWithoutTruckInput | tire_pressure_eventUpsertWithWhereUniqueWithoutTruckInput[]
    createMany?: tire_pressure_eventCreateManyTruckInputEnvelope
    set?: tire_pressure_eventWhereUniqueInput | tire_pressure_eventWhereUniqueInput[]
    disconnect?: tire_pressure_eventWhereUniqueInput | tire_pressure_eventWhereUniqueInput[]
    delete?: tire_pressure_eventWhereUniqueInput | tire_pressure_eventWhereUniqueInput[]
    connect?: tire_pressure_eventWhereUniqueInput | tire_pressure_eventWhereUniqueInput[]
    update?: tire_pressure_eventUpdateWithWhereUniqueWithoutTruckInput | tire_pressure_eventUpdateWithWhereUniqueWithoutTruckInput[]
    updateMany?: tire_pressure_eventUpdateManyWithWhereWithoutTruckInput | tire_pressure_eventUpdateManyWithWhereWithoutTruckInput[]
    deleteMany?: tire_pressure_eventScalarWhereInput | tire_pressure_eventScalarWhereInput[]
  }

  export type tripUpdateManyWithoutTruckNestedInput = {
    create?: XOR<tripCreateWithoutTruckInput, tripUncheckedCreateWithoutTruckInput> | tripCreateWithoutTruckInput[] | tripUncheckedCreateWithoutTruckInput[]
    connectOrCreate?: tripCreateOrConnectWithoutTruckInput | tripCreateOrConnectWithoutTruckInput[]
    upsert?: tripUpsertWithWhereUniqueWithoutTruckInput | tripUpsertWithWhereUniqueWithoutTruckInput[]
    createMany?: tripCreateManyTruckInputEnvelope
    set?: tripWhereUniqueInput | tripWhereUniqueInput[]
    disconnect?: tripWhereUniqueInput | tripWhereUniqueInput[]
    delete?: tripWhereUniqueInput | tripWhereUniqueInput[]
    connect?: tripWhereUniqueInput | tripWhereUniqueInput[]
    update?: tripUpdateWithWhereUniqueWithoutTruckInput | tripUpdateWithWhereUniqueWithoutTruckInput[]
    updateMany?: tripUpdateManyWithWhereWithoutTruckInput | tripUpdateManyWithWhereWithoutTruckInput[]
    deleteMany?: tripScalarWhereInput | tripScalarWhereInput[]
  }

  export type fleet_groupUpdateOneWithoutTruckNestedInput = {
    create?: XOR<fleet_groupCreateWithoutTruckInput, fleet_groupUncheckedCreateWithoutTruckInput>
    connectOrCreate?: fleet_groupCreateOrConnectWithoutTruckInput
    upsert?: fleet_groupUpsertWithoutTruckInput
    disconnect?: fleet_groupWhereInput | boolean
    delete?: fleet_groupWhereInput | boolean
    connect?: fleet_groupWhereUniqueInput
    update?: XOR<XOR<fleet_groupUpdateToOneWithWhereWithoutTruckInput, fleet_groupUpdateWithoutTruckInput>, fleet_groupUncheckedUpdateWithoutTruckInput>
  }

  export type truck_status_eventUpdateManyWithoutTruckNestedInput = {
    create?: XOR<truck_status_eventCreateWithoutTruckInput, truck_status_eventUncheckedCreateWithoutTruckInput> | truck_status_eventCreateWithoutTruckInput[] | truck_status_eventUncheckedCreateWithoutTruckInput[]
    connectOrCreate?: truck_status_eventCreateOrConnectWithoutTruckInput | truck_status_eventCreateOrConnectWithoutTruckInput[]
    upsert?: truck_status_eventUpsertWithWhereUniqueWithoutTruckInput | truck_status_eventUpsertWithWhereUniqueWithoutTruckInput[]
    createMany?: truck_status_eventCreateManyTruckInputEnvelope
    set?: truck_status_eventWhereUniqueInput | truck_status_eventWhereUniqueInput[]
    disconnect?: truck_status_eventWhereUniqueInput | truck_status_eventWhereUniqueInput[]
    delete?: truck_status_eventWhereUniqueInput | truck_status_eventWhereUniqueInput[]
    connect?: truck_status_eventWhereUniqueInput | truck_status_eventWhereUniqueInput[]
    update?: truck_status_eventUpdateWithWhereUniqueWithoutTruckInput | truck_status_eventUpdateWithWhereUniqueWithoutTruckInput[]
    updateMany?: truck_status_eventUpdateManyWithWhereWithoutTruckInput | truck_status_eventUpdateManyWithWhereWithoutTruckInput[]
    deleteMany?: truck_status_eventScalarWhereInput | truck_status_eventScalarWhereInput[]
  }

  export type alert_eventUncheckedUpdateManyWithoutTruckNestedInput = {
    create?: XOR<alert_eventCreateWithoutTruckInput, alert_eventUncheckedCreateWithoutTruckInput> | alert_eventCreateWithoutTruckInput[] | alert_eventUncheckedCreateWithoutTruckInput[]
    connectOrCreate?: alert_eventCreateOrConnectWithoutTruckInput | alert_eventCreateOrConnectWithoutTruckInput[]
    upsert?: alert_eventUpsertWithWhereUniqueWithoutTruckInput | alert_eventUpsertWithWhereUniqueWithoutTruckInput[]
    createMany?: alert_eventCreateManyTruckInputEnvelope
    set?: alert_eventWhereUniqueInput | alert_eventWhereUniqueInput[]
    disconnect?: alert_eventWhereUniqueInput | alert_eventWhereUniqueInput[]
    delete?: alert_eventWhereUniqueInput | alert_eventWhereUniqueInput[]
    connect?: alert_eventWhereUniqueInput | alert_eventWhereUniqueInput[]
    update?: alert_eventUpdateWithWhereUniqueWithoutTruckInput | alert_eventUpdateWithWhereUniqueWithoutTruckInput[]
    updateMany?: alert_eventUpdateManyWithWhereWithoutTruckInput | alert_eventUpdateManyWithWhereWithoutTruckInput[]
    deleteMany?: alert_eventScalarWhereInput | alert_eventScalarWhereInput[]
  }

  export type daily_routeUncheckedUpdateManyWithoutTruckNestedInput = {
    set?: daily_routeWhereUniqueInput | daily_routeWhereUniqueInput[]
    disconnect?: daily_routeWhereUniqueInput | daily_routeWhereUniqueInput[]
    delete?: daily_routeWhereUniqueInput | daily_routeWhereUniqueInput[]
    connect?: daily_routeWhereUniqueInput | daily_routeWhereUniqueInput[]
    update?: daily_routeUpdateWithWhereUniqueWithoutTruckInput | daily_routeUpdateWithWhereUniqueWithoutTruckInput[]
    updateMany?: daily_routeUpdateManyWithWhereWithoutTruckInput | daily_routeUpdateManyWithWhereWithoutTruckInput[]
    deleteMany?: daily_routeScalarWhereInput | daily_routeScalarWhereInput[]
  }

  export type deviceUncheckedUpdateManyWithoutTruckNestedInput = {
    create?: XOR<deviceCreateWithoutTruckInput, deviceUncheckedCreateWithoutTruckInput> | deviceCreateWithoutTruckInput[] | deviceUncheckedCreateWithoutTruckInput[]
    connectOrCreate?: deviceCreateOrConnectWithoutTruckInput | deviceCreateOrConnectWithoutTruckInput[]
    upsert?: deviceUpsertWithWhereUniqueWithoutTruckInput | deviceUpsertWithWhereUniqueWithoutTruckInput[]
    createMany?: deviceCreateManyTruckInputEnvelope
    set?: deviceWhereUniqueInput | deviceWhereUniqueInput[]
    disconnect?: deviceWhereUniqueInput | deviceWhereUniqueInput[]
    delete?: deviceWhereUniqueInput | deviceWhereUniqueInput[]
    connect?: deviceWhereUniqueInput | deviceWhereUniqueInput[]
    update?: deviceUpdateWithWhereUniqueWithoutTruckInput | deviceUpdateWithWhereUniqueWithoutTruckInput[]
    updateMany?: deviceUpdateManyWithWhereWithoutTruckInput | deviceUpdateManyWithWhereWithoutTruckInput[]
    deleteMany?: deviceScalarWhereInput | deviceScalarWhereInput[]
  }

  export type device_status_eventUncheckedUpdateManyWithoutTruckNestedInput = {
    create?: XOR<device_status_eventCreateWithoutTruckInput, device_status_eventUncheckedCreateWithoutTruckInput> | device_status_eventCreateWithoutTruckInput[] | device_status_eventUncheckedCreateWithoutTruckInput[]
    connectOrCreate?: device_status_eventCreateOrConnectWithoutTruckInput | device_status_eventCreateOrConnectWithoutTruckInput[]
    upsert?: device_status_eventUpsertWithWhereUniqueWithoutTruckInput | device_status_eventUpsertWithWhereUniqueWithoutTruckInput[]
    createMany?: device_status_eventCreateManyTruckInputEnvelope
    set?: device_status_eventWhereUniqueInput | device_status_eventWhereUniqueInput[]
    disconnect?: device_status_eventWhereUniqueInput | device_status_eventWhereUniqueInput[]
    delete?: device_status_eventWhereUniqueInput | device_status_eventWhereUniqueInput[]
    connect?: device_status_eventWhereUniqueInput | device_status_eventWhereUniqueInput[]
    update?: device_status_eventUpdateWithWhereUniqueWithoutTruckInput | device_status_eventUpdateWithWhereUniqueWithoutTruckInput[]
    updateMany?: device_status_eventUpdateManyWithWhereWithoutTruckInput | device_status_eventUpdateManyWithWhereWithoutTruckInput[]
    deleteMany?: device_status_eventScalarWhereInput | device_status_eventScalarWhereInput[]
  }

  export type device_truck_assignmentUncheckedUpdateManyWithoutTruckNestedInput = {
    create?: XOR<device_truck_assignmentCreateWithoutTruckInput, device_truck_assignmentUncheckedCreateWithoutTruckInput> | device_truck_assignmentCreateWithoutTruckInput[] | device_truck_assignmentUncheckedCreateWithoutTruckInput[]
    connectOrCreate?: device_truck_assignmentCreateOrConnectWithoutTruckInput | device_truck_assignmentCreateOrConnectWithoutTruckInput[]
    upsert?: device_truck_assignmentUpsertWithWhereUniqueWithoutTruckInput | device_truck_assignmentUpsertWithWhereUniqueWithoutTruckInput[]
    createMany?: device_truck_assignmentCreateManyTruckInputEnvelope
    set?: device_truck_assignmentWhereUniqueInput | device_truck_assignmentWhereUniqueInput[]
    disconnect?: device_truck_assignmentWhereUniqueInput | device_truck_assignmentWhereUniqueInput[]
    delete?: device_truck_assignmentWhereUniqueInput | device_truck_assignmentWhereUniqueInput[]
    connect?: device_truck_assignmentWhereUniqueInput | device_truck_assignmentWhereUniqueInput[]
    update?: device_truck_assignmentUpdateWithWhereUniqueWithoutTruckInput | device_truck_assignmentUpdateWithWhereUniqueWithoutTruckInput[]
    updateMany?: device_truck_assignmentUpdateManyWithWhereWithoutTruckInput | device_truck_assignmentUpdateManyWithWhereWithoutTruckInput[]
    deleteMany?: device_truck_assignmentScalarWhereInput | device_truck_assignmentScalarWhereInput[]
  }

  export type fuel_level_eventUncheckedUpdateManyWithoutTruckNestedInput = {
    create?: XOR<fuel_level_eventCreateWithoutTruckInput, fuel_level_eventUncheckedCreateWithoutTruckInput> | fuel_level_eventCreateWithoutTruckInput[] | fuel_level_eventUncheckedCreateWithoutTruckInput[]
    connectOrCreate?: fuel_level_eventCreateOrConnectWithoutTruckInput | fuel_level_eventCreateOrConnectWithoutTruckInput[]
    upsert?: fuel_level_eventUpsertWithWhereUniqueWithoutTruckInput | fuel_level_eventUpsertWithWhereUniqueWithoutTruckInput[]
    createMany?: fuel_level_eventCreateManyTruckInputEnvelope
    set?: fuel_level_eventWhereUniqueInput | fuel_level_eventWhereUniqueInput[]
    disconnect?: fuel_level_eventWhereUniqueInput | fuel_level_eventWhereUniqueInput[]
    delete?: fuel_level_eventWhereUniqueInput | fuel_level_eventWhereUniqueInput[]
    connect?: fuel_level_eventWhereUniqueInput | fuel_level_eventWhereUniqueInput[]
    update?: fuel_level_eventUpdateWithWhereUniqueWithoutTruckInput | fuel_level_eventUpdateWithWhereUniqueWithoutTruckInput[]
    updateMany?: fuel_level_eventUpdateManyWithWhereWithoutTruckInput | fuel_level_eventUpdateManyWithWhereWithoutTruckInput[]
    deleteMany?: fuel_level_eventScalarWhereInput | fuel_level_eventScalarWhereInput[]
  }

  export type gps_positionUncheckedUpdateManyWithoutTruckNestedInput = {
    set?: gps_positionWhereUniqueInput | gps_positionWhereUniqueInput[]
    disconnect?: gps_positionWhereUniqueInput | gps_positionWhereUniqueInput[]
    delete?: gps_positionWhereUniqueInput | gps_positionWhereUniqueInput[]
    connect?: gps_positionWhereUniqueInput | gps_positionWhereUniqueInput[]
    update?: gps_positionUpdateWithWhereUniqueWithoutTruckInput | gps_positionUpdateWithWhereUniqueWithoutTruckInput[]
    updateMany?: gps_positionUpdateManyWithWhereWithoutTruckInput | gps_positionUpdateManyWithWhereWithoutTruckInput[]
    deleteMany?: gps_positionScalarWhereInput | gps_positionScalarWhereInput[]
  }

  export type hub_temperature_eventUncheckedUpdateManyWithoutTruckNestedInput = {
    create?: XOR<hub_temperature_eventCreateWithoutTruckInput, hub_temperature_eventUncheckedCreateWithoutTruckInput> | hub_temperature_eventCreateWithoutTruckInput[] | hub_temperature_eventUncheckedCreateWithoutTruckInput[]
    connectOrCreate?: hub_temperature_eventCreateOrConnectWithoutTruckInput | hub_temperature_eventCreateOrConnectWithoutTruckInput[]
    upsert?: hub_temperature_eventUpsertWithWhereUniqueWithoutTruckInput | hub_temperature_eventUpsertWithWhereUniqueWithoutTruckInput[]
    createMany?: hub_temperature_eventCreateManyTruckInputEnvelope
    set?: hub_temperature_eventWhereUniqueInput | hub_temperature_eventWhereUniqueInput[]
    disconnect?: hub_temperature_eventWhereUniqueInput | hub_temperature_eventWhereUniqueInput[]
    delete?: hub_temperature_eventWhereUniqueInput | hub_temperature_eventWhereUniqueInput[]
    connect?: hub_temperature_eventWhereUniqueInput | hub_temperature_eventWhereUniqueInput[]
    update?: hub_temperature_eventUpdateWithWhereUniqueWithoutTruckInput | hub_temperature_eventUpdateWithWhereUniqueWithoutTruckInput[]
    updateMany?: hub_temperature_eventUpdateManyWithWhereWithoutTruckInput | hub_temperature_eventUpdateManyWithWhereWithoutTruckInput[]
    deleteMany?: hub_temperature_eventScalarWhereInput | hub_temperature_eventScalarWhereInput[]
  }

  export type lock_eventUncheckedUpdateManyWithoutTruckNestedInput = {
    create?: XOR<lock_eventCreateWithoutTruckInput, lock_eventUncheckedCreateWithoutTruckInput> | lock_eventCreateWithoutTruckInput[] | lock_eventUncheckedCreateWithoutTruckInput[]
    connectOrCreate?: lock_eventCreateOrConnectWithoutTruckInput | lock_eventCreateOrConnectWithoutTruckInput[]
    upsert?: lock_eventUpsertWithWhereUniqueWithoutTruckInput | lock_eventUpsertWithWhereUniqueWithoutTruckInput[]
    createMany?: lock_eventCreateManyTruckInputEnvelope
    set?: lock_eventWhereUniqueInput | lock_eventWhereUniqueInput[]
    disconnect?: lock_eventWhereUniqueInput | lock_eventWhereUniqueInput[]
    delete?: lock_eventWhereUniqueInput | lock_eventWhereUniqueInput[]
    connect?: lock_eventWhereUniqueInput | lock_eventWhereUniqueInput[]
    update?: lock_eventUpdateWithWhereUniqueWithoutTruckInput | lock_eventUpdateWithWhereUniqueWithoutTruckInput[]
    updateMany?: lock_eventUpdateManyWithWhereWithoutTruckInput | lock_eventUpdateManyWithWhereWithoutTruckInput[]
    deleteMany?: lock_eventScalarWhereInput | lock_eventScalarWhereInput[]
  }

  export type sensor_data_rawUncheckedUpdateManyWithoutTruckNestedInput = {
    create?: XOR<sensor_data_rawCreateWithoutTruckInput, sensor_data_rawUncheckedCreateWithoutTruckInput> | sensor_data_rawCreateWithoutTruckInput[] | sensor_data_rawUncheckedCreateWithoutTruckInput[]
    connectOrCreate?: sensor_data_rawCreateOrConnectWithoutTruckInput | sensor_data_rawCreateOrConnectWithoutTruckInput[]
    upsert?: sensor_data_rawUpsertWithWhereUniqueWithoutTruckInput | sensor_data_rawUpsertWithWhereUniqueWithoutTruckInput[]
    createMany?: sensor_data_rawCreateManyTruckInputEnvelope
    set?: sensor_data_rawWhereUniqueInput | sensor_data_rawWhereUniqueInput[]
    disconnect?: sensor_data_rawWhereUniqueInput | sensor_data_rawWhereUniqueInput[]
    delete?: sensor_data_rawWhereUniqueInput | sensor_data_rawWhereUniqueInput[]
    connect?: sensor_data_rawWhereUniqueInput | sensor_data_rawWhereUniqueInput[]
    update?: sensor_data_rawUpdateWithWhereUniqueWithoutTruckInput | sensor_data_rawUpdateWithWhereUniqueWithoutTruckInput[]
    updateMany?: sensor_data_rawUpdateManyWithWhereWithoutTruckInput | sensor_data_rawUpdateManyWithWhereWithoutTruckInput[]
    deleteMany?: sensor_data_rawScalarWhereInput | sensor_data_rawScalarWhereInput[]
  }

  export type speed_eventUncheckedUpdateManyWithoutTruckNestedInput = {
    create?: XOR<speed_eventCreateWithoutTruckInput, speed_eventUncheckedCreateWithoutTruckInput> | speed_eventCreateWithoutTruckInput[] | speed_eventUncheckedCreateWithoutTruckInput[]
    connectOrCreate?: speed_eventCreateOrConnectWithoutTruckInput | speed_eventCreateOrConnectWithoutTruckInput[]
    upsert?: speed_eventUpsertWithWhereUniqueWithoutTruckInput | speed_eventUpsertWithWhereUniqueWithoutTruckInput[]
    createMany?: speed_eventCreateManyTruckInputEnvelope
    set?: speed_eventWhereUniqueInput | speed_eventWhereUniqueInput[]
    disconnect?: speed_eventWhereUniqueInput | speed_eventWhereUniqueInput[]
    delete?: speed_eventWhereUniqueInput | speed_eventWhereUniqueInput[]
    connect?: speed_eventWhereUniqueInput | speed_eventWhereUniqueInput[]
    update?: speed_eventUpdateWithWhereUniqueWithoutTruckInput | speed_eventUpdateWithWhereUniqueWithoutTruckInput[]
    updateMany?: speed_eventUpdateManyWithWhereWithoutTruckInput | speed_eventUpdateManyWithWhereWithoutTruckInput[]
    deleteMany?: speed_eventScalarWhereInput | speed_eventScalarWhereInput[]
  }

  export type tire_position_configUncheckedUpdateManyWithoutTruckNestedInput = {
    create?: XOR<tire_position_configCreateWithoutTruckInput, tire_position_configUncheckedCreateWithoutTruckInput> | tire_position_configCreateWithoutTruckInput[] | tire_position_configUncheckedCreateWithoutTruckInput[]
    connectOrCreate?: tire_position_configCreateOrConnectWithoutTruckInput | tire_position_configCreateOrConnectWithoutTruckInput[]
    upsert?: tire_position_configUpsertWithWhereUniqueWithoutTruckInput | tire_position_configUpsertWithWhereUniqueWithoutTruckInput[]
    createMany?: tire_position_configCreateManyTruckInputEnvelope
    set?: tire_position_configWhereUniqueInput | tire_position_configWhereUniqueInput[]
    disconnect?: tire_position_configWhereUniqueInput | tire_position_configWhereUniqueInput[]
    delete?: tire_position_configWhereUniqueInput | tire_position_configWhereUniqueInput[]
    connect?: tire_position_configWhereUniqueInput | tire_position_configWhereUniqueInput[]
    update?: tire_position_configUpdateWithWhereUniqueWithoutTruckInput | tire_position_configUpdateWithWhereUniqueWithoutTruckInput[]
    updateMany?: tire_position_configUpdateManyWithWhereWithoutTruckInput | tire_position_configUpdateManyWithWhereWithoutTruckInput[]
    deleteMany?: tire_position_configScalarWhereInput | tire_position_configScalarWhereInput[]
  }

  export type tire_pressure_eventUncheckedUpdateManyWithoutTruckNestedInput = {
    create?: XOR<tire_pressure_eventCreateWithoutTruckInput, tire_pressure_eventUncheckedCreateWithoutTruckInput> | tire_pressure_eventCreateWithoutTruckInput[] | tire_pressure_eventUncheckedCreateWithoutTruckInput[]
    connectOrCreate?: tire_pressure_eventCreateOrConnectWithoutTruckInput | tire_pressure_eventCreateOrConnectWithoutTruckInput[]
    upsert?: tire_pressure_eventUpsertWithWhereUniqueWithoutTruckInput | tire_pressure_eventUpsertWithWhereUniqueWithoutTruckInput[]
    createMany?: tire_pressure_eventCreateManyTruckInputEnvelope
    set?: tire_pressure_eventWhereUniqueInput | tire_pressure_eventWhereUniqueInput[]
    disconnect?: tire_pressure_eventWhereUniqueInput | tire_pressure_eventWhereUniqueInput[]
    delete?: tire_pressure_eventWhereUniqueInput | tire_pressure_eventWhereUniqueInput[]
    connect?: tire_pressure_eventWhereUniqueInput | tire_pressure_eventWhereUniqueInput[]
    update?: tire_pressure_eventUpdateWithWhereUniqueWithoutTruckInput | tire_pressure_eventUpdateWithWhereUniqueWithoutTruckInput[]
    updateMany?: tire_pressure_eventUpdateManyWithWhereWithoutTruckInput | tire_pressure_eventUpdateManyWithWhereWithoutTruckInput[]
    deleteMany?: tire_pressure_eventScalarWhereInput | tire_pressure_eventScalarWhereInput[]
  }

  export type tripUncheckedUpdateManyWithoutTruckNestedInput = {
    create?: XOR<tripCreateWithoutTruckInput, tripUncheckedCreateWithoutTruckInput> | tripCreateWithoutTruckInput[] | tripUncheckedCreateWithoutTruckInput[]
    connectOrCreate?: tripCreateOrConnectWithoutTruckInput | tripCreateOrConnectWithoutTruckInput[]
    upsert?: tripUpsertWithWhereUniqueWithoutTruckInput | tripUpsertWithWhereUniqueWithoutTruckInput[]
    createMany?: tripCreateManyTruckInputEnvelope
    set?: tripWhereUniqueInput | tripWhereUniqueInput[]
    disconnect?: tripWhereUniqueInput | tripWhereUniqueInput[]
    delete?: tripWhereUniqueInput | tripWhereUniqueInput[]
    connect?: tripWhereUniqueInput | tripWhereUniqueInput[]
    update?: tripUpdateWithWhereUniqueWithoutTruckInput | tripUpdateWithWhereUniqueWithoutTruckInput[]
    updateMany?: tripUpdateManyWithWhereWithoutTruckInput | tripUpdateManyWithWhereWithoutTruckInput[]
    deleteMany?: tripScalarWhereInput | tripScalarWhereInput[]
  }

  export type truck_status_eventUncheckedUpdateManyWithoutTruckNestedInput = {
    create?: XOR<truck_status_eventCreateWithoutTruckInput, truck_status_eventUncheckedCreateWithoutTruckInput> | truck_status_eventCreateWithoutTruckInput[] | truck_status_eventUncheckedCreateWithoutTruckInput[]
    connectOrCreate?: truck_status_eventCreateOrConnectWithoutTruckInput | truck_status_eventCreateOrConnectWithoutTruckInput[]
    upsert?: truck_status_eventUpsertWithWhereUniqueWithoutTruckInput | truck_status_eventUpsertWithWhereUniqueWithoutTruckInput[]
    createMany?: truck_status_eventCreateManyTruckInputEnvelope
    set?: truck_status_eventWhereUniqueInput | truck_status_eventWhereUniqueInput[]
    disconnect?: truck_status_eventWhereUniqueInput | truck_status_eventWhereUniqueInput[]
    delete?: truck_status_eventWhereUniqueInput | truck_status_eventWhereUniqueInput[]
    connect?: truck_status_eventWhereUniqueInput | truck_status_eventWhereUniqueInput[]
    update?: truck_status_eventUpdateWithWhereUniqueWithoutTruckInput | truck_status_eventUpdateWithWhereUniqueWithoutTruckInput[]
    updateMany?: truck_status_eventUpdateManyWithWhereWithoutTruckInput | truck_status_eventUpdateManyWithWhereWithoutTruckInput[]
    deleteMany?: truck_status_eventScalarWhereInput | truck_status_eventScalarWhereInput[]
  }

  export type truckCreateNestedOneWithoutTruck_status_eventInput = {
    create?: XOR<truckCreateWithoutTruck_status_eventInput, truckUncheckedCreateWithoutTruck_status_eventInput>
    connectOrCreate?: truckCreateOrConnectWithoutTruck_status_eventInput
    connect?: truckWhereUniqueInput
  }

  export type Enumtruck_statusFieldUpdateOperationsInput = {
    set?: $Enums.truck_status
  }

  export type truckUpdateOneRequiredWithoutTruck_status_eventNestedInput = {
    create?: XOR<truckCreateWithoutTruck_status_eventInput, truckUncheckedCreateWithoutTruck_status_eventInput>
    connectOrCreate?: truckCreateOrConnectWithoutTruck_status_eventInput
    upsert?: truckUpsertWithoutTruck_status_eventInput
    connect?: truckWhereUniqueInput
    update?: XOR<XOR<truckUpdateToOneWithWhereWithoutTruck_status_eventInput, truckUpdateWithoutTruck_status_eventInput>, truckUncheckedUpdateWithoutTruck_status_eventInput>
  }

  export type device_truck_assignmentCreateNestedManyWithoutUsers_device_truck_assignment_assigned_byTousersInput = {
    create?: XOR<device_truck_assignmentCreateWithoutUsers_device_truck_assignment_assigned_byTousersInput, device_truck_assignmentUncheckedCreateWithoutUsers_device_truck_assignment_assigned_byTousersInput> | device_truck_assignmentCreateWithoutUsers_device_truck_assignment_assigned_byTousersInput[] | device_truck_assignmentUncheckedCreateWithoutUsers_device_truck_assignment_assigned_byTousersInput[]
    connectOrCreate?: device_truck_assignmentCreateOrConnectWithoutUsers_device_truck_assignment_assigned_byTousersInput | device_truck_assignmentCreateOrConnectWithoutUsers_device_truck_assignment_assigned_byTousersInput[]
    createMany?: device_truck_assignmentCreateManyUsers_device_truck_assignment_assigned_byTousersInputEnvelope
    connect?: device_truck_assignmentWhereUniqueInput | device_truck_assignmentWhereUniqueInput[]
  }

  export type device_truck_assignmentCreateNestedManyWithoutUsers_device_truck_assignment_removed_byTousersInput = {
    create?: XOR<device_truck_assignmentCreateWithoutUsers_device_truck_assignment_removed_byTousersInput, device_truck_assignmentUncheckedCreateWithoutUsers_device_truck_assignment_removed_byTousersInput> | device_truck_assignmentCreateWithoutUsers_device_truck_assignment_removed_byTousersInput[] | device_truck_assignmentUncheckedCreateWithoutUsers_device_truck_assignment_removed_byTousersInput[]
    connectOrCreate?: device_truck_assignmentCreateOrConnectWithoutUsers_device_truck_assignment_removed_byTousersInput | device_truck_assignmentCreateOrConnectWithoutUsers_device_truck_assignment_removed_byTousersInput[]
    createMany?: device_truck_assignmentCreateManyUsers_device_truck_assignment_removed_byTousersInputEnvelope
    connect?: device_truck_assignmentWhereUniqueInput | device_truck_assignmentWhereUniqueInput[]
  }

  export type device_truck_assignmentUncheckedCreateNestedManyWithoutUsers_device_truck_assignment_assigned_byTousersInput = {
    create?: XOR<device_truck_assignmentCreateWithoutUsers_device_truck_assignment_assigned_byTousersInput, device_truck_assignmentUncheckedCreateWithoutUsers_device_truck_assignment_assigned_byTousersInput> | device_truck_assignmentCreateWithoutUsers_device_truck_assignment_assigned_byTousersInput[] | device_truck_assignmentUncheckedCreateWithoutUsers_device_truck_assignment_assigned_byTousersInput[]
    connectOrCreate?: device_truck_assignmentCreateOrConnectWithoutUsers_device_truck_assignment_assigned_byTousersInput | device_truck_assignmentCreateOrConnectWithoutUsers_device_truck_assignment_assigned_byTousersInput[]
    createMany?: device_truck_assignmentCreateManyUsers_device_truck_assignment_assigned_byTousersInputEnvelope
    connect?: device_truck_assignmentWhereUniqueInput | device_truck_assignmentWhereUniqueInput[]
  }

  export type device_truck_assignmentUncheckedCreateNestedManyWithoutUsers_device_truck_assignment_removed_byTousersInput = {
    create?: XOR<device_truck_assignmentCreateWithoutUsers_device_truck_assignment_removed_byTousersInput, device_truck_assignmentUncheckedCreateWithoutUsers_device_truck_assignment_removed_byTousersInput> | device_truck_assignmentCreateWithoutUsers_device_truck_assignment_removed_byTousersInput[] | device_truck_assignmentUncheckedCreateWithoutUsers_device_truck_assignment_removed_byTousersInput[]
    connectOrCreate?: device_truck_assignmentCreateOrConnectWithoutUsers_device_truck_assignment_removed_byTousersInput | device_truck_assignmentCreateOrConnectWithoutUsers_device_truck_assignment_removed_byTousersInput[]
    createMany?: device_truck_assignmentCreateManyUsers_device_truck_assignment_removed_byTousersInputEnvelope
    connect?: device_truck_assignmentWhereUniqueInput | device_truck_assignmentWhereUniqueInput[]
  }

  export type device_truck_assignmentUpdateManyWithoutUsers_device_truck_assignment_assigned_byTousersNestedInput = {
    create?: XOR<device_truck_assignmentCreateWithoutUsers_device_truck_assignment_assigned_byTousersInput, device_truck_assignmentUncheckedCreateWithoutUsers_device_truck_assignment_assigned_byTousersInput> | device_truck_assignmentCreateWithoutUsers_device_truck_assignment_assigned_byTousersInput[] | device_truck_assignmentUncheckedCreateWithoutUsers_device_truck_assignment_assigned_byTousersInput[]
    connectOrCreate?: device_truck_assignmentCreateOrConnectWithoutUsers_device_truck_assignment_assigned_byTousersInput | device_truck_assignmentCreateOrConnectWithoutUsers_device_truck_assignment_assigned_byTousersInput[]
    upsert?: device_truck_assignmentUpsertWithWhereUniqueWithoutUsers_device_truck_assignment_assigned_byTousersInput | device_truck_assignmentUpsertWithWhereUniqueWithoutUsers_device_truck_assignment_assigned_byTousersInput[]
    createMany?: device_truck_assignmentCreateManyUsers_device_truck_assignment_assigned_byTousersInputEnvelope
    set?: device_truck_assignmentWhereUniqueInput | device_truck_assignmentWhereUniqueInput[]
    disconnect?: device_truck_assignmentWhereUniqueInput | device_truck_assignmentWhereUniqueInput[]
    delete?: device_truck_assignmentWhereUniqueInput | device_truck_assignmentWhereUniqueInput[]
    connect?: device_truck_assignmentWhereUniqueInput | device_truck_assignmentWhereUniqueInput[]
    update?: device_truck_assignmentUpdateWithWhereUniqueWithoutUsers_device_truck_assignment_assigned_byTousersInput | device_truck_assignmentUpdateWithWhereUniqueWithoutUsers_device_truck_assignment_assigned_byTousersInput[]
    updateMany?: device_truck_assignmentUpdateManyWithWhereWithoutUsers_device_truck_assignment_assigned_byTousersInput | device_truck_assignmentUpdateManyWithWhereWithoutUsers_device_truck_assignment_assigned_byTousersInput[]
    deleteMany?: device_truck_assignmentScalarWhereInput | device_truck_assignmentScalarWhereInput[]
  }

  export type device_truck_assignmentUpdateManyWithoutUsers_device_truck_assignment_removed_byTousersNestedInput = {
    create?: XOR<device_truck_assignmentCreateWithoutUsers_device_truck_assignment_removed_byTousersInput, device_truck_assignmentUncheckedCreateWithoutUsers_device_truck_assignment_removed_byTousersInput> | device_truck_assignmentCreateWithoutUsers_device_truck_assignment_removed_byTousersInput[] | device_truck_assignmentUncheckedCreateWithoutUsers_device_truck_assignment_removed_byTousersInput[]
    connectOrCreate?: device_truck_assignmentCreateOrConnectWithoutUsers_device_truck_assignment_removed_byTousersInput | device_truck_assignmentCreateOrConnectWithoutUsers_device_truck_assignment_removed_byTousersInput[]
    upsert?: device_truck_assignmentUpsertWithWhereUniqueWithoutUsers_device_truck_assignment_removed_byTousersInput | device_truck_assignmentUpsertWithWhereUniqueWithoutUsers_device_truck_assignment_removed_byTousersInput[]
    createMany?: device_truck_assignmentCreateManyUsers_device_truck_assignment_removed_byTousersInputEnvelope
    set?: device_truck_assignmentWhereUniqueInput | device_truck_assignmentWhereUniqueInput[]
    disconnect?: device_truck_assignmentWhereUniqueInput | device_truck_assignmentWhereUniqueInput[]
    delete?: device_truck_assignmentWhereUniqueInput | device_truck_assignmentWhereUniqueInput[]
    connect?: device_truck_assignmentWhereUniqueInput | device_truck_assignmentWhereUniqueInput[]
    update?: device_truck_assignmentUpdateWithWhereUniqueWithoutUsers_device_truck_assignment_removed_byTousersInput | device_truck_assignmentUpdateWithWhereUniqueWithoutUsers_device_truck_assignment_removed_byTousersInput[]
    updateMany?: device_truck_assignmentUpdateManyWithWhereWithoutUsers_device_truck_assignment_removed_byTousersInput | device_truck_assignmentUpdateManyWithWhereWithoutUsers_device_truck_assignment_removed_byTousersInput[]
    deleteMany?: device_truck_assignmentScalarWhereInput | device_truck_assignmentScalarWhereInput[]
  }

  export type device_truck_assignmentUncheckedUpdateManyWithoutUsers_device_truck_assignment_assigned_byTousersNestedInput = {
    create?: XOR<device_truck_assignmentCreateWithoutUsers_device_truck_assignment_assigned_byTousersInput, device_truck_assignmentUncheckedCreateWithoutUsers_device_truck_assignment_assigned_byTousersInput> | device_truck_assignmentCreateWithoutUsers_device_truck_assignment_assigned_byTousersInput[] | device_truck_assignmentUncheckedCreateWithoutUsers_device_truck_assignment_assigned_byTousersInput[]
    connectOrCreate?: device_truck_assignmentCreateOrConnectWithoutUsers_device_truck_assignment_assigned_byTousersInput | device_truck_assignmentCreateOrConnectWithoutUsers_device_truck_assignment_assigned_byTousersInput[]
    upsert?: device_truck_assignmentUpsertWithWhereUniqueWithoutUsers_device_truck_assignment_assigned_byTousersInput | device_truck_assignmentUpsertWithWhereUniqueWithoutUsers_device_truck_assignment_assigned_byTousersInput[]
    createMany?: device_truck_assignmentCreateManyUsers_device_truck_assignment_assigned_byTousersInputEnvelope
    set?: device_truck_assignmentWhereUniqueInput | device_truck_assignmentWhereUniqueInput[]
    disconnect?: device_truck_assignmentWhereUniqueInput | device_truck_assignmentWhereUniqueInput[]
    delete?: device_truck_assignmentWhereUniqueInput | device_truck_assignmentWhereUniqueInput[]
    connect?: device_truck_assignmentWhereUniqueInput | device_truck_assignmentWhereUniqueInput[]
    update?: device_truck_assignmentUpdateWithWhereUniqueWithoutUsers_device_truck_assignment_assigned_byTousersInput | device_truck_assignmentUpdateWithWhereUniqueWithoutUsers_device_truck_assignment_assigned_byTousersInput[]
    updateMany?: device_truck_assignmentUpdateManyWithWhereWithoutUsers_device_truck_assignment_assigned_byTousersInput | device_truck_assignmentUpdateManyWithWhereWithoutUsers_device_truck_assignment_assigned_byTousersInput[]
    deleteMany?: device_truck_assignmentScalarWhereInput | device_truck_assignmentScalarWhereInput[]
  }

  export type device_truck_assignmentUncheckedUpdateManyWithoutUsers_device_truck_assignment_removed_byTousersNestedInput = {
    create?: XOR<device_truck_assignmentCreateWithoutUsers_device_truck_assignment_removed_byTousersInput, device_truck_assignmentUncheckedCreateWithoutUsers_device_truck_assignment_removed_byTousersInput> | device_truck_assignmentCreateWithoutUsers_device_truck_assignment_removed_byTousersInput[] | device_truck_assignmentUncheckedCreateWithoutUsers_device_truck_assignment_removed_byTousersInput[]
    connectOrCreate?: device_truck_assignmentCreateOrConnectWithoutUsers_device_truck_assignment_removed_byTousersInput | device_truck_assignmentCreateOrConnectWithoutUsers_device_truck_assignment_removed_byTousersInput[]
    upsert?: device_truck_assignmentUpsertWithWhereUniqueWithoutUsers_device_truck_assignment_removed_byTousersInput | device_truck_assignmentUpsertWithWhereUniqueWithoutUsers_device_truck_assignment_removed_byTousersInput[]
    createMany?: device_truck_assignmentCreateManyUsers_device_truck_assignment_removed_byTousersInputEnvelope
    set?: device_truck_assignmentWhereUniqueInput | device_truck_assignmentWhereUniqueInput[]
    disconnect?: device_truck_assignmentWhereUniqueInput | device_truck_assignmentWhereUniqueInput[]
    delete?: device_truck_assignmentWhereUniqueInput | device_truck_assignmentWhereUniqueInput[]
    connect?: device_truck_assignmentWhereUniqueInput | device_truck_assignmentWhereUniqueInput[]
    update?: device_truck_assignmentUpdateWithWhereUniqueWithoutUsers_device_truck_assignment_removed_byTousersInput | device_truck_assignmentUpdateWithWhereUniqueWithoutUsers_device_truck_assignment_removed_byTousersInput[]
    updateMany?: device_truck_assignmentUpdateManyWithWhereWithoutUsers_device_truck_assignment_removed_byTousersInput | device_truck_assignmentUpdateManyWithWhereWithoutUsers_device_truck_assignment_removed_byTousersInput[]
    deleteMany?: device_truck_assignmentScalarWhereInput | device_truck_assignmentScalarWhereInput[]
  }

  export type NestedUuidFilter<$PrismaModel = never> = {
    equals?: string | StringFieldRefInput<$PrismaModel>
    in?: string[] | ListStringFieldRefInput<$PrismaModel>
    notIn?: string[] | ListStringFieldRefInput<$PrismaModel>
    lt?: string | StringFieldRefInput<$PrismaModel>
    lte?: string | StringFieldRefInput<$PrismaModel>
    gt?: string | StringFieldRefInput<$PrismaModel>
    gte?: string | StringFieldRefInput<$PrismaModel>
    not?: NestedUuidFilter<$PrismaModel> | string
  }

  export type NestedEnumalert_typeFilter<$PrismaModel = never> = {
    equals?: $Enums.alert_type | Enumalert_typeFieldRefInput<$PrismaModel>
    in?: $Enums.alert_type[] | ListEnumalert_typeFieldRefInput<$PrismaModel>
    notIn?: $Enums.alert_type[] | ListEnumalert_typeFieldRefInput<$PrismaModel>
    not?: NestedEnumalert_typeFilter<$PrismaModel> | $Enums.alert_type
  }

  export type NestedIntNullableFilter<$PrismaModel = never> = {
    equals?: number | IntFieldRefInput<$PrismaModel> | null
    in?: number[] | ListIntFieldRefInput<$PrismaModel> | null
    notIn?: number[] | ListIntFieldRefInput<$PrismaModel> | null
    lt?: number | IntFieldRefInput<$PrismaModel>
    lte?: number | IntFieldRefInput<$PrismaModel>
    gt?: number | IntFieldRefInput<$PrismaModel>
    gte?: number | IntFieldRefInput<$PrismaModel>
    not?: NestedIntNullableFilter<$PrismaModel> | number | null
  }

  export type NestedDateTimeFilter<$PrismaModel = never> = {
    equals?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    in?: Date[] | string[] | ListDateTimeFieldRefInput<$PrismaModel>
    notIn?: Date[] | string[] | ListDateTimeFieldRefInput<$PrismaModel>
    lt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    lte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    not?: NestedDateTimeFilter<$PrismaModel> | Date | string
  }

  export type NestedBoolFilter<$PrismaModel = never> = {
    equals?: boolean | BooleanFieldRefInput<$PrismaModel>
    not?: NestedBoolFilter<$PrismaModel> | boolean
  }

  export type NestedUuidNullableFilter<$PrismaModel = never> = {
    equals?: string | StringFieldRefInput<$PrismaModel> | null
    in?: string[] | ListStringFieldRefInput<$PrismaModel> | null
    notIn?: string[] | ListStringFieldRefInput<$PrismaModel> | null
    lt?: string | StringFieldRefInput<$PrismaModel>
    lte?: string | StringFieldRefInput<$PrismaModel>
    gt?: string | StringFieldRefInput<$PrismaModel>
    gte?: string | StringFieldRefInput<$PrismaModel>
    not?: NestedUuidNullableFilter<$PrismaModel> | string | null
  }

  export type NestedUuidWithAggregatesFilter<$PrismaModel = never> = {
    equals?: string | StringFieldRefInput<$PrismaModel>
    in?: string[] | ListStringFieldRefInput<$PrismaModel>
    notIn?: string[] | ListStringFieldRefInput<$PrismaModel>
    lt?: string | StringFieldRefInput<$PrismaModel>
    lte?: string | StringFieldRefInput<$PrismaModel>
    gt?: string | StringFieldRefInput<$PrismaModel>
    gte?: string | StringFieldRefInput<$PrismaModel>
    not?: NestedUuidWithAggregatesFilter<$PrismaModel> | string
    _count?: NestedIntFilter<$PrismaModel>
    _min?: NestedStringFilter<$PrismaModel>
    _max?: NestedStringFilter<$PrismaModel>
  }

  export type NestedIntFilter<$PrismaModel = never> = {
    equals?: number | IntFieldRefInput<$PrismaModel>
    in?: number[] | ListIntFieldRefInput<$PrismaModel>
    notIn?: number[] | ListIntFieldRefInput<$PrismaModel>
    lt?: number | IntFieldRefInput<$PrismaModel>
    lte?: number | IntFieldRefInput<$PrismaModel>
    gt?: number | IntFieldRefInput<$PrismaModel>
    gte?: number | IntFieldRefInput<$PrismaModel>
    not?: NestedIntFilter<$PrismaModel> | number
  }

  export type NestedStringFilter<$PrismaModel = never> = {
    equals?: string | StringFieldRefInput<$PrismaModel>
    in?: string[] | ListStringFieldRefInput<$PrismaModel>
    notIn?: string[] | ListStringFieldRefInput<$PrismaModel>
    lt?: string | StringFieldRefInput<$PrismaModel>
    lte?: string | StringFieldRefInput<$PrismaModel>
    gt?: string | StringFieldRefInput<$PrismaModel>
    gte?: string | StringFieldRefInput<$PrismaModel>
    contains?: string | StringFieldRefInput<$PrismaModel>
    startsWith?: string | StringFieldRefInput<$PrismaModel>
    endsWith?: string | StringFieldRefInput<$PrismaModel>
    not?: NestedStringFilter<$PrismaModel> | string
  }

  export type NestedEnumalert_typeWithAggregatesFilter<$PrismaModel = never> = {
    equals?: $Enums.alert_type | Enumalert_typeFieldRefInput<$PrismaModel>
    in?: $Enums.alert_type[] | ListEnumalert_typeFieldRefInput<$PrismaModel>
    notIn?: $Enums.alert_type[] | ListEnumalert_typeFieldRefInput<$PrismaModel>
    not?: NestedEnumalert_typeWithAggregatesFilter<$PrismaModel> | $Enums.alert_type
    _count?: NestedIntFilter<$PrismaModel>
    _min?: NestedEnumalert_typeFilter<$PrismaModel>
    _max?: NestedEnumalert_typeFilter<$PrismaModel>
  }

  export type NestedIntNullableWithAggregatesFilter<$PrismaModel = never> = {
    equals?: number | IntFieldRefInput<$PrismaModel> | null
    in?: number[] | ListIntFieldRefInput<$PrismaModel> | null
    notIn?: number[] | ListIntFieldRefInput<$PrismaModel> | null
    lt?: number | IntFieldRefInput<$PrismaModel>
    lte?: number | IntFieldRefInput<$PrismaModel>
    gt?: number | IntFieldRefInput<$PrismaModel>
    gte?: number | IntFieldRefInput<$PrismaModel>
    not?: NestedIntNullableWithAggregatesFilter<$PrismaModel> | number | null
    _count?: NestedIntNullableFilter<$PrismaModel>
    _avg?: NestedFloatNullableFilter<$PrismaModel>
    _sum?: NestedIntNullableFilter<$PrismaModel>
    _min?: NestedIntNullableFilter<$PrismaModel>
    _max?: NestedIntNullableFilter<$PrismaModel>
  }

  export type NestedFloatNullableFilter<$PrismaModel = never> = {
    equals?: number | FloatFieldRefInput<$PrismaModel> | null
    in?: number[] | ListFloatFieldRefInput<$PrismaModel> | null
    notIn?: number[] | ListFloatFieldRefInput<$PrismaModel> | null
    lt?: number | FloatFieldRefInput<$PrismaModel>
    lte?: number | FloatFieldRefInput<$PrismaModel>
    gt?: number | FloatFieldRefInput<$PrismaModel>
    gte?: number | FloatFieldRefInput<$PrismaModel>
    not?: NestedFloatNullableFilter<$PrismaModel> | number | null
  }
  export type NestedJsonNullableFilter<$PrismaModel = never> = 
    | PatchUndefined<
        Either<Required<NestedJsonNullableFilterBase<$PrismaModel>>, Exclude<keyof Required<NestedJsonNullableFilterBase<$PrismaModel>>, 'path'>>,
        Required<NestedJsonNullableFilterBase<$PrismaModel>>
      >
    | OptionalFlat<Omit<Required<NestedJsonNullableFilterBase<$PrismaModel>>, 'path'>>

  export type NestedJsonNullableFilterBase<$PrismaModel = never> = {
    equals?: InputJsonValue | JsonFieldRefInput<$PrismaModel> | JsonNullValueFilter
    path?: string[]
    string_contains?: string | StringFieldRefInput<$PrismaModel>
    string_starts_with?: string | StringFieldRefInput<$PrismaModel>
    string_ends_with?: string | StringFieldRefInput<$PrismaModel>
    array_contains?: InputJsonValue | JsonFieldRefInput<$PrismaModel> | null
    array_starts_with?: InputJsonValue | JsonFieldRefInput<$PrismaModel> | null
    array_ends_with?: InputJsonValue | JsonFieldRefInput<$PrismaModel> | null
    lt?: InputJsonValue | JsonFieldRefInput<$PrismaModel>
    lte?: InputJsonValue | JsonFieldRefInput<$PrismaModel>
    gt?: InputJsonValue | JsonFieldRefInput<$PrismaModel>
    gte?: InputJsonValue | JsonFieldRefInput<$PrismaModel>
    not?: InputJsonValue | JsonFieldRefInput<$PrismaModel> | JsonNullValueFilter
  }

  export type NestedDateTimeWithAggregatesFilter<$PrismaModel = never> = {
    equals?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    in?: Date[] | string[] | ListDateTimeFieldRefInput<$PrismaModel>
    notIn?: Date[] | string[] | ListDateTimeFieldRefInput<$PrismaModel>
    lt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    lte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    not?: NestedDateTimeWithAggregatesFilter<$PrismaModel> | Date | string
    _count?: NestedIntFilter<$PrismaModel>
    _min?: NestedDateTimeFilter<$PrismaModel>
    _max?: NestedDateTimeFilter<$PrismaModel>
  }

  export type NestedBoolWithAggregatesFilter<$PrismaModel = never> = {
    equals?: boolean | BooleanFieldRefInput<$PrismaModel>
    not?: NestedBoolWithAggregatesFilter<$PrismaModel> | boolean
    _count?: NestedIntFilter<$PrismaModel>
    _min?: NestedBoolFilter<$PrismaModel>
    _max?: NestedBoolFilter<$PrismaModel>
  }

  export type NestedUuidNullableWithAggregatesFilter<$PrismaModel = never> = {
    equals?: string | StringFieldRefInput<$PrismaModel> | null
    in?: string[] | ListStringFieldRefInput<$PrismaModel> | null
    notIn?: string[] | ListStringFieldRefInput<$PrismaModel> | null
    lt?: string | StringFieldRefInput<$PrismaModel>
    lte?: string | StringFieldRefInput<$PrismaModel>
    gt?: string | StringFieldRefInput<$PrismaModel>
    gte?: string | StringFieldRefInput<$PrismaModel>
    not?: NestedUuidNullableWithAggregatesFilter<$PrismaModel> | string | null
    _count?: NestedIntNullableFilter<$PrismaModel>
    _min?: NestedStringNullableFilter<$PrismaModel>
    _max?: NestedStringNullableFilter<$PrismaModel>
  }

  export type NestedStringNullableFilter<$PrismaModel = never> = {
    equals?: string | StringFieldRefInput<$PrismaModel> | null
    in?: string[] | ListStringFieldRefInput<$PrismaModel> | null
    notIn?: string[] | ListStringFieldRefInput<$PrismaModel> | null
    lt?: string | StringFieldRefInput<$PrismaModel>
    lte?: string | StringFieldRefInput<$PrismaModel>
    gt?: string | StringFieldRefInput<$PrismaModel>
    gte?: string | StringFieldRefInput<$PrismaModel>
    contains?: string | StringFieldRefInput<$PrismaModel>
    startsWith?: string | StringFieldRefInput<$PrismaModel>
    endsWith?: string | StringFieldRefInput<$PrismaModel>
    not?: NestedStringNullableFilter<$PrismaModel> | string | null
  }

  export type NestedIntWithAggregatesFilter<$PrismaModel = never> = {
    equals?: number | IntFieldRefInput<$PrismaModel>
    in?: number[] | ListIntFieldRefInput<$PrismaModel>
    notIn?: number[] | ListIntFieldRefInput<$PrismaModel>
    lt?: number | IntFieldRefInput<$PrismaModel>
    lte?: number | IntFieldRefInput<$PrismaModel>
    gt?: number | IntFieldRefInput<$PrismaModel>
    gte?: number | IntFieldRefInput<$PrismaModel>
    not?: NestedIntWithAggregatesFilter<$PrismaModel> | number
    _count?: NestedIntFilter<$PrismaModel>
    _avg?: NestedFloatFilter<$PrismaModel>
    _sum?: NestedIntFilter<$PrismaModel>
    _min?: NestedIntFilter<$PrismaModel>
    _max?: NestedIntFilter<$PrismaModel>
  }

  export type NestedFloatFilter<$PrismaModel = never> = {
    equals?: number | FloatFieldRefInput<$PrismaModel>
    in?: number[] | ListFloatFieldRefInput<$PrismaModel>
    notIn?: number[] | ListFloatFieldRefInput<$PrismaModel>
    lt?: number | FloatFieldRefInput<$PrismaModel>
    lte?: number | FloatFieldRefInput<$PrismaModel>
    gt?: number | FloatFieldRefInput<$PrismaModel>
    gte?: number | FloatFieldRefInput<$PrismaModel>
    not?: NestedFloatFilter<$PrismaModel> | number
  }

  export type NestedDateTimeNullableFilter<$PrismaModel = never> = {
    equals?: Date | string | DateTimeFieldRefInput<$PrismaModel> | null
    in?: Date[] | string[] | ListDateTimeFieldRefInput<$PrismaModel> | null
    notIn?: Date[] | string[] | ListDateTimeFieldRefInput<$PrismaModel> | null
    lt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    lte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    not?: NestedDateTimeNullableFilter<$PrismaModel> | Date | string | null
  }

  export type NestedStringWithAggregatesFilter<$PrismaModel = never> = {
    equals?: string | StringFieldRefInput<$PrismaModel>
    in?: string[] | ListStringFieldRefInput<$PrismaModel>
    notIn?: string[] | ListStringFieldRefInput<$PrismaModel>
    lt?: string | StringFieldRefInput<$PrismaModel>
    lte?: string | StringFieldRefInput<$PrismaModel>
    gt?: string | StringFieldRefInput<$PrismaModel>
    gte?: string | StringFieldRefInput<$PrismaModel>
    contains?: string | StringFieldRefInput<$PrismaModel>
    startsWith?: string | StringFieldRefInput<$PrismaModel>
    endsWith?: string | StringFieldRefInput<$PrismaModel>
    not?: NestedStringWithAggregatesFilter<$PrismaModel> | string
    _count?: NestedIntFilter<$PrismaModel>
    _min?: NestedStringFilter<$PrismaModel>
    _max?: NestedStringFilter<$PrismaModel>
  }

  export type NestedStringNullableWithAggregatesFilter<$PrismaModel = never> = {
    equals?: string | StringFieldRefInput<$PrismaModel> | null
    in?: string[] | ListStringFieldRefInput<$PrismaModel> | null
    notIn?: string[] | ListStringFieldRefInput<$PrismaModel> | null
    lt?: string | StringFieldRefInput<$PrismaModel>
    lte?: string | StringFieldRefInput<$PrismaModel>
    gt?: string | StringFieldRefInput<$PrismaModel>
    gte?: string | StringFieldRefInput<$PrismaModel>
    contains?: string | StringFieldRefInput<$PrismaModel>
    startsWith?: string | StringFieldRefInput<$PrismaModel>
    endsWith?: string | StringFieldRefInput<$PrismaModel>
    not?: NestedStringNullableWithAggregatesFilter<$PrismaModel> | string | null
    _count?: NestedIntNullableFilter<$PrismaModel>
    _min?: NestedStringNullableFilter<$PrismaModel>
    _max?: NestedStringNullableFilter<$PrismaModel>
  }

  export type NestedDateTimeNullableWithAggregatesFilter<$PrismaModel = never> = {
    equals?: Date | string | DateTimeFieldRefInput<$PrismaModel> | null
    in?: Date[] | string[] | ListDateTimeFieldRefInput<$PrismaModel> | null
    notIn?: Date[] | string[] | ListDateTimeFieldRefInput<$PrismaModel> | null
    lt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    lte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    not?: NestedDateTimeNullableWithAggregatesFilter<$PrismaModel> | Date | string | null
    _count?: NestedIntNullableFilter<$PrismaModel>
    _min?: NestedDateTimeNullableFilter<$PrismaModel>
    _max?: NestedDateTimeNullableFilter<$PrismaModel>
  }

  export type NestedBoolNullableFilter<$PrismaModel = never> = {
    equals?: boolean | BooleanFieldRefInput<$PrismaModel> | null
    not?: NestedBoolNullableFilter<$PrismaModel> | boolean | null
  }

  export type NestedBoolNullableWithAggregatesFilter<$PrismaModel = never> = {
    equals?: boolean | BooleanFieldRefInput<$PrismaModel> | null
    not?: NestedBoolNullableWithAggregatesFilter<$PrismaModel> | boolean | null
    _count?: NestedIntNullableFilter<$PrismaModel>
    _min?: NestedBoolNullableFilter<$PrismaModel>
    _max?: NestedBoolNullableFilter<$PrismaModel>
  }

  export type NestedFloatNullableWithAggregatesFilter<$PrismaModel = never> = {
    equals?: number | FloatFieldRefInput<$PrismaModel> | null
    in?: number[] | ListFloatFieldRefInput<$PrismaModel> | null
    notIn?: number[] | ListFloatFieldRefInput<$PrismaModel> | null
    lt?: number | FloatFieldRefInput<$PrismaModel>
    lte?: number | FloatFieldRefInput<$PrismaModel>
    gt?: number | FloatFieldRefInput<$PrismaModel>
    gte?: number | FloatFieldRefInput<$PrismaModel>
    not?: NestedFloatNullableWithAggregatesFilter<$PrismaModel> | number | null
    _count?: NestedIntNullableFilter<$PrismaModel>
    _avg?: NestedFloatNullableFilter<$PrismaModel>
    _sum?: NestedFloatNullableFilter<$PrismaModel>
    _min?: NestedFloatNullableFilter<$PrismaModel>
    _max?: NestedFloatNullableFilter<$PrismaModel>
  }

  export type NestedBigIntFilter<$PrismaModel = never> = {
    equals?: bigint | number | BigIntFieldRefInput<$PrismaModel>
    in?: bigint[] | number[] | ListBigIntFieldRefInput<$PrismaModel>
    notIn?: bigint[] | number[] | ListBigIntFieldRefInput<$PrismaModel>
    lt?: bigint | number | BigIntFieldRefInput<$PrismaModel>
    lte?: bigint | number | BigIntFieldRefInput<$PrismaModel>
    gt?: bigint | number | BigIntFieldRefInput<$PrismaModel>
    gte?: bigint | number | BigIntFieldRefInput<$PrismaModel>
    not?: NestedBigIntFilter<$PrismaModel> | bigint | number
  }

  export type NestedBigIntWithAggregatesFilter<$PrismaModel = never> = {
    equals?: bigint | number | BigIntFieldRefInput<$PrismaModel>
    in?: bigint[] | number[] | ListBigIntFieldRefInput<$PrismaModel>
    notIn?: bigint[] | number[] | ListBigIntFieldRefInput<$PrismaModel>
    lt?: bigint | number | BigIntFieldRefInput<$PrismaModel>
    lte?: bigint | number | BigIntFieldRefInput<$PrismaModel>
    gt?: bigint | number | BigIntFieldRefInput<$PrismaModel>
    gte?: bigint | number | BigIntFieldRefInput<$PrismaModel>
    not?: NestedBigIntWithAggregatesFilter<$PrismaModel> | bigint | number
    _count?: NestedIntFilter<$PrismaModel>
    _avg?: NestedFloatFilter<$PrismaModel>
    _sum?: NestedBigIntFilter<$PrismaModel>
    _min?: NestedBigIntFilter<$PrismaModel>
    _max?: NestedBigIntFilter<$PrismaModel>
  }
  export type NestedJsonFilter<$PrismaModel = never> = 
    | PatchUndefined<
        Either<Required<NestedJsonFilterBase<$PrismaModel>>, Exclude<keyof Required<NestedJsonFilterBase<$PrismaModel>>, 'path'>>,
        Required<NestedJsonFilterBase<$PrismaModel>>
      >
    | OptionalFlat<Omit<Required<NestedJsonFilterBase<$PrismaModel>>, 'path'>>

  export type NestedJsonFilterBase<$PrismaModel = never> = {
    equals?: InputJsonValue | JsonFieldRefInput<$PrismaModel> | JsonNullValueFilter
    path?: string[]
    string_contains?: string | StringFieldRefInput<$PrismaModel>
    string_starts_with?: string | StringFieldRefInput<$PrismaModel>
    string_ends_with?: string | StringFieldRefInput<$PrismaModel>
    array_contains?: InputJsonValue | JsonFieldRefInput<$PrismaModel> | null
    array_starts_with?: InputJsonValue | JsonFieldRefInput<$PrismaModel> | null
    array_ends_with?: InputJsonValue | JsonFieldRefInput<$PrismaModel> | null
    lt?: InputJsonValue | JsonFieldRefInput<$PrismaModel>
    lte?: InputJsonValue | JsonFieldRefInput<$PrismaModel>
    gt?: InputJsonValue | JsonFieldRefInput<$PrismaModel>
    gte?: InputJsonValue | JsonFieldRefInput<$PrismaModel>
    not?: InputJsonValue | JsonFieldRefInput<$PrismaModel> | JsonNullValueFilter
  }

  export type NestedEnumtruck_statusFilter<$PrismaModel = never> = {
    equals?: $Enums.truck_status | Enumtruck_statusFieldRefInput<$PrismaModel>
    in?: $Enums.truck_status[] | ListEnumtruck_statusFieldRefInput<$PrismaModel>
    notIn?: $Enums.truck_status[] | ListEnumtruck_statusFieldRefInput<$PrismaModel>
    not?: NestedEnumtruck_statusFilter<$PrismaModel> | $Enums.truck_status
  }

  export type NestedEnumtruck_statusWithAggregatesFilter<$PrismaModel = never> = {
    equals?: $Enums.truck_status | Enumtruck_statusFieldRefInput<$PrismaModel>
    in?: $Enums.truck_status[] | ListEnumtruck_statusFieldRefInput<$PrismaModel>
    notIn?: $Enums.truck_status[] | ListEnumtruck_statusFieldRefInput<$PrismaModel>
    not?: NestedEnumtruck_statusWithAggregatesFilter<$PrismaModel> | $Enums.truck_status
    _count?: NestedIntFilter<$PrismaModel>
    _min?: NestedEnumtruck_statusFilter<$PrismaModel>
    _max?: NestedEnumtruck_statusFilter<$PrismaModel>
  }

  export type truckCreateWithoutAlert_eventInput = {
    id?: string
    plate_number: string
    vin?: string | null
    name?: string | null
    model?: string | null
    year?: number | null
    tire_config?: string | null
    created_at?: Date | string
    created_by?: string | null
    updated_by?: string | null
    daily_route?: daily_routeCreateNestedManyWithoutTruckInput
    device?: deviceCreateNestedManyWithoutTruckInput
    device_status_event?: device_status_eventCreateNestedManyWithoutTruckInput
    device_truck_assignment?: device_truck_assignmentCreateNestedManyWithoutTruckInput
    fuel_level_event?: fuel_level_eventCreateNestedManyWithoutTruckInput
    gps_position?: gps_positionCreateNestedManyWithoutTruckInput
    hub_temperature_event?: hub_temperature_eventCreateNestedManyWithoutTruckInput
    lock_event?: lock_eventCreateNestedManyWithoutTruckInput
    sensor_data_raw?: sensor_data_rawCreateNestedManyWithoutTruckInput
    speed_event?: speed_eventCreateNestedManyWithoutTruckInput
    tire_position_config?: tire_position_configCreateNestedManyWithoutTruckInput
    tire_pressure_event?: tire_pressure_eventCreateNestedManyWithoutTruckInput
    trip?: tripCreateNestedManyWithoutTruckInput
    fleet_group?: fleet_groupCreateNestedOneWithoutTruckInput
    truck_status_event?: truck_status_eventCreateNestedManyWithoutTruckInput
  }

  export type truckUncheckedCreateWithoutAlert_eventInput = {
    id?: string
    plate_number: string
    vin?: string | null
    name?: string | null
    model?: string | null
    year?: number | null
    tire_config?: string | null
    fleet_group_id?: string | null
    created_at?: Date | string
    created_by?: string | null
    updated_by?: string | null
    daily_route?: daily_routeUncheckedCreateNestedManyWithoutTruckInput
    device?: deviceUncheckedCreateNestedManyWithoutTruckInput
    device_status_event?: device_status_eventUncheckedCreateNestedManyWithoutTruckInput
    device_truck_assignment?: device_truck_assignmentUncheckedCreateNestedManyWithoutTruckInput
    fuel_level_event?: fuel_level_eventUncheckedCreateNestedManyWithoutTruckInput
    gps_position?: gps_positionUncheckedCreateNestedManyWithoutTruckInput
    hub_temperature_event?: hub_temperature_eventUncheckedCreateNestedManyWithoutTruckInput
    lock_event?: lock_eventUncheckedCreateNestedManyWithoutTruckInput
    sensor_data_raw?: sensor_data_rawUncheckedCreateNestedManyWithoutTruckInput
    speed_event?: speed_eventUncheckedCreateNestedManyWithoutTruckInput
    tire_position_config?: tire_position_configUncheckedCreateNestedManyWithoutTruckInput
    tire_pressure_event?: tire_pressure_eventUncheckedCreateNestedManyWithoutTruckInput
    trip?: tripUncheckedCreateNestedManyWithoutTruckInput
    truck_status_event?: truck_status_eventUncheckedCreateNestedManyWithoutTruckInput
  }

  export type truckCreateOrConnectWithoutAlert_eventInput = {
    where: truckWhereUniqueInput
    create: XOR<truckCreateWithoutAlert_eventInput, truckUncheckedCreateWithoutAlert_eventInput>
  }

  export type truckUpsertWithoutAlert_eventInput = {
    update: XOR<truckUpdateWithoutAlert_eventInput, truckUncheckedUpdateWithoutAlert_eventInput>
    create: XOR<truckCreateWithoutAlert_eventInput, truckUncheckedCreateWithoutAlert_eventInput>
    where?: truckWhereInput
  }

  export type truckUpdateToOneWithWhereWithoutAlert_eventInput = {
    where?: truckWhereInput
    data: XOR<truckUpdateWithoutAlert_eventInput, truckUncheckedUpdateWithoutAlert_eventInput>
  }

  export type truckUpdateWithoutAlert_eventInput = {
    id?: StringFieldUpdateOperationsInput | string
    plate_number?: StringFieldUpdateOperationsInput | string
    vin?: NullableStringFieldUpdateOperationsInput | string | null
    name?: NullableStringFieldUpdateOperationsInput | string | null
    model?: NullableStringFieldUpdateOperationsInput | string | null
    year?: NullableIntFieldUpdateOperationsInput | number | null
    tire_config?: NullableStringFieldUpdateOperationsInput | string | null
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    created_by?: NullableStringFieldUpdateOperationsInput | string | null
    updated_by?: NullableStringFieldUpdateOperationsInput | string | null
    daily_route?: daily_routeUpdateManyWithoutTruckNestedInput
    device?: deviceUpdateManyWithoutTruckNestedInput
    device_status_event?: device_status_eventUpdateManyWithoutTruckNestedInput
    device_truck_assignment?: device_truck_assignmentUpdateManyWithoutTruckNestedInput
    fuel_level_event?: fuel_level_eventUpdateManyWithoutTruckNestedInput
    gps_position?: gps_positionUpdateManyWithoutTruckNestedInput
    hub_temperature_event?: hub_temperature_eventUpdateManyWithoutTruckNestedInput
    lock_event?: lock_eventUpdateManyWithoutTruckNestedInput
    sensor_data_raw?: sensor_data_rawUpdateManyWithoutTruckNestedInput
    speed_event?: speed_eventUpdateManyWithoutTruckNestedInput
    tire_position_config?: tire_position_configUpdateManyWithoutTruckNestedInput
    tire_pressure_event?: tire_pressure_eventUpdateManyWithoutTruckNestedInput
    trip?: tripUpdateManyWithoutTruckNestedInput
    fleet_group?: fleet_groupUpdateOneWithoutTruckNestedInput
    truck_status_event?: truck_status_eventUpdateManyWithoutTruckNestedInput
  }

  export type truckUncheckedUpdateWithoutAlert_eventInput = {
    id?: StringFieldUpdateOperationsInput | string
    plate_number?: StringFieldUpdateOperationsInput | string
    vin?: NullableStringFieldUpdateOperationsInput | string | null
    name?: NullableStringFieldUpdateOperationsInput | string | null
    model?: NullableStringFieldUpdateOperationsInput | string | null
    year?: NullableIntFieldUpdateOperationsInput | number | null
    tire_config?: NullableStringFieldUpdateOperationsInput | string | null
    fleet_group_id?: NullableStringFieldUpdateOperationsInput | string | null
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    created_by?: NullableStringFieldUpdateOperationsInput | string | null
    updated_by?: NullableStringFieldUpdateOperationsInput | string | null
    daily_route?: daily_routeUncheckedUpdateManyWithoutTruckNestedInput
    device?: deviceUncheckedUpdateManyWithoutTruckNestedInput
    device_status_event?: device_status_eventUncheckedUpdateManyWithoutTruckNestedInput
    device_truck_assignment?: device_truck_assignmentUncheckedUpdateManyWithoutTruckNestedInput
    fuel_level_event?: fuel_level_eventUncheckedUpdateManyWithoutTruckNestedInput
    gps_position?: gps_positionUncheckedUpdateManyWithoutTruckNestedInput
    hub_temperature_event?: hub_temperature_eventUncheckedUpdateManyWithoutTruckNestedInput
    lock_event?: lock_eventUncheckedUpdateManyWithoutTruckNestedInput
    sensor_data_raw?: sensor_data_rawUncheckedUpdateManyWithoutTruckNestedInput
    speed_event?: speed_eventUncheckedUpdateManyWithoutTruckNestedInput
    tire_position_config?: tire_position_configUncheckedUpdateManyWithoutTruckNestedInput
    tire_pressure_event?: tire_pressure_eventUncheckedUpdateManyWithoutTruckNestedInput
    trip?: tripUncheckedUpdateManyWithoutTruckNestedInput
    truck_status_event?: truck_status_eventUncheckedUpdateManyWithoutTruckNestedInput
  }

  export type truckCreateWithoutDaily_routeInput = {
    id?: string
    plate_number: string
    vin?: string | null
    name?: string | null
    model?: string | null
    year?: number | null
    tire_config?: string | null
    created_at?: Date | string
    created_by?: string | null
    updated_by?: string | null
    alert_event?: alert_eventCreateNestedManyWithoutTruckInput
    device?: deviceCreateNestedManyWithoutTruckInput
    device_status_event?: device_status_eventCreateNestedManyWithoutTruckInput
    device_truck_assignment?: device_truck_assignmentCreateNestedManyWithoutTruckInput
    fuel_level_event?: fuel_level_eventCreateNestedManyWithoutTruckInput
    gps_position?: gps_positionCreateNestedManyWithoutTruckInput
    hub_temperature_event?: hub_temperature_eventCreateNestedManyWithoutTruckInput
    lock_event?: lock_eventCreateNestedManyWithoutTruckInput
    sensor_data_raw?: sensor_data_rawCreateNestedManyWithoutTruckInput
    speed_event?: speed_eventCreateNestedManyWithoutTruckInput
    tire_position_config?: tire_position_configCreateNestedManyWithoutTruckInput
    tire_pressure_event?: tire_pressure_eventCreateNestedManyWithoutTruckInput
    trip?: tripCreateNestedManyWithoutTruckInput
    fleet_group?: fleet_groupCreateNestedOneWithoutTruckInput
    truck_status_event?: truck_status_eventCreateNestedManyWithoutTruckInput
  }

  export type truckUncheckedCreateWithoutDaily_routeInput = {
    id?: string
    plate_number: string
    vin?: string | null
    name?: string | null
    model?: string | null
    year?: number | null
    tire_config?: string | null
    fleet_group_id?: string | null
    created_at?: Date | string
    created_by?: string | null
    updated_by?: string | null
    alert_event?: alert_eventUncheckedCreateNestedManyWithoutTruckInput
    device?: deviceUncheckedCreateNestedManyWithoutTruckInput
    device_status_event?: device_status_eventUncheckedCreateNestedManyWithoutTruckInput
    device_truck_assignment?: device_truck_assignmentUncheckedCreateNestedManyWithoutTruckInput
    fuel_level_event?: fuel_level_eventUncheckedCreateNestedManyWithoutTruckInput
    gps_position?: gps_positionUncheckedCreateNestedManyWithoutTruckInput
    hub_temperature_event?: hub_temperature_eventUncheckedCreateNestedManyWithoutTruckInput
    lock_event?: lock_eventUncheckedCreateNestedManyWithoutTruckInput
    sensor_data_raw?: sensor_data_rawUncheckedCreateNestedManyWithoutTruckInput
    speed_event?: speed_eventUncheckedCreateNestedManyWithoutTruckInput
    tire_position_config?: tire_position_configUncheckedCreateNestedManyWithoutTruckInput
    tire_pressure_event?: tire_pressure_eventUncheckedCreateNestedManyWithoutTruckInput
    trip?: tripUncheckedCreateNestedManyWithoutTruckInput
    truck_status_event?: truck_status_eventUncheckedCreateNestedManyWithoutTruckInput
  }

  export type truckCreateOrConnectWithoutDaily_routeInput = {
    where: truckWhereUniqueInput
    create: XOR<truckCreateWithoutDaily_routeInput, truckUncheckedCreateWithoutDaily_routeInput>
  }

  export type truckUpsertWithoutDaily_routeInput = {
    update: XOR<truckUpdateWithoutDaily_routeInput, truckUncheckedUpdateWithoutDaily_routeInput>
    create: XOR<truckCreateWithoutDaily_routeInput, truckUncheckedCreateWithoutDaily_routeInput>
    where?: truckWhereInput
  }

  export type truckUpdateToOneWithWhereWithoutDaily_routeInput = {
    where?: truckWhereInput
    data: XOR<truckUpdateWithoutDaily_routeInput, truckUncheckedUpdateWithoutDaily_routeInput>
  }

  export type truckUpdateWithoutDaily_routeInput = {
    id?: StringFieldUpdateOperationsInput | string
    plate_number?: StringFieldUpdateOperationsInput | string
    vin?: NullableStringFieldUpdateOperationsInput | string | null
    name?: NullableStringFieldUpdateOperationsInput | string | null
    model?: NullableStringFieldUpdateOperationsInput | string | null
    year?: NullableIntFieldUpdateOperationsInput | number | null
    tire_config?: NullableStringFieldUpdateOperationsInput | string | null
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    created_by?: NullableStringFieldUpdateOperationsInput | string | null
    updated_by?: NullableStringFieldUpdateOperationsInput | string | null
    alert_event?: alert_eventUpdateManyWithoutTruckNestedInput
    device?: deviceUpdateManyWithoutTruckNestedInput
    device_status_event?: device_status_eventUpdateManyWithoutTruckNestedInput
    device_truck_assignment?: device_truck_assignmentUpdateManyWithoutTruckNestedInput
    fuel_level_event?: fuel_level_eventUpdateManyWithoutTruckNestedInput
    gps_position?: gps_positionUpdateManyWithoutTruckNestedInput
    hub_temperature_event?: hub_temperature_eventUpdateManyWithoutTruckNestedInput
    lock_event?: lock_eventUpdateManyWithoutTruckNestedInput
    sensor_data_raw?: sensor_data_rawUpdateManyWithoutTruckNestedInput
    speed_event?: speed_eventUpdateManyWithoutTruckNestedInput
    tire_position_config?: tire_position_configUpdateManyWithoutTruckNestedInput
    tire_pressure_event?: tire_pressure_eventUpdateManyWithoutTruckNestedInput
    trip?: tripUpdateManyWithoutTruckNestedInput
    fleet_group?: fleet_groupUpdateOneWithoutTruckNestedInput
    truck_status_event?: truck_status_eventUpdateManyWithoutTruckNestedInput
  }

  export type truckUncheckedUpdateWithoutDaily_routeInput = {
    id?: StringFieldUpdateOperationsInput | string
    plate_number?: StringFieldUpdateOperationsInput | string
    vin?: NullableStringFieldUpdateOperationsInput | string | null
    name?: NullableStringFieldUpdateOperationsInput | string | null
    model?: NullableStringFieldUpdateOperationsInput | string | null
    year?: NullableIntFieldUpdateOperationsInput | number | null
    tire_config?: NullableStringFieldUpdateOperationsInput | string | null
    fleet_group_id?: NullableStringFieldUpdateOperationsInput | string | null
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    created_by?: NullableStringFieldUpdateOperationsInput | string | null
    updated_by?: NullableStringFieldUpdateOperationsInput | string | null
    alert_event?: alert_eventUncheckedUpdateManyWithoutTruckNestedInput
    device?: deviceUncheckedUpdateManyWithoutTruckNestedInput
    device_status_event?: device_status_eventUncheckedUpdateManyWithoutTruckNestedInput
    device_truck_assignment?: device_truck_assignmentUncheckedUpdateManyWithoutTruckNestedInput
    fuel_level_event?: fuel_level_eventUncheckedUpdateManyWithoutTruckNestedInput
    gps_position?: gps_positionUncheckedUpdateManyWithoutTruckNestedInput
    hub_temperature_event?: hub_temperature_eventUncheckedUpdateManyWithoutTruckNestedInput
    lock_event?: lock_eventUncheckedUpdateManyWithoutTruckNestedInput
    sensor_data_raw?: sensor_data_rawUncheckedUpdateManyWithoutTruckNestedInput
    speed_event?: speed_eventUncheckedUpdateManyWithoutTruckNestedInput
    tire_position_config?: tire_position_configUncheckedUpdateManyWithoutTruckNestedInput
    tire_pressure_event?: tire_pressure_eventUncheckedUpdateManyWithoutTruckNestedInput
    trip?: tripUncheckedUpdateManyWithoutTruckNestedInput
    truck_status_event?: truck_status_eventUncheckedUpdateManyWithoutTruckNestedInput
  }

  export type truckCreateWithoutDeviceInput = {
    id?: string
    plate_number: string
    vin?: string | null
    name?: string | null
    model?: string | null
    year?: number | null
    tire_config?: string | null
    created_at?: Date | string
    created_by?: string | null
    updated_by?: string | null
    alert_event?: alert_eventCreateNestedManyWithoutTruckInput
    daily_route?: daily_routeCreateNestedManyWithoutTruckInput
    device_status_event?: device_status_eventCreateNestedManyWithoutTruckInput
    device_truck_assignment?: device_truck_assignmentCreateNestedManyWithoutTruckInput
    fuel_level_event?: fuel_level_eventCreateNestedManyWithoutTruckInput
    gps_position?: gps_positionCreateNestedManyWithoutTruckInput
    hub_temperature_event?: hub_temperature_eventCreateNestedManyWithoutTruckInput
    lock_event?: lock_eventCreateNestedManyWithoutTruckInput
    sensor_data_raw?: sensor_data_rawCreateNestedManyWithoutTruckInput
    speed_event?: speed_eventCreateNestedManyWithoutTruckInput
    tire_position_config?: tire_position_configCreateNestedManyWithoutTruckInput
    tire_pressure_event?: tire_pressure_eventCreateNestedManyWithoutTruckInput
    trip?: tripCreateNestedManyWithoutTruckInput
    fleet_group?: fleet_groupCreateNestedOneWithoutTruckInput
    truck_status_event?: truck_status_eventCreateNestedManyWithoutTruckInput
  }

  export type truckUncheckedCreateWithoutDeviceInput = {
    id?: string
    plate_number: string
    vin?: string | null
    name?: string | null
    model?: string | null
    year?: number | null
    tire_config?: string | null
    fleet_group_id?: string | null
    created_at?: Date | string
    created_by?: string | null
    updated_by?: string | null
    alert_event?: alert_eventUncheckedCreateNestedManyWithoutTruckInput
    daily_route?: daily_routeUncheckedCreateNestedManyWithoutTruckInput
    device_status_event?: device_status_eventUncheckedCreateNestedManyWithoutTruckInput
    device_truck_assignment?: device_truck_assignmentUncheckedCreateNestedManyWithoutTruckInput
    fuel_level_event?: fuel_level_eventUncheckedCreateNestedManyWithoutTruckInput
    gps_position?: gps_positionUncheckedCreateNestedManyWithoutTruckInput
    hub_temperature_event?: hub_temperature_eventUncheckedCreateNestedManyWithoutTruckInput
    lock_event?: lock_eventUncheckedCreateNestedManyWithoutTruckInput
    sensor_data_raw?: sensor_data_rawUncheckedCreateNestedManyWithoutTruckInput
    speed_event?: speed_eventUncheckedCreateNestedManyWithoutTruckInput
    tire_position_config?: tire_position_configUncheckedCreateNestedManyWithoutTruckInput
    tire_pressure_event?: tire_pressure_eventUncheckedCreateNestedManyWithoutTruckInput
    trip?: tripUncheckedCreateNestedManyWithoutTruckInput
    truck_status_event?: truck_status_eventUncheckedCreateNestedManyWithoutTruckInput
  }

  export type truckCreateOrConnectWithoutDeviceInput = {
    where: truckWhereUniqueInput
    create: XOR<truckCreateWithoutDeviceInput, truckUncheckedCreateWithoutDeviceInput>
  }

  export type device_status_eventCreateWithoutDeviceInput = {
    id?: string
    host_bat?: number | null
    repeater1_bat?: number | null
    repeater2_bat?: number | null
    lock_state?: number | null
    reported_at?: Date | string
    created_by?: string | null
    truck: truckCreateNestedOneWithoutDevice_status_eventInput
  }

  export type device_status_eventUncheckedCreateWithoutDeviceInput = {
    id?: string
    truck_id: string
    host_bat?: number | null
    repeater1_bat?: number | null
    repeater2_bat?: number | null
    lock_state?: number | null
    reported_at?: Date | string
    created_by?: string | null
  }

  export type device_status_eventCreateOrConnectWithoutDeviceInput = {
    where: device_status_eventWhereUniqueInput
    create: XOR<device_status_eventCreateWithoutDeviceInput, device_status_eventUncheckedCreateWithoutDeviceInput>
  }

  export type device_status_eventCreateManyDeviceInputEnvelope = {
    data: device_status_eventCreateManyDeviceInput | device_status_eventCreateManyDeviceInput[]
    skipDuplicates?: boolean
  }

  export type device_truck_assignmentCreateWithoutDeviceInput = {
    id?: string
    assigned_at?: Date | string
    removed_at?: Date | string | null
    is_active?: boolean | null
    users_device_truck_assignment_assigned_byTousers?: usersCreateNestedOneWithoutDevice_truck_assignment_device_truck_assignment_assigned_byTousersInput
    users_device_truck_assignment_removed_byTousers?: usersCreateNestedOneWithoutDevice_truck_assignment_device_truck_assignment_removed_byTousersInput
    truck?: truckCreateNestedOneWithoutDevice_truck_assignmentInput
  }

  export type device_truck_assignmentUncheckedCreateWithoutDeviceInput = {
    id?: string
    truck_id?: string | null
    assigned_at?: Date | string
    assigned_by?: string | null
    removed_at?: Date | string | null
    removed_by?: string | null
    is_active?: boolean | null
  }

  export type device_truck_assignmentCreateOrConnectWithoutDeviceInput = {
    where: device_truck_assignmentWhereUniqueInput
    create: XOR<device_truck_assignmentCreateWithoutDeviceInput, device_truck_assignmentUncheckedCreateWithoutDeviceInput>
  }

  export type device_truck_assignmentCreateManyDeviceInputEnvelope = {
    data: device_truck_assignmentCreateManyDeviceInput | device_truck_assignmentCreateManyDeviceInput[]
    skipDuplicates?: boolean
  }

  export type hub_temperature_eventCreateWithoutDeviceInput = {
    id?: string
    hub_no?: number | null
    temp_celsius?: number | null
    ex_type?: string | null
    battery_level?: number | null
    changed_at?: Date | string
    created_by?: string | null
    truck: truckCreateNestedOneWithoutHub_temperature_eventInput
  }

  export type hub_temperature_eventUncheckedCreateWithoutDeviceInput = {
    id?: string
    truck_id: string
    hub_no?: number | null
    temp_celsius?: number | null
    ex_type?: string | null
    battery_level?: number | null
    changed_at?: Date | string
    created_by?: string | null
  }

  export type hub_temperature_eventCreateOrConnectWithoutDeviceInput = {
    where: hub_temperature_eventWhereUniqueInput
    create: XOR<hub_temperature_eventCreateWithoutDeviceInput, hub_temperature_eventUncheckedCreateWithoutDeviceInput>
  }

  export type hub_temperature_eventCreateManyDeviceInputEnvelope = {
    data: hub_temperature_eventCreateManyDeviceInput | hub_temperature_eventCreateManyDeviceInput[]
    skipDuplicates?: boolean
  }

  export type lock_eventCreateWithoutDeviceInput = {
    id?: string
    is_lock?: number | null
    reported_at?: Date | string
    created_by?: string | null
    truck: truckCreateNestedOneWithoutLock_eventInput
  }

  export type lock_eventUncheckedCreateWithoutDeviceInput = {
    id?: string
    truck_id: string
    is_lock?: number | null
    reported_at?: Date | string
    created_by?: string | null
  }

  export type lock_eventCreateOrConnectWithoutDeviceInput = {
    where: lock_eventWhereUniqueInput
    create: XOR<lock_eventCreateWithoutDeviceInput, lock_eventUncheckedCreateWithoutDeviceInput>
  }

  export type lock_eventCreateManyDeviceInputEnvelope = {
    data: lock_eventCreateManyDeviceInput | lock_eventCreateManyDeviceInput[]
    skipDuplicates?: boolean
  }

  export type sensorCreateWithoutDeviceInput = {
    id?: string
    type?: string | null
    position_no: number
    sn?: string | null
    installed_at?: Date | string | null
    removed_at?: Date | string | null
    created_by?: string | null
    updated_by?: string | null
  }

  export type sensorUncheckedCreateWithoutDeviceInput = {
    id?: string
    type?: string | null
    position_no: number
    sn?: string | null
    installed_at?: Date | string | null
    removed_at?: Date | string | null
    created_by?: string | null
    updated_by?: string | null
  }

  export type sensorCreateOrConnectWithoutDeviceInput = {
    where: sensorWhereUniqueInput
    create: XOR<sensorCreateWithoutDeviceInput, sensorUncheckedCreateWithoutDeviceInput>
  }

  export type sensorCreateManyDeviceInputEnvelope = {
    data: sensorCreateManyDeviceInput | sensorCreateManyDeviceInput[]
    skipDuplicates?: boolean
  }

  export type tire_pressure_eventCreateWithoutDeviceInput = {
    id?: string
    tire_no: number
    pressure_kpa?: number | null
    temp_celsius?: number | null
    ex_type?: string | null
    battery_level?: number | null
    changed_at?: Date | string
    created_by?: string | null
    truck: truckCreateNestedOneWithoutTire_pressure_eventInput
  }

  export type tire_pressure_eventUncheckedCreateWithoutDeviceInput = {
    id?: string
    truck_id: string
    tire_no: number
    pressure_kpa?: number | null
    temp_celsius?: number | null
    ex_type?: string | null
    battery_level?: number | null
    changed_at?: Date | string
    created_by?: string | null
  }

  export type tire_pressure_eventCreateOrConnectWithoutDeviceInput = {
    where: tire_pressure_eventWhereUniqueInput
    create: XOR<tire_pressure_eventCreateWithoutDeviceInput, tire_pressure_eventUncheckedCreateWithoutDeviceInput>
  }

  export type tire_pressure_eventCreateManyDeviceInputEnvelope = {
    data: tire_pressure_eventCreateManyDeviceInput | tire_pressure_eventCreateManyDeviceInput[]
    skipDuplicates?: boolean
  }

  export type truckUpsertWithoutDeviceInput = {
    update: XOR<truckUpdateWithoutDeviceInput, truckUncheckedUpdateWithoutDeviceInput>
    create: XOR<truckCreateWithoutDeviceInput, truckUncheckedCreateWithoutDeviceInput>
    where?: truckWhereInput
  }

  export type truckUpdateToOneWithWhereWithoutDeviceInput = {
    where?: truckWhereInput
    data: XOR<truckUpdateWithoutDeviceInput, truckUncheckedUpdateWithoutDeviceInput>
  }

  export type truckUpdateWithoutDeviceInput = {
    id?: StringFieldUpdateOperationsInput | string
    plate_number?: StringFieldUpdateOperationsInput | string
    vin?: NullableStringFieldUpdateOperationsInput | string | null
    name?: NullableStringFieldUpdateOperationsInput | string | null
    model?: NullableStringFieldUpdateOperationsInput | string | null
    year?: NullableIntFieldUpdateOperationsInput | number | null
    tire_config?: NullableStringFieldUpdateOperationsInput | string | null
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    created_by?: NullableStringFieldUpdateOperationsInput | string | null
    updated_by?: NullableStringFieldUpdateOperationsInput | string | null
    alert_event?: alert_eventUpdateManyWithoutTruckNestedInput
    daily_route?: daily_routeUpdateManyWithoutTruckNestedInput
    device_status_event?: device_status_eventUpdateManyWithoutTruckNestedInput
    device_truck_assignment?: device_truck_assignmentUpdateManyWithoutTruckNestedInput
    fuel_level_event?: fuel_level_eventUpdateManyWithoutTruckNestedInput
    gps_position?: gps_positionUpdateManyWithoutTruckNestedInput
    hub_temperature_event?: hub_temperature_eventUpdateManyWithoutTruckNestedInput
    lock_event?: lock_eventUpdateManyWithoutTruckNestedInput
    sensor_data_raw?: sensor_data_rawUpdateManyWithoutTruckNestedInput
    speed_event?: speed_eventUpdateManyWithoutTruckNestedInput
    tire_position_config?: tire_position_configUpdateManyWithoutTruckNestedInput
    tire_pressure_event?: tire_pressure_eventUpdateManyWithoutTruckNestedInput
    trip?: tripUpdateManyWithoutTruckNestedInput
    fleet_group?: fleet_groupUpdateOneWithoutTruckNestedInput
    truck_status_event?: truck_status_eventUpdateManyWithoutTruckNestedInput
  }

  export type truckUncheckedUpdateWithoutDeviceInput = {
    id?: StringFieldUpdateOperationsInput | string
    plate_number?: StringFieldUpdateOperationsInput | string
    vin?: NullableStringFieldUpdateOperationsInput | string | null
    name?: NullableStringFieldUpdateOperationsInput | string | null
    model?: NullableStringFieldUpdateOperationsInput | string | null
    year?: NullableIntFieldUpdateOperationsInput | number | null
    tire_config?: NullableStringFieldUpdateOperationsInput | string | null
    fleet_group_id?: NullableStringFieldUpdateOperationsInput | string | null
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    created_by?: NullableStringFieldUpdateOperationsInput | string | null
    updated_by?: NullableStringFieldUpdateOperationsInput | string | null
    alert_event?: alert_eventUncheckedUpdateManyWithoutTruckNestedInput
    daily_route?: daily_routeUncheckedUpdateManyWithoutTruckNestedInput
    device_status_event?: device_status_eventUncheckedUpdateManyWithoutTruckNestedInput
    device_truck_assignment?: device_truck_assignmentUncheckedUpdateManyWithoutTruckNestedInput
    fuel_level_event?: fuel_level_eventUncheckedUpdateManyWithoutTruckNestedInput
    gps_position?: gps_positionUncheckedUpdateManyWithoutTruckNestedInput
    hub_temperature_event?: hub_temperature_eventUncheckedUpdateManyWithoutTruckNestedInput
    lock_event?: lock_eventUncheckedUpdateManyWithoutTruckNestedInput
    sensor_data_raw?: sensor_data_rawUncheckedUpdateManyWithoutTruckNestedInput
    speed_event?: speed_eventUncheckedUpdateManyWithoutTruckNestedInput
    tire_position_config?: tire_position_configUncheckedUpdateManyWithoutTruckNestedInput
    tire_pressure_event?: tire_pressure_eventUncheckedUpdateManyWithoutTruckNestedInput
    trip?: tripUncheckedUpdateManyWithoutTruckNestedInput
    truck_status_event?: truck_status_eventUncheckedUpdateManyWithoutTruckNestedInput
  }

  export type device_status_eventUpsertWithWhereUniqueWithoutDeviceInput = {
    where: device_status_eventWhereUniqueInput
    update: XOR<device_status_eventUpdateWithoutDeviceInput, device_status_eventUncheckedUpdateWithoutDeviceInput>
    create: XOR<device_status_eventCreateWithoutDeviceInput, device_status_eventUncheckedCreateWithoutDeviceInput>
  }

  export type device_status_eventUpdateWithWhereUniqueWithoutDeviceInput = {
    where: device_status_eventWhereUniqueInput
    data: XOR<device_status_eventUpdateWithoutDeviceInput, device_status_eventUncheckedUpdateWithoutDeviceInput>
  }

  export type device_status_eventUpdateManyWithWhereWithoutDeviceInput = {
    where: device_status_eventScalarWhereInput
    data: XOR<device_status_eventUpdateManyMutationInput, device_status_eventUncheckedUpdateManyWithoutDeviceInput>
  }

  export type device_status_eventScalarWhereInput = {
    AND?: device_status_eventScalarWhereInput | device_status_eventScalarWhereInput[]
    OR?: device_status_eventScalarWhereInput[]
    NOT?: device_status_eventScalarWhereInput | device_status_eventScalarWhereInput[]
    id?: UuidFilter<"device_status_event"> | string
    device_id?: UuidFilter<"device_status_event"> | string
    truck_id?: UuidFilter<"device_status_event"> | string
    host_bat?: IntNullableFilter<"device_status_event"> | number | null
    repeater1_bat?: IntNullableFilter<"device_status_event"> | number | null
    repeater2_bat?: IntNullableFilter<"device_status_event"> | number | null
    lock_state?: IntNullableFilter<"device_status_event"> | number | null
    reported_at?: DateTimeFilter<"device_status_event"> | Date | string
    created_by?: UuidNullableFilter<"device_status_event"> | string | null
  }

  export type device_truck_assignmentUpsertWithWhereUniqueWithoutDeviceInput = {
    where: device_truck_assignmentWhereUniqueInput
    update: XOR<device_truck_assignmentUpdateWithoutDeviceInput, device_truck_assignmentUncheckedUpdateWithoutDeviceInput>
    create: XOR<device_truck_assignmentCreateWithoutDeviceInput, device_truck_assignmentUncheckedCreateWithoutDeviceInput>
  }

  export type device_truck_assignmentUpdateWithWhereUniqueWithoutDeviceInput = {
    where: device_truck_assignmentWhereUniqueInput
    data: XOR<device_truck_assignmentUpdateWithoutDeviceInput, device_truck_assignmentUncheckedUpdateWithoutDeviceInput>
  }

  export type device_truck_assignmentUpdateManyWithWhereWithoutDeviceInput = {
    where: device_truck_assignmentScalarWhereInput
    data: XOR<device_truck_assignmentUpdateManyMutationInput, device_truck_assignmentUncheckedUpdateManyWithoutDeviceInput>
  }

  export type device_truck_assignmentScalarWhereInput = {
    AND?: device_truck_assignmentScalarWhereInput | device_truck_assignmentScalarWhereInput[]
    OR?: device_truck_assignmentScalarWhereInput[]
    NOT?: device_truck_assignmentScalarWhereInput | device_truck_assignmentScalarWhereInput[]
    id?: UuidFilter<"device_truck_assignment"> | string
    device_id?: UuidNullableFilter<"device_truck_assignment"> | string | null
    truck_id?: UuidNullableFilter<"device_truck_assignment"> | string | null
    assigned_at?: DateTimeFilter<"device_truck_assignment"> | Date | string
    assigned_by?: UuidNullableFilter<"device_truck_assignment"> | string | null
    removed_at?: DateTimeNullableFilter<"device_truck_assignment"> | Date | string | null
    removed_by?: UuidNullableFilter<"device_truck_assignment"> | string | null
    is_active?: BoolNullableFilter<"device_truck_assignment"> | boolean | null
  }

  export type gps_positionUpdateWithWhereUniqueWithoutDeviceInput = {
    where: gps_positionWhereUniqueInput
    data: XOR<gps_positionUpdateWithoutDeviceInput, gps_positionUncheckedUpdateWithoutDeviceInput>
  }

  export type gps_positionUpdateManyWithWhereWithoutDeviceInput = {
    where: gps_positionScalarWhereInput
    data: XOR<gps_positionUpdateManyMutationInput, gps_positionUncheckedUpdateManyWithoutDeviceInput>
  }

  export type gps_positionScalarWhereInput = {
    AND?: gps_positionScalarWhereInput | gps_positionScalarWhereInput[]
    OR?: gps_positionScalarWhereInput[]
    NOT?: gps_positionScalarWhereInput | gps_positionScalarWhereInput[]
    id?: BigIntFilter<"gps_position"> | bigint | number
    device_id?: UuidNullableFilter<"gps_position"> | string | null
    truck_id?: UuidFilter<"gps_position"> | string
    ts?: DateTimeFilter<"gps_position"> | Date | string
    speed_kph?: FloatNullableFilter<"gps_position"> | number | null
    heading_deg?: FloatNullableFilter<"gps_position"> | number | null
    hdop?: FloatNullableFilter<"gps_position"> | number | null
    source?: StringNullableFilter<"gps_position"> | string | null
  }

  export type hub_temperature_eventUpsertWithWhereUniqueWithoutDeviceInput = {
    where: hub_temperature_eventWhereUniqueInput
    update: XOR<hub_temperature_eventUpdateWithoutDeviceInput, hub_temperature_eventUncheckedUpdateWithoutDeviceInput>
    create: XOR<hub_temperature_eventCreateWithoutDeviceInput, hub_temperature_eventUncheckedCreateWithoutDeviceInput>
  }

  export type hub_temperature_eventUpdateWithWhereUniqueWithoutDeviceInput = {
    where: hub_temperature_eventWhereUniqueInput
    data: XOR<hub_temperature_eventUpdateWithoutDeviceInput, hub_temperature_eventUncheckedUpdateWithoutDeviceInput>
  }

  export type hub_temperature_eventUpdateManyWithWhereWithoutDeviceInput = {
    where: hub_temperature_eventScalarWhereInput
    data: XOR<hub_temperature_eventUpdateManyMutationInput, hub_temperature_eventUncheckedUpdateManyWithoutDeviceInput>
  }

  export type hub_temperature_eventScalarWhereInput = {
    AND?: hub_temperature_eventScalarWhereInput | hub_temperature_eventScalarWhereInput[]
    OR?: hub_temperature_eventScalarWhereInput[]
    NOT?: hub_temperature_eventScalarWhereInput | hub_temperature_eventScalarWhereInput[]
    id?: UuidFilter<"hub_temperature_event"> | string
    device_id?: UuidFilter<"hub_temperature_event"> | string
    truck_id?: UuidFilter<"hub_temperature_event"> | string
    hub_no?: IntNullableFilter<"hub_temperature_event"> | number | null
    temp_celsius?: FloatNullableFilter<"hub_temperature_event"> | number | null
    ex_type?: StringNullableFilter<"hub_temperature_event"> | string | null
    battery_level?: IntNullableFilter<"hub_temperature_event"> | number | null
    changed_at?: DateTimeFilter<"hub_temperature_event"> | Date | string
    created_by?: UuidNullableFilter<"hub_temperature_event"> | string | null
  }

  export type lock_eventUpsertWithWhereUniqueWithoutDeviceInput = {
    where: lock_eventWhereUniqueInput
    update: XOR<lock_eventUpdateWithoutDeviceInput, lock_eventUncheckedUpdateWithoutDeviceInput>
    create: XOR<lock_eventCreateWithoutDeviceInput, lock_eventUncheckedCreateWithoutDeviceInput>
  }

  export type lock_eventUpdateWithWhereUniqueWithoutDeviceInput = {
    where: lock_eventWhereUniqueInput
    data: XOR<lock_eventUpdateWithoutDeviceInput, lock_eventUncheckedUpdateWithoutDeviceInput>
  }

  export type lock_eventUpdateManyWithWhereWithoutDeviceInput = {
    where: lock_eventScalarWhereInput
    data: XOR<lock_eventUpdateManyMutationInput, lock_eventUncheckedUpdateManyWithoutDeviceInput>
  }

  export type lock_eventScalarWhereInput = {
    AND?: lock_eventScalarWhereInput | lock_eventScalarWhereInput[]
    OR?: lock_eventScalarWhereInput[]
    NOT?: lock_eventScalarWhereInput | lock_eventScalarWhereInput[]
    id?: UuidFilter<"lock_event"> | string
    device_id?: UuidFilter<"lock_event"> | string
    truck_id?: UuidFilter<"lock_event"> | string
    is_lock?: IntNullableFilter<"lock_event"> | number | null
    reported_at?: DateTimeFilter<"lock_event"> | Date | string
    created_by?: UuidNullableFilter<"lock_event"> | string | null
  }

  export type sensorUpsertWithWhereUniqueWithoutDeviceInput = {
    where: sensorWhereUniqueInput
    update: XOR<sensorUpdateWithoutDeviceInput, sensorUncheckedUpdateWithoutDeviceInput>
    create: XOR<sensorCreateWithoutDeviceInput, sensorUncheckedCreateWithoutDeviceInput>
  }

  export type sensorUpdateWithWhereUniqueWithoutDeviceInput = {
    where: sensorWhereUniqueInput
    data: XOR<sensorUpdateWithoutDeviceInput, sensorUncheckedUpdateWithoutDeviceInput>
  }

  export type sensorUpdateManyWithWhereWithoutDeviceInput = {
    where: sensorScalarWhereInput
    data: XOR<sensorUpdateManyMutationInput, sensorUncheckedUpdateManyWithoutDeviceInput>
  }

  export type sensorScalarWhereInput = {
    AND?: sensorScalarWhereInput | sensorScalarWhereInput[]
    OR?: sensorScalarWhereInput[]
    NOT?: sensorScalarWhereInput | sensorScalarWhereInput[]
    id?: UuidFilter<"sensor"> | string
    device_id?: UuidFilter<"sensor"> | string
    type?: StringNullableFilter<"sensor"> | string | null
    position_no?: IntFilter<"sensor"> | number
    sn?: StringNullableFilter<"sensor"> | string | null
    installed_at?: DateTimeNullableFilter<"sensor"> | Date | string | null
    removed_at?: DateTimeNullableFilter<"sensor"> | Date | string | null
    created_by?: UuidNullableFilter<"sensor"> | string | null
    updated_by?: UuidNullableFilter<"sensor"> | string | null
  }

  export type tire_pressure_eventUpsertWithWhereUniqueWithoutDeviceInput = {
    where: tire_pressure_eventWhereUniqueInput
    update: XOR<tire_pressure_eventUpdateWithoutDeviceInput, tire_pressure_eventUncheckedUpdateWithoutDeviceInput>
    create: XOR<tire_pressure_eventCreateWithoutDeviceInput, tire_pressure_eventUncheckedCreateWithoutDeviceInput>
  }

  export type tire_pressure_eventUpdateWithWhereUniqueWithoutDeviceInput = {
    where: tire_pressure_eventWhereUniqueInput
    data: XOR<tire_pressure_eventUpdateWithoutDeviceInput, tire_pressure_eventUncheckedUpdateWithoutDeviceInput>
  }

  export type tire_pressure_eventUpdateManyWithWhereWithoutDeviceInput = {
    where: tire_pressure_eventScalarWhereInput
    data: XOR<tire_pressure_eventUpdateManyMutationInput, tire_pressure_eventUncheckedUpdateManyWithoutDeviceInput>
  }

  export type tire_pressure_eventScalarWhereInput = {
    AND?: tire_pressure_eventScalarWhereInput | tire_pressure_eventScalarWhereInput[]
    OR?: tire_pressure_eventScalarWhereInput[]
    NOT?: tire_pressure_eventScalarWhereInput | tire_pressure_eventScalarWhereInput[]
    id?: UuidFilter<"tire_pressure_event"> | string
    device_id?: UuidFilter<"tire_pressure_event"> | string
    truck_id?: UuidFilter<"tire_pressure_event"> | string
    tire_no?: IntFilter<"tire_pressure_event"> | number
    pressure_kpa?: FloatNullableFilter<"tire_pressure_event"> | number | null
    temp_celsius?: FloatNullableFilter<"tire_pressure_event"> | number | null
    ex_type?: StringNullableFilter<"tire_pressure_event"> | string | null
    battery_level?: IntNullableFilter<"tire_pressure_event"> | number | null
    changed_at?: DateTimeFilter<"tire_pressure_event"> | Date | string
    created_by?: UuidNullableFilter<"tire_pressure_event"> | string | null
  }

  export type deviceCreateWithoutDevice_status_eventInput = {
    id?: string
    sn: string
    sim_number?: string | null
    installed_at?: Date | string
    removed_at?: Date | string | null
    created_by?: string | null
    updated_by?: string | null
    truck: truckCreateNestedOneWithoutDeviceInput
    device_truck_assignment?: device_truck_assignmentCreateNestedManyWithoutDeviceInput
    gps_position?: gps_positionCreateNestedManyWithoutDeviceInput
    hub_temperature_event?: hub_temperature_eventCreateNestedManyWithoutDeviceInput
    lock_event?: lock_eventCreateNestedManyWithoutDeviceInput
    sensor?: sensorCreateNestedManyWithoutDeviceInput
    tire_pressure_event?: tire_pressure_eventCreateNestedManyWithoutDeviceInput
  }

  export type deviceUncheckedCreateWithoutDevice_status_eventInput = {
    id?: string
    truck_id: string
    sn: string
    sim_number?: string | null
    installed_at?: Date | string
    removed_at?: Date | string | null
    created_by?: string | null
    updated_by?: string | null
    device_truck_assignment?: device_truck_assignmentUncheckedCreateNestedManyWithoutDeviceInput
    gps_position?: gps_positionUncheckedCreateNestedManyWithoutDeviceInput
    hub_temperature_event?: hub_temperature_eventUncheckedCreateNestedManyWithoutDeviceInput
    lock_event?: lock_eventUncheckedCreateNestedManyWithoutDeviceInput
    sensor?: sensorUncheckedCreateNestedManyWithoutDeviceInput
    tire_pressure_event?: tire_pressure_eventUncheckedCreateNestedManyWithoutDeviceInput
  }

  export type deviceCreateOrConnectWithoutDevice_status_eventInput = {
    where: deviceWhereUniqueInput
    create: XOR<deviceCreateWithoutDevice_status_eventInput, deviceUncheckedCreateWithoutDevice_status_eventInput>
  }

  export type truckCreateWithoutDevice_status_eventInput = {
    id?: string
    plate_number: string
    vin?: string | null
    name?: string | null
    model?: string | null
    year?: number | null
    tire_config?: string | null
    created_at?: Date | string
    created_by?: string | null
    updated_by?: string | null
    alert_event?: alert_eventCreateNestedManyWithoutTruckInput
    daily_route?: daily_routeCreateNestedManyWithoutTruckInput
    device?: deviceCreateNestedManyWithoutTruckInput
    device_truck_assignment?: device_truck_assignmentCreateNestedManyWithoutTruckInput
    fuel_level_event?: fuel_level_eventCreateNestedManyWithoutTruckInput
    gps_position?: gps_positionCreateNestedManyWithoutTruckInput
    hub_temperature_event?: hub_temperature_eventCreateNestedManyWithoutTruckInput
    lock_event?: lock_eventCreateNestedManyWithoutTruckInput
    sensor_data_raw?: sensor_data_rawCreateNestedManyWithoutTruckInput
    speed_event?: speed_eventCreateNestedManyWithoutTruckInput
    tire_position_config?: tire_position_configCreateNestedManyWithoutTruckInput
    tire_pressure_event?: tire_pressure_eventCreateNestedManyWithoutTruckInput
    trip?: tripCreateNestedManyWithoutTruckInput
    fleet_group?: fleet_groupCreateNestedOneWithoutTruckInput
    truck_status_event?: truck_status_eventCreateNestedManyWithoutTruckInput
  }

  export type truckUncheckedCreateWithoutDevice_status_eventInput = {
    id?: string
    plate_number: string
    vin?: string | null
    name?: string | null
    model?: string | null
    year?: number | null
    tire_config?: string | null
    fleet_group_id?: string | null
    created_at?: Date | string
    created_by?: string | null
    updated_by?: string | null
    alert_event?: alert_eventUncheckedCreateNestedManyWithoutTruckInput
    daily_route?: daily_routeUncheckedCreateNestedManyWithoutTruckInput
    device?: deviceUncheckedCreateNestedManyWithoutTruckInput
    device_truck_assignment?: device_truck_assignmentUncheckedCreateNestedManyWithoutTruckInput
    fuel_level_event?: fuel_level_eventUncheckedCreateNestedManyWithoutTruckInput
    gps_position?: gps_positionUncheckedCreateNestedManyWithoutTruckInput
    hub_temperature_event?: hub_temperature_eventUncheckedCreateNestedManyWithoutTruckInput
    lock_event?: lock_eventUncheckedCreateNestedManyWithoutTruckInput
    sensor_data_raw?: sensor_data_rawUncheckedCreateNestedManyWithoutTruckInput
    speed_event?: speed_eventUncheckedCreateNestedManyWithoutTruckInput
    tire_position_config?: tire_position_configUncheckedCreateNestedManyWithoutTruckInput
    tire_pressure_event?: tire_pressure_eventUncheckedCreateNestedManyWithoutTruckInput
    trip?: tripUncheckedCreateNestedManyWithoutTruckInput
    truck_status_event?: truck_status_eventUncheckedCreateNestedManyWithoutTruckInput
  }

  export type truckCreateOrConnectWithoutDevice_status_eventInput = {
    where: truckWhereUniqueInput
    create: XOR<truckCreateWithoutDevice_status_eventInput, truckUncheckedCreateWithoutDevice_status_eventInput>
  }

  export type deviceUpsertWithoutDevice_status_eventInput = {
    update: XOR<deviceUpdateWithoutDevice_status_eventInput, deviceUncheckedUpdateWithoutDevice_status_eventInput>
    create: XOR<deviceCreateWithoutDevice_status_eventInput, deviceUncheckedCreateWithoutDevice_status_eventInput>
    where?: deviceWhereInput
  }

  export type deviceUpdateToOneWithWhereWithoutDevice_status_eventInput = {
    where?: deviceWhereInput
    data: XOR<deviceUpdateWithoutDevice_status_eventInput, deviceUncheckedUpdateWithoutDevice_status_eventInput>
  }

  export type deviceUpdateWithoutDevice_status_eventInput = {
    id?: StringFieldUpdateOperationsInput | string
    sn?: StringFieldUpdateOperationsInput | string
    sim_number?: NullableStringFieldUpdateOperationsInput | string | null
    installed_at?: DateTimeFieldUpdateOperationsInput | Date | string
    removed_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    created_by?: NullableStringFieldUpdateOperationsInput | string | null
    updated_by?: NullableStringFieldUpdateOperationsInput | string | null
    truck?: truckUpdateOneRequiredWithoutDeviceNestedInput
    device_truck_assignment?: device_truck_assignmentUpdateManyWithoutDeviceNestedInput
    gps_position?: gps_positionUpdateManyWithoutDeviceNestedInput
    hub_temperature_event?: hub_temperature_eventUpdateManyWithoutDeviceNestedInput
    lock_event?: lock_eventUpdateManyWithoutDeviceNestedInput
    sensor?: sensorUpdateManyWithoutDeviceNestedInput
    tire_pressure_event?: tire_pressure_eventUpdateManyWithoutDeviceNestedInput
  }

  export type deviceUncheckedUpdateWithoutDevice_status_eventInput = {
    id?: StringFieldUpdateOperationsInput | string
    truck_id?: StringFieldUpdateOperationsInput | string
    sn?: StringFieldUpdateOperationsInput | string
    sim_number?: NullableStringFieldUpdateOperationsInput | string | null
    installed_at?: DateTimeFieldUpdateOperationsInput | Date | string
    removed_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    created_by?: NullableStringFieldUpdateOperationsInput | string | null
    updated_by?: NullableStringFieldUpdateOperationsInput | string | null
    device_truck_assignment?: device_truck_assignmentUncheckedUpdateManyWithoutDeviceNestedInput
    gps_position?: gps_positionUncheckedUpdateManyWithoutDeviceNestedInput
    hub_temperature_event?: hub_temperature_eventUncheckedUpdateManyWithoutDeviceNestedInput
    lock_event?: lock_eventUncheckedUpdateManyWithoutDeviceNestedInput
    sensor?: sensorUncheckedUpdateManyWithoutDeviceNestedInput
    tire_pressure_event?: tire_pressure_eventUncheckedUpdateManyWithoutDeviceNestedInput
  }

  export type truckUpsertWithoutDevice_status_eventInput = {
    update: XOR<truckUpdateWithoutDevice_status_eventInput, truckUncheckedUpdateWithoutDevice_status_eventInput>
    create: XOR<truckCreateWithoutDevice_status_eventInput, truckUncheckedCreateWithoutDevice_status_eventInput>
    where?: truckWhereInput
  }

  export type truckUpdateToOneWithWhereWithoutDevice_status_eventInput = {
    where?: truckWhereInput
    data: XOR<truckUpdateWithoutDevice_status_eventInput, truckUncheckedUpdateWithoutDevice_status_eventInput>
  }

  export type truckUpdateWithoutDevice_status_eventInput = {
    id?: StringFieldUpdateOperationsInput | string
    plate_number?: StringFieldUpdateOperationsInput | string
    vin?: NullableStringFieldUpdateOperationsInput | string | null
    name?: NullableStringFieldUpdateOperationsInput | string | null
    model?: NullableStringFieldUpdateOperationsInput | string | null
    year?: NullableIntFieldUpdateOperationsInput | number | null
    tire_config?: NullableStringFieldUpdateOperationsInput | string | null
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    created_by?: NullableStringFieldUpdateOperationsInput | string | null
    updated_by?: NullableStringFieldUpdateOperationsInput | string | null
    alert_event?: alert_eventUpdateManyWithoutTruckNestedInput
    daily_route?: daily_routeUpdateManyWithoutTruckNestedInput
    device?: deviceUpdateManyWithoutTruckNestedInput
    device_truck_assignment?: device_truck_assignmentUpdateManyWithoutTruckNestedInput
    fuel_level_event?: fuel_level_eventUpdateManyWithoutTruckNestedInput
    gps_position?: gps_positionUpdateManyWithoutTruckNestedInput
    hub_temperature_event?: hub_temperature_eventUpdateManyWithoutTruckNestedInput
    lock_event?: lock_eventUpdateManyWithoutTruckNestedInput
    sensor_data_raw?: sensor_data_rawUpdateManyWithoutTruckNestedInput
    speed_event?: speed_eventUpdateManyWithoutTruckNestedInput
    tire_position_config?: tire_position_configUpdateManyWithoutTruckNestedInput
    tire_pressure_event?: tire_pressure_eventUpdateManyWithoutTruckNestedInput
    trip?: tripUpdateManyWithoutTruckNestedInput
    fleet_group?: fleet_groupUpdateOneWithoutTruckNestedInput
    truck_status_event?: truck_status_eventUpdateManyWithoutTruckNestedInput
  }

  export type truckUncheckedUpdateWithoutDevice_status_eventInput = {
    id?: StringFieldUpdateOperationsInput | string
    plate_number?: StringFieldUpdateOperationsInput | string
    vin?: NullableStringFieldUpdateOperationsInput | string | null
    name?: NullableStringFieldUpdateOperationsInput | string | null
    model?: NullableStringFieldUpdateOperationsInput | string | null
    year?: NullableIntFieldUpdateOperationsInput | number | null
    tire_config?: NullableStringFieldUpdateOperationsInput | string | null
    fleet_group_id?: NullableStringFieldUpdateOperationsInput | string | null
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    created_by?: NullableStringFieldUpdateOperationsInput | string | null
    updated_by?: NullableStringFieldUpdateOperationsInput | string | null
    alert_event?: alert_eventUncheckedUpdateManyWithoutTruckNestedInput
    daily_route?: daily_routeUncheckedUpdateManyWithoutTruckNestedInput
    device?: deviceUncheckedUpdateManyWithoutTruckNestedInput
    device_truck_assignment?: device_truck_assignmentUncheckedUpdateManyWithoutTruckNestedInput
    fuel_level_event?: fuel_level_eventUncheckedUpdateManyWithoutTruckNestedInput
    gps_position?: gps_positionUncheckedUpdateManyWithoutTruckNestedInput
    hub_temperature_event?: hub_temperature_eventUncheckedUpdateManyWithoutTruckNestedInput
    lock_event?: lock_eventUncheckedUpdateManyWithoutTruckNestedInput
    sensor_data_raw?: sensor_data_rawUncheckedUpdateManyWithoutTruckNestedInput
    speed_event?: speed_eventUncheckedUpdateManyWithoutTruckNestedInput
    tire_position_config?: tire_position_configUncheckedUpdateManyWithoutTruckNestedInput
    tire_pressure_event?: tire_pressure_eventUncheckedUpdateManyWithoutTruckNestedInput
    trip?: tripUncheckedUpdateManyWithoutTruckNestedInput
    truck_status_event?: truck_status_eventUncheckedUpdateManyWithoutTruckNestedInput
  }

  export type usersCreateWithoutDevice_truck_assignment_device_truck_assignment_assigned_byTousersInput = {
    id?: string
    username: string
    email?: string | null
    password_hash: string
    role?: string | null
    is_active?: boolean | null
    created_at?: Date | string | null
    updated_at?: Date | string | null
    device_truck_assignment_device_truck_assignment_removed_byTousers?: device_truck_assignmentCreateNestedManyWithoutUsers_device_truck_assignment_removed_byTousersInput
  }

  export type usersUncheckedCreateWithoutDevice_truck_assignment_device_truck_assignment_assigned_byTousersInput = {
    id?: string
    username: string
    email?: string | null
    password_hash: string
    role?: string | null
    is_active?: boolean | null
    created_at?: Date | string | null
    updated_at?: Date | string | null
    device_truck_assignment_device_truck_assignment_removed_byTousers?: device_truck_assignmentUncheckedCreateNestedManyWithoutUsers_device_truck_assignment_removed_byTousersInput
  }

  export type usersCreateOrConnectWithoutDevice_truck_assignment_device_truck_assignment_assigned_byTousersInput = {
    where: usersWhereUniqueInput
    create: XOR<usersCreateWithoutDevice_truck_assignment_device_truck_assignment_assigned_byTousersInput, usersUncheckedCreateWithoutDevice_truck_assignment_device_truck_assignment_assigned_byTousersInput>
  }

  export type deviceCreateWithoutDevice_truck_assignmentInput = {
    id?: string
    sn: string
    sim_number?: string | null
    installed_at?: Date | string
    removed_at?: Date | string | null
    created_by?: string | null
    updated_by?: string | null
    truck: truckCreateNestedOneWithoutDeviceInput
    device_status_event?: device_status_eventCreateNestedManyWithoutDeviceInput
    gps_position?: gps_positionCreateNestedManyWithoutDeviceInput
    hub_temperature_event?: hub_temperature_eventCreateNestedManyWithoutDeviceInput
    lock_event?: lock_eventCreateNestedManyWithoutDeviceInput
    sensor?: sensorCreateNestedManyWithoutDeviceInput
    tire_pressure_event?: tire_pressure_eventCreateNestedManyWithoutDeviceInput
  }

  export type deviceUncheckedCreateWithoutDevice_truck_assignmentInput = {
    id?: string
    truck_id: string
    sn: string
    sim_number?: string | null
    installed_at?: Date | string
    removed_at?: Date | string | null
    created_by?: string | null
    updated_by?: string | null
    device_status_event?: device_status_eventUncheckedCreateNestedManyWithoutDeviceInput
    gps_position?: gps_positionUncheckedCreateNestedManyWithoutDeviceInput
    hub_temperature_event?: hub_temperature_eventUncheckedCreateNestedManyWithoutDeviceInput
    lock_event?: lock_eventUncheckedCreateNestedManyWithoutDeviceInput
    sensor?: sensorUncheckedCreateNestedManyWithoutDeviceInput
    tire_pressure_event?: tire_pressure_eventUncheckedCreateNestedManyWithoutDeviceInput
  }

  export type deviceCreateOrConnectWithoutDevice_truck_assignmentInput = {
    where: deviceWhereUniqueInput
    create: XOR<deviceCreateWithoutDevice_truck_assignmentInput, deviceUncheckedCreateWithoutDevice_truck_assignmentInput>
  }

  export type usersCreateWithoutDevice_truck_assignment_device_truck_assignment_removed_byTousersInput = {
    id?: string
    username: string
    email?: string | null
    password_hash: string
    role?: string | null
    is_active?: boolean | null
    created_at?: Date | string | null
    updated_at?: Date | string | null
    device_truck_assignment_device_truck_assignment_assigned_byTousers?: device_truck_assignmentCreateNestedManyWithoutUsers_device_truck_assignment_assigned_byTousersInput
  }

  export type usersUncheckedCreateWithoutDevice_truck_assignment_device_truck_assignment_removed_byTousersInput = {
    id?: string
    username: string
    email?: string | null
    password_hash: string
    role?: string | null
    is_active?: boolean | null
    created_at?: Date | string | null
    updated_at?: Date | string | null
    device_truck_assignment_device_truck_assignment_assigned_byTousers?: device_truck_assignmentUncheckedCreateNestedManyWithoutUsers_device_truck_assignment_assigned_byTousersInput
  }

  export type usersCreateOrConnectWithoutDevice_truck_assignment_device_truck_assignment_removed_byTousersInput = {
    where: usersWhereUniqueInput
    create: XOR<usersCreateWithoutDevice_truck_assignment_device_truck_assignment_removed_byTousersInput, usersUncheckedCreateWithoutDevice_truck_assignment_device_truck_assignment_removed_byTousersInput>
  }

  export type truckCreateWithoutDevice_truck_assignmentInput = {
    id?: string
    plate_number: string
    vin?: string | null
    name?: string | null
    model?: string | null
    year?: number | null
    tire_config?: string | null
    created_at?: Date | string
    created_by?: string | null
    updated_by?: string | null
    alert_event?: alert_eventCreateNestedManyWithoutTruckInput
    daily_route?: daily_routeCreateNestedManyWithoutTruckInput
    device?: deviceCreateNestedManyWithoutTruckInput
    device_status_event?: device_status_eventCreateNestedManyWithoutTruckInput
    fuel_level_event?: fuel_level_eventCreateNestedManyWithoutTruckInput
    gps_position?: gps_positionCreateNestedManyWithoutTruckInput
    hub_temperature_event?: hub_temperature_eventCreateNestedManyWithoutTruckInput
    lock_event?: lock_eventCreateNestedManyWithoutTruckInput
    sensor_data_raw?: sensor_data_rawCreateNestedManyWithoutTruckInput
    speed_event?: speed_eventCreateNestedManyWithoutTruckInput
    tire_position_config?: tire_position_configCreateNestedManyWithoutTruckInput
    tire_pressure_event?: tire_pressure_eventCreateNestedManyWithoutTruckInput
    trip?: tripCreateNestedManyWithoutTruckInput
    fleet_group?: fleet_groupCreateNestedOneWithoutTruckInput
    truck_status_event?: truck_status_eventCreateNestedManyWithoutTruckInput
  }

  export type truckUncheckedCreateWithoutDevice_truck_assignmentInput = {
    id?: string
    plate_number: string
    vin?: string | null
    name?: string | null
    model?: string | null
    year?: number | null
    tire_config?: string | null
    fleet_group_id?: string | null
    created_at?: Date | string
    created_by?: string | null
    updated_by?: string | null
    alert_event?: alert_eventUncheckedCreateNestedManyWithoutTruckInput
    daily_route?: daily_routeUncheckedCreateNestedManyWithoutTruckInput
    device?: deviceUncheckedCreateNestedManyWithoutTruckInput
    device_status_event?: device_status_eventUncheckedCreateNestedManyWithoutTruckInput
    fuel_level_event?: fuel_level_eventUncheckedCreateNestedManyWithoutTruckInput
    gps_position?: gps_positionUncheckedCreateNestedManyWithoutTruckInput
    hub_temperature_event?: hub_temperature_eventUncheckedCreateNestedManyWithoutTruckInput
    lock_event?: lock_eventUncheckedCreateNestedManyWithoutTruckInput
    sensor_data_raw?: sensor_data_rawUncheckedCreateNestedManyWithoutTruckInput
    speed_event?: speed_eventUncheckedCreateNestedManyWithoutTruckInput
    tire_position_config?: tire_position_configUncheckedCreateNestedManyWithoutTruckInput
    tire_pressure_event?: tire_pressure_eventUncheckedCreateNestedManyWithoutTruckInput
    trip?: tripUncheckedCreateNestedManyWithoutTruckInput
    truck_status_event?: truck_status_eventUncheckedCreateNestedManyWithoutTruckInput
  }

  export type truckCreateOrConnectWithoutDevice_truck_assignmentInput = {
    where: truckWhereUniqueInput
    create: XOR<truckCreateWithoutDevice_truck_assignmentInput, truckUncheckedCreateWithoutDevice_truck_assignmentInput>
  }

  export type usersUpsertWithoutDevice_truck_assignment_device_truck_assignment_assigned_byTousersInput = {
    update: XOR<usersUpdateWithoutDevice_truck_assignment_device_truck_assignment_assigned_byTousersInput, usersUncheckedUpdateWithoutDevice_truck_assignment_device_truck_assignment_assigned_byTousersInput>
    create: XOR<usersCreateWithoutDevice_truck_assignment_device_truck_assignment_assigned_byTousersInput, usersUncheckedCreateWithoutDevice_truck_assignment_device_truck_assignment_assigned_byTousersInput>
    where?: usersWhereInput
  }

  export type usersUpdateToOneWithWhereWithoutDevice_truck_assignment_device_truck_assignment_assigned_byTousersInput = {
    where?: usersWhereInput
    data: XOR<usersUpdateWithoutDevice_truck_assignment_device_truck_assignment_assigned_byTousersInput, usersUncheckedUpdateWithoutDevice_truck_assignment_device_truck_assignment_assigned_byTousersInput>
  }

  export type usersUpdateWithoutDevice_truck_assignment_device_truck_assignment_assigned_byTousersInput = {
    id?: StringFieldUpdateOperationsInput | string
    username?: StringFieldUpdateOperationsInput | string
    email?: NullableStringFieldUpdateOperationsInput | string | null
    password_hash?: StringFieldUpdateOperationsInput | string
    role?: NullableStringFieldUpdateOperationsInput | string | null
    is_active?: NullableBoolFieldUpdateOperationsInput | boolean | null
    created_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updated_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    device_truck_assignment_device_truck_assignment_removed_byTousers?: device_truck_assignmentUpdateManyWithoutUsers_device_truck_assignment_removed_byTousersNestedInput
  }

  export type usersUncheckedUpdateWithoutDevice_truck_assignment_device_truck_assignment_assigned_byTousersInput = {
    id?: StringFieldUpdateOperationsInput | string
    username?: StringFieldUpdateOperationsInput | string
    email?: NullableStringFieldUpdateOperationsInput | string | null
    password_hash?: StringFieldUpdateOperationsInput | string
    role?: NullableStringFieldUpdateOperationsInput | string | null
    is_active?: NullableBoolFieldUpdateOperationsInput | boolean | null
    created_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updated_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    device_truck_assignment_device_truck_assignment_removed_byTousers?: device_truck_assignmentUncheckedUpdateManyWithoutUsers_device_truck_assignment_removed_byTousersNestedInput
  }

  export type deviceUpsertWithoutDevice_truck_assignmentInput = {
    update: XOR<deviceUpdateWithoutDevice_truck_assignmentInput, deviceUncheckedUpdateWithoutDevice_truck_assignmentInput>
    create: XOR<deviceCreateWithoutDevice_truck_assignmentInput, deviceUncheckedCreateWithoutDevice_truck_assignmentInput>
    where?: deviceWhereInput
  }

  export type deviceUpdateToOneWithWhereWithoutDevice_truck_assignmentInput = {
    where?: deviceWhereInput
    data: XOR<deviceUpdateWithoutDevice_truck_assignmentInput, deviceUncheckedUpdateWithoutDevice_truck_assignmentInput>
  }

  export type deviceUpdateWithoutDevice_truck_assignmentInput = {
    id?: StringFieldUpdateOperationsInput | string
    sn?: StringFieldUpdateOperationsInput | string
    sim_number?: NullableStringFieldUpdateOperationsInput | string | null
    installed_at?: DateTimeFieldUpdateOperationsInput | Date | string
    removed_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    created_by?: NullableStringFieldUpdateOperationsInput | string | null
    updated_by?: NullableStringFieldUpdateOperationsInput | string | null
    truck?: truckUpdateOneRequiredWithoutDeviceNestedInput
    device_status_event?: device_status_eventUpdateManyWithoutDeviceNestedInput
    gps_position?: gps_positionUpdateManyWithoutDeviceNestedInput
    hub_temperature_event?: hub_temperature_eventUpdateManyWithoutDeviceNestedInput
    lock_event?: lock_eventUpdateManyWithoutDeviceNestedInput
    sensor?: sensorUpdateManyWithoutDeviceNestedInput
    tire_pressure_event?: tire_pressure_eventUpdateManyWithoutDeviceNestedInput
  }

  export type deviceUncheckedUpdateWithoutDevice_truck_assignmentInput = {
    id?: StringFieldUpdateOperationsInput | string
    truck_id?: StringFieldUpdateOperationsInput | string
    sn?: StringFieldUpdateOperationsInput | string
    sim_number?: NullableStringFieldUpdateOperationsInput | string | null
    installed_at?: DateTimeFieldUpdateOperationsInput | Date | string
    removed_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    created_by?: NullableStringFieldUpdateOperationsInput | string | null
    updated_by?: NullableStringFieldUpdateOperationsInput | string | null
    device_status_event?: device_status_eventUncheckedUpdateManyWithoutDeviceNestedInput
    gps_position?: gps_positionUncheckedUpdateManyWithoutDeviceNestedInput
    hub_temperature_event?: hub_temperature_eventUncheckedUpdateManyWithoutDeviceNestedInput
    lock_event?: lock_eventUncheckedUpdateManyWithoutDeviceNestedInput
    sensor?: sensorUncheckedUpdateManyWithoutDeviceNestedInput
    tire_pressure_event?: tire_pressure_eventUncheckedUpdateManyWithoutDeviceNestedInput
  }

  export type usersUpsertWithoutDevice_truck_assignment_device_truck_assignment_removed_byTousersInput = {
    update: XOR<usersUpdateWithoutDevice_truck_assignment_device_truck_assignment_removed_byTousersInput, usersUncheckedUpdateWithoutDevice_truck_assignment_device_truck_assignment_removed_byTousersInput>
    create: XOR<usersCreateWithoutDevice_truck_assignment_device_truck_assignment_removed_byTousersInput, usersUncheckedCreateWithoutDevice_truck_assignment_device_truck_assignment_removed_byTousersInput>
    where?: usersWhereInput
  }

  export type usersUpdateToOneWithWhereWithoutDevice_truck_assignment_device_truck_assignment_removed_byTousersInput = {
    where?: usersWhereInput
    data: XOR<usersUpdateWithoutDevice_truck_assignment_device_truck_assignment_removed_byTousersInput, usersUncheckedUpdateWithoutDevice_truck_assignment_device_truck_assignment_removed_byTousersInput>
  }

  export type usersUpdateWithoutDevice_truck_assignment_device_truck_assignment_removed_byTousersInput = {
    id?: StringFieldUpdateOperationsInput | string
    username?: StringFieldUpdateOperationsInput | string
    email?: NullableStringFieldUpdateOperationsInput | string | null
    password_hash?: StringFieldUpdateOperationsInput | string
    role?: NullableStringFieldUpdateOperationsInput | string | null
    is_active?: NullableBoolFieldUpdateOperationsInput | boolean | null
    created_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updated_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    device_truck_assignment_device_truck_assignment_assigned_byTousers?: device_truck_assignmentUpdateManyWithoutUsers_device_truck_assignment_assigned_byTousersNestedInput
  }

  export type usersUncheckedUpdateWithoutDevice_truck_assignment_device_truck_assignment_removed_byTousersInput = {
    id?: StringFieldUpdateOperationsInput | string
    username?: StringFieldUpdateOperationsInput | string
    email?: NullableStringFieldUpdateOperationsInput | string | null
    password_hash?: StringFieldUpdateOperationsInput | string
    role?: NullableStringFieldUpdateOperationsInput | string | null
    is_active?: NullableBoolFieldUpdateOperationsInput | boolean | null
    created_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updated_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    device_truck_assignment_device_truck_assignment_assigned_byTousers?: device_truck_assignmentUncheckedUpdateManyWithoutUsers_device_truck_assignment_assigned_byTousersNestedInput
  }

  export type truckUpsertWithoutDevice_truck_assignmentInput = {
    update: XOR<truckUpdateWithoutDevice_truck_assignmentInput, truckUncheckedUpdateWithoutDevice_truck_assignmentInput>
    create: XOR<truckCreateWithoutDevice_truck_assignmentInput, truckUncheckedCreateWithoutDevice_truck_assignmentInput>
    where?: truckWhereInput
  }

  export type truckUpdateToOneWithWhereWithoutDevice_truck_assignmentInput = {
    where?: truckWhereInput
    data: XOR<truckUpdateWithoutDevice_truck_assignmentInput, truckUncheckedUpdateWithoutDevice_truck_assignmentInput>
  }

  export type truckUpdateWithoutDevice_truck_assignmentInput = {
    id?: StringFieldUpdateOperationsInput | string
    plate_number?: StringFieldUpdateOperationsInput | string
    vin?: NullableStringFieldUpdateOperationsInput | string | null
    name?: NullableStringFieldUpdateOperationsInput | string | null
    model?: NullableStringFieldUpdateOperationsInput | string | null
    year?: NullableIntFieldUpdateOperationsInput | number | null
    tire_config?: NullableStringFieldUpdateOperationsInput | string | null
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    created_by?: NullableStringFieldUpdateOperationsInput | string | null
    updated_by?: NullableStringFieldUpdateOperationsInput | string | null
    alert_event?: alert_eventUpdateManyWithoutTruckNestedInput
    daily_route?: daily_routeUpdateManyWithoutTruckNestedInput
    device?: deviceUpdateManyWithoutTruckNestedInput
    device_status_event?: device_status_eventUpdateManyWithoutTruckNestedInput
    fuel_level_event?: fuel_level_eventUpdateManyWithoutTruckNestedInput
    gps_position?: gps_positionUpdateManyWithoutTruckNestedInput
    hub_temperature_event?: hub_temperature_eventUpdateManyWithoutTruckNestedInput
    lock_event?: lock_eventUpdateManyWithoutTruckNestedInput
    sensor_data_raw?: sensor_data_rawUpdateManyWithoutTruckNestedInput
    speed_event?: speed_eventUpdateManyWithoutTruckNestedInput
    tire_position_config?: tire_position_configUpdateManyWithoutTruckNestedInput
    tire_pressure_event?: tire_pressure_eventUpdateManyWithoutTruckNestedInput
    trip?: tripUpdateManyWithoutTruckNestedInput
    fleet_group?: fleet_groupUpdateOneWithoutTruckNestedInput
    truck_status_event?: truck_status_eventUpdateManyWithoutTruckNestedInput
  }

  export type truckUncheckedUpdateWithoutDevice_truck_assignmentInput = {
    id?: StringFieldUpdateOperationsInput | string
    plate_number?: StringFieldUpdateOperationsInput | string
    vin?: NullableStringFieldUpdateOperationsInput | string | null
    name?: NullableStringFieldUpdateOperationsInput | string | null
    model?: NullableStringFieldUpdateOperationsInput | string | null
    year?: NullableIntFieldUpdateOperationsInput | number | null
    tire_config?: NullableStringFieldUpdateOperationsInput | string | null
    fleet_group_id?: NullableStringFieldUpdateOperationsInput | string | null
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    created_by?: NullableStringFieldUpdateOperationsInput | string | null
    updated_by?: NullableStringFieldUpdateOperationsInput | string | null
    alert_event?: alert_eventUncheckedUpdateManyWithoutTruckNestedInput
    daily_route?: daily_routeUncheckedUpdateManyWithoutTruckNestedInput
    device?: deviceUncheckedUpdateManyWithoutTruckNestedInput
    device_status_event?: device_status_eventUncheckedUpdateManyWithoutTruckNestedInput
    fuel_level_event?: fuel_level_eventUncheckedUpdateManyWithoutTruckNestedInput
    gps_position?: gps_positionUncheckedUpdateManyWithoutTruckNestedInput
    hub_temperature_event?: hub_temperature_eventUncheckedUpdateManyWithoutTruckNestedInput
    lock_event?: lock_eventUncheckedUpdateManyWithoutTruckNestedInput
    sensor_data_raw?: sensor_data_rawUncheckedUpdateManyWithoutTruckNestedInput
    speed_event?: speed_eventUncheckedUpdateManyWithoutTruckNestedInput
    tire_position_config?: tire_position_configUncheckedUpdateManyWithoutTruckNestedInput
    tire_pressure_event?: tire_pressure_eventUncheckedUpdateManyWithoutTruckNestedInput
    trip?: tripUncheckedUpdateManyWithoutTruckNestedInput
    truck_status_event?: truck_status_eventUncheckedUpdateManyWithoutTruckNestedInput
  }

  export type truckCreateWithoutFleet_groupInput = {
    id?: string
    plate_number: string
    vin?: string | null
    name?: string | null
    model?: string | null
    year?: number | null
    tire_config?: string | null
    created_at?: Date | string
    created_by?: string | null
    updated_by?: string | null
    alert_event?: alert_eventCreateNestedManyWithoutTruckInput
    daily_route?: daily_routeCreateNestedManyWithoutTruckInput
    device?: deviceCreateNestedManyWithoutTruckInput
    device_status_event?: device_status_eventCreateNestedManyWithoutTruckInput
    device_truck_assignment?: device_truck_assignmentCreateNestedManyWithoutTruckInput
    fuel_level_event?: fuel_level_eventCreateNestedManyWithoutTruckInput
    gps_position?: gps_positionCreateNestedManyWithoutTruckInput
    hub_temperature_event?: hub_temperature_eventCreateNestedManyWithoutTruckInput
    lock_event?: lock_eventCreateNestedManyWithoutTruckInput
    sensor_data_raw?: sensor_data_rawCreateNestedManyWithoutTruckInput
    speed_event?: speed_eventCreateNestedManyWithoutTruckInput
    tire_position_config?: tire_position_configCreateNestedManyWithoutTruckInput
    tire_pressure_event?: tire_pressure_eventCreateNestedManyWithoutTruckInput
    trip?: tripCreateNestedManyWithoutTruckInput
    truck_status_event?: truck_status_eventCreateNestedManyWithoutTruckInput
  }

  export type truckUncheckedCreateWithoutFleet_groupInput = {
    id?: string
    plate_number: string
    vin?: string | null
    name?: string | null
    model?: string | null
    year?: number | null
    tire_config?: string | null
    created_at?: Date | string
    created_by?: string | null
    updated_by?: string | null
    alert_event?: alert_eventUncheckedCreateNestedManyWithoutTruckInput
    daily_route?: daily_routeUncheckedCreateNestedManyWithoutTruckInput
    device?: deviceUncheckedCreateNestedManyWithoutTruckInput
    device_status_event?: device_status_eventUncheckedCreateNestedManyWithoutTruckInput
    device_truck_assignment?: device_truck_assignmentUncheckedCreateNestedManyWithoutTruckInput
    fuel_level_event?: fuel_level_eventUncheckedCreateNestedManyWithoutTruckInput
    gps_position?: gps_positionUncheckedCreateNestedManyWithoutTruckInput
    hub_temperature_event?: hub_temperature_eventUncheckedCreateNestedManyWithoutTruckInput
    lock_event?: lock_eventUncheckedCreateNestedManyWithoutTruckInput
    sensor_data_raw?: sensor_data_rawUncheckedCreateNestedManyWithoutTruckInput
    speed_event?: speed_eventUncheckedCreateNestedManyWithoutTruckInput
    tire_position_config?: tire_position_configUncheckedCreateNestedManyWithoutTruckInput
    tire_pressure_event?: tire_pressure_eventUncheckedCreateNestedManyWithoutTruckInput
    trip?: tripUncheckedCreateNestedManyWithoutTruckInput
    truck_status_event?: truck_status_eventUncheckedCreateNestedManyWithoutTruckInput
  }

  export type truckCreateOrConnectWithoutFleet_groupInput = {
    where: truckWhereUniqueInput
    create: XOR<truckCreateWithoutFleet_groupInput, truckUncheckedCreateWithoutFleet_groupInput>
  }

  export type truckCreateManyFleet_groupInputEnvelope = {
    data: truckCreateManyFleet_groupInput | truckCreateManyFleet_groupInput[]
    skipDuplicates?: boolean
  }

  export type truckUpsertWithWhereUniqueWithoutFleet_groupInput = {
    where: truckWhereUniqueInput
    update: XOR<truckUpdateWithoutFleet_groupInput, truckUncheckedUpdateWithoutFleet_groupInput>
    create: XOR<truckCreateWithoutFleet_groupInput, truckUncheckedCreateWithoutFleet_groupInput>
  }

  export type truckUpdateWithWhereUniqueWithoutFleet_groupInput = {
    where: truckWhereUniqueInput
    data: XOR<truckUpdateWithoutFleet_groupInput, truckUncheckedUpdateWithoutFleet_groupInput>
  }

  export type truckUpdateManyWithWhereWithoutFleet_groupInput = {
    where: truckScalarWhereInput
    data: XOR<truckUpdateManyMutationInput, truckUncheckedUpdateManyWithoutFleet_groupInput>
  }

  export type truckScalarWhereInput = {
    AND?: truckScalarWhereInput | truckScalarWhereInput[]
    OR?: truckScalarWhereInput[]
    NOT?: truckScalarWhereInput | truckScalarWhereInput[]
    id?: UuidFilter<"truck"> | string
    plate_number?: StringFilter<"truck"> | string
    vin?: StringNullableFilter<"truck"> | string | null
    name?: StringNullableFilter<"truck"> | string | null
    model?: StringNullableFilter<"truck"> | string | null
    year?: IntNullableFilter<"truck"> | number | null
    tire_config?: StringNullableFilter<"truck"> | string | null
    fleet_group_id?: UuidNullableFilter<"truck"> | string | null
    created_at?: DateTimeFilter<"truck"> | Date | string
    created_by?: UuidNullableFilter<"truck"> | string | null
    updated_by?: UuidNullableFilter<"truck"> | string | null
  }

  export type truckCreateWithoutFuel_level_eventInput = {
    id?: string
    plate_number: string
    vin?: string | null
    name?: string | null
    model?: string | null
    year?: number | null
    tire_config?: string | null
    created_at?: Date | string
    created_by?: string | null
    updated_by?: string | null
    alert_event?: alert_eventCreateNestedManyWithoutTruckInput
    daily_route?: daily_routeCreateNestedManyWithoutTruckInput
    device?: deviceCreateNestedManyWithoutTruckInput
    device_status_event?: device_status_eventCreateNestedManyWithoutTruckInput
    device_truck_assignment?: device_truck_assignmentCreateNestedManyWithoutTruckInput
    gps_position?: gps_positionCreateNestedManyWithoutTruckInput
    hub_temperature_event?: hub_temperature_eventCreateNestedManyWithoutTruckInput
    lock_event?: lock_eventCreateNestedManyWithoutTruckInput
    sensor_data_raw?: sensor_data_rawCreateNestedManyWithoutTruckInput
    speed_event?: speed_eventCreateNestedManyWithoutTruckInput
    tire_position_config?: tire_position_configCreateNestedManyWithoutTruckInput
    tire_pressure_event?: tire_pressure_eventCreateNestedManyWithoutTruckInput
    trip?: tripCreateNestedManyWithoutTruckInput
    fleet_group?: fleet_groupCreateNestedOneWithoutTruckInput
    truck_status_event?: truck_status_eventCreateNestedManyWithoutTruckInput
  }

  export type truckUncheckedCreateWithoutFuel_level_eventInput = {
    id?: string
    plate_number: string
    vin?: string | null
    name?: string | null
    model?: string | null
    year?: number | null
    tire_config?: string | null
    fleet_group_id?: string | null
    created_at?: Date | string
    created_by?: string | null
    updated_by?: string | null
    alert_event?: alert_eventUncheckedCreateNestedManyWithoutTruckInput
    daily_route?: daily_routeUncheckedCreateNestedManyWithoutTruckInput
    device?: deviceUncheckedCreateNestedManyWithoutTruckInput
    device_status_event?: device_status_eventUncheckedCreateNestedManyWithoutTruckInput
    device_truck_assignment?: device_truck_assignmentUncheckedCreateNestedManyWithoutTruckInput
    gps_position?: gps_positionUncheckedCreateNestedManyWithoutTruckInput
    hub_temperature_event?: hub_temperature_eventUncheckedCreateNestedManyWithoutTruckInput
    lock_event?: lock_eventUncheckedCreateNestedManyWithoutTruckInput
    sensor_data_raw?: sensor_data_rawUncheckedCreateNestedManyWithoutTruckInput
    speed_event?: speed_eventUncheckedCreateNestedManyWithoutTruckInput
    tire_position_config?: tire_position_configUncheckedCreateNestedManyWithoutTruckInput
    tire_pressure_event?: tire_pressure_eventUncheckedCreateNestedManyWithoutTruckInput
    trip?: tripUncheckedCreateNestedManyWithoutTruckInput
    truck_status_event?: truck_status_eventUncheckedCreateNestedManyWithoutTruckInput
  }

  export type truckCreateOrConnectWithoutFuel_level_eventInput = {
    where: truckWhereUniqueInput
    create: XOR<truckCreateWithoutFuel_level_eventInput, truckUncheckedCreateWithoutFuel_level_eventInput>
  }

  export type truckUpsertWithoutFuel_level_eventInput = {
    update: XOR<truckUpdateWithoutFuel_level_eventInput, truckUncheckedUpdateWithoutFuel_level_eventInput>
    create: XOR<truckCreateWithoutFuel_level_eventInput, truckUncheckedCreateWithoutFuel_level_eventInput>
    where?: truckWhereInput
  }

  export type truckUpdateToOneWithWhereWithoutFuel_level_eventInput = {
    where?: truckWhereInput
    data: XOR<truckUpdateWithoutFuel_level_eventInput, truckUncheckedUpdateWithoutFuel_level_eventInput>
  }

  export type truckUpdateWithoutFuel_level_eventInput = {
    id?: StringFieldUpdateOperationsInput | string
    plate_number?: StringFieldUpdateOperationsInput | string
    vin?: NullableStringFieldUpdateOperationsInput | string | null
    name?: NullableStringFieldUpdateOperationsInput | string | null
    model?: NullableStringFieldUpdateOperationsInput | string | null
    year?: NullableIntFieldUpdateOperationsInput | number | null
    tire_config?: NullableStringFieldUpdateOperationsInput | string | null
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    created_by?: NullableStringFieldUpdateOperationsInput | string | null
    updated_by?: NullableStringFieldUpdateOperationsInput | string | null
    alert_event?: alert_eventUpdateManyWithoutTruckNestedInput
    daily_route?: daily_routeUpdateManyWithoutTruckNestedInput
    device?: deviceUpdateManyWithoutTruckNestedInput
    device_status_event?: device_status_eventUpdateManyWithoutTruckNestedInput
    device_truck_assignment?: device_truck_assignmentUpdateManyWithoutTruckNestedInput
    gps_position?: gps_positionUpdateManyWithoutTruckNestedInput
    hub_temperature_event?: hub_temperature_eventUpdateManyWithoutTruckNestedInput
    lock_event?: lock_eventUpdateManyWithoutTruckNestedInput
    sensor_data_raw?: sensor_data_rawUpdateManyWithoutTruckNestedInput
    speed_event?: speed_eventUpdateManyWithoutTruckNestedInput
    tire_position_config?: tire_position_configUpdateManyWithoutTruckNestedInput
    tire_pressure_event?: tire_pressure_eventUpdateManyWithoutTruckNestedInput
    trip?: tripUpdateManyWithoutTruckNestedInput
    fleet_group?: fleet_groupUpdateOneWithoutTruckNestedInput
    truck_status_event?: truck_status_eventUpdateManyWithoutTruckNestedInput
  }

  export type truckUncheckedUpdateWithoutFuel_level_eventInput = {
    id?: StringFieldUpdateOperationsInput | string
    plate_number?: StringFieldUpdateOperationsInput | string
    vin?: NullableStringFieldUpdateOperationsInput | string | null
    name?: NullableStringFieldUpdateOperationsInput | string | null
    model?: NullableStringFieldUpdateOperationsInput | string | null
    year?: NullableIntFieldUpdateOperationsInput | number | null
    tire_config?: NullableStringFieldUpdateOperationsInput | string | null
    fleet_group_id?: NullableStringFieldUpdateOperationsInput | string | null
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    created_by?: NullableStringFieldUpdateOperationsInput | string | null
    updated_by?: NullableStringFieldUpdateOperationsInput | string | null
    alert_event?: alert_eventUncheckedUpdateManyWithoutTruckNestedInput
    daily_route?: daily_routeUncheckedUpdateManyWithoutTruckNestedInput
    device?: deviceUncheckedUpdateManyWithoutTruckNestedInput
    device_status_event?: device_status_eventUncheckedUpdateManyWithoutTruckNestedInput
    device_truck_assignment?: device_truck_assignmentUncheckedUpdateManyWithoutTruckNestedInput
    gps_position?: gps_positionUncheckedUpdateManyWithoutTruckNestedInput
    hub_temperature_event?: hub_temperature_eventUncheckedUpdateManyWithoutTruckNestedInput
    lock_event?: lock_eventUncheckedUpdateManyWithoutTruckNestedInput
    sensor_data_raw?: sensor_data_rawUncheckedUpdateManyWithoutTruckNestedInput
    speed_event?: speed_eventUncheckedUpdateManyWithoutTruckNestedInput
    tire_position_config?: tire_position_configUncheckedUpdateManyWithoutTruckNestedInput
    tire_pressure_event?: tire_pressure_eventUncheckedUpdateManyWithoutTruckNestedInput
    trip?: tripUncheckedUpdateManyWithoutTruckNestedInput
    truck_status_event?: truck_status_eventUncheckedUpdateManyWithoutTruckNestedInput
  }

  export type deviceCreateWithoutGps_positionInput = {
    id?: string
    sn: string
    sim_number?: string | null
    installed_at?: Date | string
    removed_at?: Date | string | null
    created_by?: string | null
    updated_by?: string | null
    truck: truckCreateNestedOneWithoutDeviceInput
    device_status_event?: device_status_eventCreateNestedManyWithoutDeviceInput
    device_truck_assignment?: device_truck_assignmentCreateNestedManyWithoutDeviceInput
    hub_temperature_event?: hub_temperature_eventCreateNestedManyWithoutDeviceInput
    lock_event?: lock_eventCreateNestedManyWithoutDeviceInput
    sensor?: sensorCreateNestedManyWithoutDeviceInput
    tire_pressure_event?: tire_pressure_eventCreateNestedManyWithoutDeviceInput
  }

  export type deviceUncheckedCreateWithoutGps_positionInput = {
    id?: string
    truck_id: string
    sn: string
    sim_number?: string | null
    installed_at?: Date | string
    removed_at?: Date | string | null
    created_by?: string | null
    updated_by?: string | null
    device_status_event?: device_status_eventUncheckedCreateNestedManyWithoutDeviceInput
    device_truck_assignment?: device_truck_assignmentUncheckedCreateNestedManyWithoutDeviceInput
    hub_temperature_event?: hub_temperature_eventUncheckedCreateNestedManyWithoutDeviceInput
    lock_event?: lock_eventUncheckedCreateNestedManyWithoutDeviceInput
    sensor?: sensorUncheckedCreateNestedManyWithoutDeviceInput
    tire_pressure_event?: tire_pressure_eventUncheckedCreateNestedManyWithoutDeviceInput
  }

  export type deviceCreateOrConnectWithoutGps_positionInput = {
    where: deviceWhereUniqueInput
    create: XOR<deviceCreateWithoutGps_positionInput, deviceUncheckedCreateWithoutGps_positionInput>
  }

  export type deviceUpsertWithoutGps_positionInput = {
    update: XOR<deviceUpdateWithoutGps_positionInput, deviceUncheckedUpdateWithoutGps_positionInput>
    create: XOR<deviceCreateWithoutGps_positionInput, deviceUncheckedCreateWithoutGps_positionInput>
    where?: deviceWhereInput
  }

  export type deviceUpdateToOneWithWhereWithoutGps_positionInput = {
    where?: deviceWhereInput
    data: XOR<deviceUpdateWithoutGps_positionInput, deviceUncheckedUpdateWithoutGps_positionInput>
  }

  export type deviceUpdateWithoutGps_positionInput = {
    id?: StringFieldUpdateOperationsInput | string
    sn?: StringFieldUpdateOperationsInput | string
    sim_number?: NullableStringFieldUpdateOperationsInput | string | null
    installed_at?: DateTimeFieldUpdateOperationsInput | Date | string
    removed_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    created_by?: NullableStringFieldUpdateOperationsInput | string | null
    updated_by?: NullableStringFieldUpdateOperationsInput | string | null
    truck?: truckUpdateOneRequiredWithoutDeviceNestedInput
    device_status_event?: device_status_eventUpdateManyWithoutDeviceNestedInput
    device_truck_assignment?: device_truck_assignmentUpdateManyWithoutDeviceNestedInput
    hub_temperature_event?: hub_temperature_eventUpdateManyWithoutDeviceNestedInput
    lock_event?: lock_eventUpdateManyWithoutDeviceNestedInput
    sensor?: sensorUpdateManyWithoutDeviceNestedInput
    tire_pressure_event?: tire_pressure_eventUpdateManyWithoutDeviceNestedInput
  }

  export type deviceUncheckedUpdateWithoutGps_positionInput = {
    id?: StringFieldUpdateOperationsInput | string
    truck_id?: StringFieldUpdateOperationsInput | string
    sn?: StringFieldUpdateOperationsInput | string
    sim_number?: NullableStringFieldUpdateOperationsInput | string | null
    installed_at?: DateTimeFieldUpdateOperationsInput | Date | string
    removed_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    created_by?: NullableStringFieldUpdateOperationsInput | string | null
    updated_by?: NullableStringFieldUpdateOperationsInput | string | null
    device_status_event?: device_status_eventUncheckedUpdateManyWithoutDeviceNestedInput
    device_truck_assignment?: device_truck_assignmentUncheckedUpdateManyWithoutDeviceNestedInput
    hub_temperature_event?: hub_temperature_eventUncheckedUpdateManyWithoutDeviceNestedInput
    lock_event?: lock_eventUncheckedUpdateManyWithoutDeviceNestedInput
    sensor?: sensorUncheckedUpdateManyWithoutDeviceNestedInput
    tire_pressure_event?: tire_pressure_eventUncheckedUpdateManyWithoutDeviceNestedInput
  }

  export type truckCreateWithoutGps_positionInput = {
    id?: string
    plate_number: string
    vin?: string | null
    name?: string | null
    model?: string | null
    year?: number | null
    tire_config?: string | null
    created_at?: Date | string
    created_by?: string | null
    updated_by?: string | null
    alert_event?: alert_eventCreateNestedManyWithoutTruckInput
    daily_route?: daily_routeCreateNestedManyWithoutTruckInput
    device?: deviceCreateNestedManyWithoutTruckInput
    device_status_event?: device_status_eventCreateNestedManyWithoutTruckInput
    device_truck_assignment?: device_truck_assignmentCreateNestedManyWithoutTruckInput
    fuel_level_event?: fuel_level_eventCreateNestedManyWithoutTruckInput
    hub_temperature_event?: hub_temperature_eventCreateNestedManyWithoutTruckInput
    lock_event?: lock_eventCreateNestedManyWithoutTruckInput
    sensor_data_raw?: sensor_data_rawCreateNestedManyWithoutTruckInput
    speed_event?: speed_eventCreateNestedManyWithoutTruckInput
    tire_position_config?: tire_position_configCreateNestedManyWithoutTruckInput
    tire_pressure_event?: tire_pressure_eventCreateNestedManyWithoutTruckInput
    trip?: tripCreateNestedManyWithoutTruckInput
    fleet_group?: fleet_groupCreateNestedOneWithoutTruckInput
    truck_status_event?: truck_status_eventCreateNestedManyWithoutTruckInput
  }

  export type truckUncheckedCreateWithoutGps_positionInput = {
    id?: string
    plate_number: string
    vin?: string | null
    name?: string | null
    model?: string | null
    year?: number | null
    tire_config?: string | null
    fleet_group_id?: string | null
    created_at?: Date | string
    created_by?: string | null
    updated_by?: string | null
    alert_event?: alert_eventUncheckedCreateNestedManyWithoutTruckInput
    daily_route?: daily_routeUncheckedCreateNestedManyWithoutTruckInput
    device?: deviceUncheckedCreateNestedManyWithoutTruckInput
    device_status_event?: device_status_eventUncheckedCreateNestedManyWithoutTruckInput
    device_truck_assignment?: device_truck_assignmentUncheckedCreateNestedManyWithoutTruckInput
    fuel_level_event?: fuel_level_eventUncheckedCreateNestedManyWithoutTruckInput
    hub_temperature_event?: hub_temperature_eventUncheckedCreateNestedManyWithoutTruckInput
    lock_event?: lock_eventUncheckedCreateNestedManyWithoutTruckInput
    sensor_data_raw?: sensor_data_rawUncheckedCreateNestedManyWithoutTruckInput
    speed_event?: speed_eventUncheckedCreateNestedManyWithoutTruckInput
    tire_position_config?: tire_position_configUncheckedCreateNestedManyWithoutTruckInput
    tire_pressure_event?: tire_pressure_eventUncheckedCreateNestedManyWithoutTruckInput
    trip?: tripUncheckedCreateNestedManyWithoutTruckInput
    truck_status_event?: truck_status_eventUncheckedCreateNestedManyWithoutTruckInput
  }

  export type truckCreateOrConnectWithoutGps_positionInput = {
    where: truckWhereUniqueInput
    create: XOR<truckCreateWithoutGps_positionInput, truckUncheckedCreateWithoutGps_positionInput>
  }

  export type truckUpsertWithoutGps_positionInput = {
    update: XOR<truckUpdateWithoutGps_positionInput, truckUncheckedUpdateWithoutGps_positionInput>
    create: XOR<truckCreateWithoutGps_positionInput, truckUncheckedCreateWithoutGps_positionInput>
    where?: truckWhereInput
  }

  export type truckUpdateToOneWithWhereWithoutGps_positionInput = {
    where?: truckWhereInput
    data: XOR<truckUpdateWithoutGps_positionInput, truckUncheckedUpdateWithoutGps_positionInput>
  }

  export type truckUpdateWithoutGps_positionInput = {
    id?: StringFieldUpdateOperationsInput | string
    plate_number?: StringFieldUpdateOperationsInput | string
    vin?: NullableStringFieldUpdateOperationsInput | string | null
    name?: NullableStringFieldUpdateOperationsInput | string | null
    model?: NullableStringFieldUpdateOperationsInput | string | null
    year?: NullableIntFieldUpdateOperationsInput | number | null
    tire_config?: NullableStringFieldUpdateOperationsInput | string | null
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    created_by?: NullableStringFieldUpdateOperationsInput | string | null
    updated_by?: NullableStringFieldUpdateOperationsInput | string | null
    alert_event?: alert_eventUpdateManyWithoutTruckNestedInput
    daily_route?: daily_routeUpdateManyWithoutTruckNestedInput
    device?: deviceUpdateManyWithoutTruckNestedInput
    device_status_event?: device_status_eventUpdateManyWithoutTruckNestedInput
    device_truck_assignment?: device_truck_assignmentUpdateManyWithoutTruckNestedInput
    fuel_level_event?: fuel_level_eventUpdateManyWithoutTruckNestedInput
    hub_temperature_event?: hub_temperature_eventUpdateManyWithoutTruckNestedInput
    lock_event?: lock_eventUpdateManyWithoutTruckNestedInput
    sensor_data_raw?: sensor_data_rawUpdateManyWithoutTruckNestedInput
    speed_event?: speed_eventUpdateManyWithoutTruckNestedInput
    tire_position_config?: tire_position_configUpdateManyWithoutTruckNestedInput
    tire_pressure_event?: tire_pressure_eventUpdateManyWithoutTruckNestedInput
    trip?: tripUpdateManyWithoutTruckNestedInput
    fleet_group?: fleet_groupUpdateOneWithoutTruckNestedInput
    truck_status_event?: truck_status_eventUpdateManyWithoutTruckNestedInput
  }

  export type truckUncheckedUpdateWithoutGps_positionInput = {
    id?: StringFieldUpdateOperationsInput | string
    plate_number?: StringFieldUpdateOperationsInput | string
    vin?: NullableStringFieldUpdateOperationsInput | string | null
    name?: NullableStringFieldUpdateOperationsInput | string | null
    model?: NullableStringFieldUpdateOperationsInput | string | null
    year?: NullableIntFieldUpdateOperationsInput | number | null
    tire_config?: NullableStringFieldUpdateOperationsInput | string | null
    fleet_group_id?: NullableStringFieldUpdateOperationsInput | string | null
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    created_by?: NullableStringFieldUpdateOperationsInput | string | null
    updated_by?: NullableStringFieldUpdateOperationsInput | string | null
    alert_event?: alert_eventUncheckedUpdateManyWithoutTruckNestedInput
    daily_route?: daily_routeUncheckedUpdateManyWithoutTruckNestedInput
    device?: deviceUncheckedUpdateManyWithoutTruckNestedInput
    device_status_event?: device_status_eventUncheckedUpdateManyWithoutTruckNestedInput
    device_truck_assignment?: device_truck_assignmentUncheckedUpdateManyWithoutTruckNestedInput
    fuel_level_event?: fuel_level_eventUncheckedUpdateManyWithoutTruckNestedInput
    hub_temperature_event?: hub_temperature_eventUncheckedUpdateManyWithoutTruckNestedInput
    lock_event?: lock_eventUncheckedUpdateManyWithoutTruckNestedInput
    sensor_data_raw?: sensor_data_rawUncheckedUpdateManyWithoutTruckNestedInput
    speed_event?: speed_eventUncheckedUpdateManyWithoutTruckNestedInput
    tire_position_config?: tire_position_configUncheckedUpdateManyWithoutTruckNestedInput
    tire_pressure_event?: tire_pressure_eventUncheckedUpdateManyWithoutTruckNestedInput
    trip?: tripUncheckedUpdateManyWithoutTruckNestedInput
    truck_status_event?: truck_status_eventUncheckedUpdateManyWithoutTruckNestedInput
  }

  export type deviceCreateWithoutHub_temperature_eventInput = {
    id?: string
    sn: string
    sim_number?: string | null
    installed_at?: Date | string
    removed_at?: Date | string | null
    created_by?: string | null
    updated_by?: string | null
    truck: truckCreateNestedOneWithoutDeviceInput
    device_status_event?: device_status_eventCreateNestedManyWithoutDeviceInput
    device_truck_assignment?: device_truck_assignmentCreateNestedManyWithoutDeviceInput
    gps_position?: gps_positionCreateNestedManyWithoutDeviceInput
    lock_event?: lock_eventCreateNestedManyWithoutDeviceInput
    sensor?: sensorCreateNestedManyWithoutDeviceInput
    tire_pressure_event?: tire_pressure_eventCreateNestedManyWithoutDeviceInput
  }

  export type deviceUncheckedCreateWithoutHub_temperature_eventInput = {
    id?: string
    truck_id: string
    sn: string
    sim_number?: string | null
    installed_at?: Date | string
    removed_at?: Date | string | null
    created_by?: string | null
    updated_by?: string | null
    device_status_event?: device_status_eventUncheckedCreateNestedManyWithoutDeviceInput
    device_truck_assignment?: device_truck_assignmentUncheckedCreateNestedManyWithoutDeviceInput
    gps_position?: gps_positionUncheckedCreateNestedManyWithoutDeviceInput
    lock_event?: lock_eventUncheckedCreateNestedManyWithoutDeviceInput
    sensor?: sensorUncheckedCreateNestedManyWithoutDeviceInput
    tire_pressure_event?: tire_pressure_eventUncheckedCreateNestedManyWithoutDeviceInput
  }

  export type deviceCreateOrConnectWithoutHub_temperature_eventInput = {
    where: deviceWhereUniqueInput
    create: XOR<deviceCreateWithoutHub_temperature_eventInput, deviceUncheckedCreateWithoutHub_temperature_eventInput>
  }

  export type truckCreateWithoutHub_temperature_eventInput = {
    id?: string
    plate_number: string
    vin?: string | null
    name?: string | null
    model?: string | null
    year?: number | null
    tire_config?: string | null
    created_at?: Date | string
    created_by?: string | null
    updated_by?: string | null
    alert_event?: alert_eventCreateNestedManyWithoutTruckInput
    daily_route?: daily_routeCreateNestedManyWithoutTruckInput
    device?: deviceCreateNestedManyWithoutTruckInput
    device_status_event?: device_status_eventCreateNestedManyWithoutTruckInput
    device_truck_assignment?: device_truck_assignmentCreateNestedManyWithoutTruckInput
    fuel_level_event?: fuel_level_eventCreateNestedManyWithoutTruckInput
    gps_position?: gps_positionCreateNestedManyWithoutTruckInput
    lock_event?: lock_eventCreateNestedManyWithoutTruckInput
    sensor_data_raw?: sensor_data_rawCreateNestedManyWithoutTruckInput
    speed_event?: speed_eventCreateNestedManyWithoutTruckInput
    tire_position_config?: tire_position_configCreateNestedManyWithoutTruckInput
    tire_pressure_event?: tire_pressure_eventCreateNestedManyWithoutTruckInput
    trip?: tripCreateNestedManyWithoutTruckInput
    fleet_group?: fleet_groupCreateNestedOneWithoutTruckInput
    truck_status_event?: truck_status_eventCreateNestedManyWithoutTruckInput
  }

  export type truckUncheckedCreateWithoutHub_temperature_eventInput = {
    id?: string
    plate_number: string
    vin?: string | null
    name?: string | null
    model?: string | null
    year?: number | null
    tire_config?: string | null
    fleet_group_id?: string | null
    created_at?: Date | string
    created_by?: string | null
    updated_by?: string | null
    alert_event?: alert_eventUncheckedCreateNestedManyWithoutTruckInput
    daily_route?: daily_routeUncheckedCreateNestedManyWithoutTruckInput
    device?: deviceUncheckedCreateNestedManyWithoutTruckInput
    device_status_event?: device_status_eventUncheckedCreateNestedManyWithoutTruckInput
    device_truck_assignment?: device_truck_assignmentUncheckedCreateNestedManyWithoutTruckInput
    fuel_level_event?: fuel_level_eventUncheckedCreateNestedManyWithoutTruckInput
    gps_position?: gps_positionUncheckedCreateNestedManyWithoutTruckInput
    lock_event?: lock_eventUncheckedCreateNestedManyWithoutTruckInput
    sensor_data_raw?: sensor_data_rawUncheckedCreateNestedManyWithoutTruckInput
    speed_event?: speed_eventUncheckedCreateNestedManyWithoutTruckInput
    tire_position_config?: tire_position_configUncheckedCreateNestedManyWithoutTruckInput
    tire_pressure_event?: tire_pressure_eventUncheckedCreateNestedManyWithoutTruckInput
    trip?: tripUncheckedCreateNestedManyWithoutTruckInput
    truck_status_event?: truck_status_eventUncheckedCreateNestedManyWithoutTruckInput
  }

  export type truckCreateOrConnectWithoutHub_temperature_eventInput = {
    where: truckWhereUniqueInput
    create: XOR<truckCreateWithoutHub_temperature_eventInput, truckUncheckedCreateWithoutHub_temperature_eventInput>
  }

  export type deviceUpsertWithoutHub_temperature_eventInput = {
    update: XOR<deviceUpdateWithoutHub_temperature_eventInput, deviceUncheckedUpdateWithoutHub_temperature_eventInput>
    create: XOR<deviceCreateWithoutHub_temperature_eventInput, deviceUncheckedCreateWithoutHub_temperature_eventInput>
    where?: deviceWhereInput
  }

  export type deviceUpdateToOneWithWhereWithoutHub_temperature_eventInput = {
    where?: deviceWhereInput
    data: XOR<deviceUpdateWithoutHub_temperature_eventInput, deviceUncheckedUpdateWithoutHub_temperature_eventInput>
  }

  export type deviceUpdateWithoutHub_temperature_eventInput = {
    id?: StringFieldUpdateOperationsInput | string
    sn?: StringFieldUpdateOperationsInput | string
    sim_number?: NullableStringFieldUpdateOperationsInput | string | null
    installed_at?: DateTimeFieldUpdateOperationsInput | Date | string
    removed_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    created_by?: NullableStringFieldUpdateOperationsInput | string | null
    updated_by?: NullableStringFieldUpdateOperationsInput | string | null
    truck?: truckUpdateOneRequiredWithoutDeviceNestedInput
    device_status_event?: device_status_eventUpdateManyWithoutDeviceNestedInput
    device_truck_assignment?: device_truck_assignmentUpdateManyWithoutDeviceNestedInput
    gps_position?: gps_positionUpdateManyWithoutDeviceNestedInput
    lock_event?: lock_eventUpdateManyWithoutDeviceNestedInput
    sensor?: sensorUpdateManyWithoutDeviceNestedInput
    tire_pressure_event?: tire_pressure_eventUpdateManyWithoutDeviceNestedInput
  }

  export type deviceUncheckedUpdateWithoutHub_temperature_eventInput = {
    id?: StringFieldUpdateOperationsInput | string
    truck_id?: StringFieldUpdateOperationsInput | string
    sn?: StringFieldUpdateOperationsInput | string
    sim_number?: NullableStringFieldUpdateOperationsInput | string | null
    installed_at?: DateTimeFieldUpdateOperationsInput | Date | string
    removed_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    created_by?: NullableStringFieldUpdateOperationsInput | string | null
    updated_by?: NullableStringFieldUpdateOperationsInput | string | null
    device_status_event?: device_status_eventUncheckedUpdateManyWithoutDeviceNestedInput
    device_truck_assignment?: device_truck_assignmentUncheckedUpdateManyWithoutDeviceNestedInput
    gps_position?: gps_positionUncheckedUpdateManyWithoutDeviceNestedInput
    lock_event?: lock_eventUncheckedUpdateManyWithoutDeviceNestedInput
    sensor?: sensorUncheckedUpdateManyWithoutDeviceNestedInput
    tire_pressure_event?: tire_pressure_eventUncheckedUpdateManyWithoutDeviceNestedInput
  }

  export type truckUpsertWithoutHub_temperature_eventInput = {
    update: XOR<truckUpdateWithoutHub_temperature_eventInput, truckUncheckedUpdateWithoutHub_temperature_eventInput>
    create: XOR<truckCreateWithoutHub_temperature_eventInput, truckUncheckedCreateWithoutHub_temperature_eventInput>
    where?: truckWhereInput
  }

  export type truckUpdateToOneWithWhereWithoutHub_temperature_eventInput = {
    where?: truckWhereInput
    data: XOR<truckUpdateWithoutHub_temperature_eventInput, truckUncheckedUpdateWithoutHub_temperature_eventInput>
  }

  export type truckUpdateWithoutHub_temperature_eventInput = {
    id?: StringFieldUpdateOperationsInput | string
    plate_number?: StringFieldUpdateOperationsInput | string
    vin?: NullableStringFieldUpdateOperationsInput | string | null
    name?: NullableStringFieldUpdateOperationsInput | string | null
    model?: NullableStringFieldUpdateOperationsInput | string | null
    year?: NullableIntFieldUpdateOperationsInput | number | null
    tire_config?: NullableStringFieldUpdateOperationsInput | string | null
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    created_by?: NullableStringFieldUpdateOperationsInput | string | null
    updated_by?: NullableStringFieldUpdateOperationsInput | string | null
    alert_event?: alert_eventUpdateManyWithoutTruckNestedInput
    daily_route?: daily_routeUpdateManyWithoutTruckNestedInput
    device?: deviceUpdateManyWithoutTruckNestedInput
    device_status_event?: device_status_eventUpdateManyWithoutTruckNestedInput
    device_truck_assignment?: device_truck_assignmentUpdateManyWithoutTruckNestedInput
    fuel_level_event?: fuel_level_eventUpdateManyWithoutTruckNestedInput
    gps_position?: gps_positionUpdateManyWithoutTruckNestedInput
    lock_event?: lock_eventUpdateManyWithoutTruckNestedInput
    sensor_data_raw?: sensor_data_rawUpdateManyWithoutTruckNestedInput
    speed_event?: speed_eventUpdateManyWithoutTruckNestedInput
    tire_position_config?: tire_position_configUpdateManyWithoutTruckNestedInput
    tire_pressure_event?: tire_pressure_eventUpdateManyWithoutTruckNestedInput
    trip?: tripUpdateManyWithoutTruckNestedInput
    fleet_group?: fleet_groupUpdateOneWithoutTruckNestedInput
    truck_status_event?: truck_status_eventUpdateManyWithoutTruckNestedInput
  }

  export type truckUncheckedUpdateWithoutHub_temperature_eventInput = {
    id?: StringFieldUpdateOperationsInput | string
    plate_number?: StringFieldUpdateOperationsInput | string
    vin?: NullableStringFieldUpdateOperationsInput | string | null
    name?: NullableStringFieldUpdateOperationsInput | string | null
    model?: NullableStringFieldUpdateOperationsInput | string | null
    year?: NullableIntFieldUpdateOperationsInput | number | null
    tire_config?: NullableStringFieldUpdateOperationsInput | string | null
    fleet_group_id?: NullableStringFieldUpdateOperationsInput | string | null
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    created_by?: NullableStringFieldUpdateOperationsInput | string | null
    updated_by?: NullableStringFieldUpdateOperationsInput | string | null
    alert_event?: alert_eventUncheckedUpdateManyWithoutTruckNestedInput
    daily_route?: daily_routeUncheckedUpdateManyWithoutTruckNestedInput
    device?: deviceUncheckedUpdateManyWithoutTruckNestedInput
    device_status_event?: device_status_eventUncheckedUpdateManyWithoutTruckNestedInput
    device_truck_assignment?: device_truck_assignmentUncheckedUpdateManyWithoutTruckNestedInput
    fuel_level_event?: fuel_level_eventUncheckedUpdateManyWithoutTruckNestedInput
    gps_position?: gps_positionUncheckedUpdateManyWithoutTruckNestedInput
    lock_event?: lock_eventUncheckedUpdateManyWithoutTruckNestedInput
    sensor_data_raw?: sensor_data_rawUncheckedUpdateManyWithoutTruckNestedInput
    speed_event?: speed_eventUncheckedUpdateManyWithoutTruckNestedInput
    tire_position_config?: tire_position_configUncheckedUpdateManyWithoutTruckNestedInput
    tire_pressure_event?: tire_pressure_eventUncheckedUpdateManyWithoutTruckNestedInput
    trip?: tripUncheckedUpdateManyWithoutTruckNestedInput
    truck_status_event?: truck_status_eventUncheckedUpdateManyWithoutTruckNestedInput
  }

  export type deviceCreateWithoutLock_eventInput = {
    id?: string
    sn: string
    sim_number?: string | null
    installed_at?: Date | string
    removed_at?: Date | string | null
    created_by?: string | null
    updated_by?: string | null
    truck: truckCreateNestedOneWithoutDeviceInput
    device_status_event?: device_status_eventCreateNestedManyWithoutDeviceInput
    device_truck_assignment?: device_truck_assignmentCreateNestedManyWithoutDeviceInput
    gps_position?: gps_positionCreateNestedManyWithoutDeviceInput
    hub_temperature_event?: hub_temperature_eventCreateNestedManyWithoutDeviceInput
    sensor?: sensorCreateNestedManyWithoutDeviceInput
    tire_pressure_event?: tire_pressure_eventCreateNestedManyWithoutDeviceInput
  }

  export type deviceUncheckedCreateWithoutLock_eventInput = {
    id?: string
    truck_id: string
    sn: string
    sim_number?: string | null
    installed_at?: Date | string
    removed_at?: Date | string | null
    created_by?: string | null
    updated_by?: string | null
    device_status_event?: device_status_eventUncheckedCreateNestedManyWithoutDeviceInput
    device_truck_assignment?: device_truck_assignmentUncheckedCreateNestedManyWithoutDeviceInput
    gps_position?: gps_positionUncheckedCreateNestedManyWithoutDeviceInput
    hub_temperature_event?: hub_temperature_eventUncheckedCreateNestedManyWithoutDeviceInput
    sensor?: sensorUncheckedCreateNestedManyWithoutDeviceInput
    tire_pressure_event?: tire_pressure_eventUncheckedCreateNestedManyWithoutDeviceInput
  }

  export type deviceCreateOrConnectWithoutLock_eventInput = {
    where: deviceWhereUniqueInput
    create: XOR<deviceCreateWithoutLock_eventInput, deviceUncheckedCreateWithoutLock_eventInput>
  }

  export type truckCreateWithoutLock_eventInput = {
    id?: string
    plate_number: string
    vin?: string | null
    name?: string | null
    model?: string | null
    year?: number | null
    tire_config?: string | null
    created_at?: Date | string
    created_by?: string | null
    updated_by?: string | null
    alert_event?: alert_eventCreateNestedManyWithoutTruckInput
    daily_route?: daily_routeCreateNestedManyWithoutTruckInput
    device?: deviceCreateNestedManyWithoutTruckInput
    device_status_event?: device_status_eventCreateNestedManyWithoutTruckInput
    device_truck_assignment?: device_truck_assignmentCreateNestedManyWithoutTruckInput
    fuel_level_event?: fuel_level_eventCreateNestedManyWithoutTruckInput
    gps_position?: gps_positionCreateNestedManyWithoutTruckInput
    hub_temperature_event?: hub_temperature_eventCreateNestedManyWithoutTruckInput
    sensor_data_raw?: sensor_data_rawCreateNestedManyWithoutTruckInput
    speed_event?: speed_eventCreateNestedManyWithoutTruckInput
    tire_position_config?: tire_position_configCreateNestedManyWithoutTruckInput
    tire_pressure_event?: tire_pressure_eventCreateNestedManyWithoutTruckInput
    trip?: tripCreateNestedManyWithoutTruckInput
    fleet_group?: fleet_groupCreateNestedOneWithoutTruckInput
    truck_status_event?: truck_status_eventCreateNestedManyWithoutTruckInput
  }

  export type truckUncheckedCreateWithoutLock_eventInput = {
    id?: string
    plate_number: string
    vin?: string | null
    name?: string | null
    model?: string | null
    year?: number | null
    tire_config?: string | null
    fleet_group_id?: string | null
    created_at?: Date | string
    created_by?: string | null
    updated_by?: string | null
    alert_event?: alert_eventUncheckedCreateNestedManyWithoutTruckInput
    daily_route?: daily_routeUncheckedCreateNestedManyWithoutTruckInput
    device?: deviceUncheckedCreateNestedManyWithoutTruckInput
    device_status_event?: device_status_eventUncheckedCreateNestedManyWithoutTruckInput
    device_truck_assignment?: device_truck_assignmentUncheckedCreateNestedManyWithoutTruckInput
    fuel_level_event?: fuel_level_eventUncheckedCreateNestedManyWithoutTruckInput
    gps_position?: gps_positionUncheckedCreateNestedManyWithoutTruckInput
    hub_temperature_event?: hub_temperature_eventUncheckedCreateNestedManyWithoutTruckInput
    sensor_data_raw?: sensor_data_rawUncheckedCreateNestedManyWithoutTruckInput
    speed_event?: speed_eventUncheckedCreateNestedManyWithoutTruckInput
    tire_position_config?: tire_position_configUncheckedCreateNestedManyWithoutTruckInput
    tire_pressure_event?: tire_pressure_eventUncheckedCreateNestedManyWithoutTruckInput
    trip?: tripUncheckedCreateNestedManyWithoutTruckInput
    truck_status_event?: truck_status_eventUncheckedCreateNestedManyWithoutTruckInput
  }

  export type truckCreateOrConnectWithoutLock_eventInput = {
    where: truckWhereUniqueInput
    create: XOR<truckCreateWithoutLock_eventInput, truckUncheckedCreateWithoutLock_eventInput>
  }

  export type deviceUpsertWithoutLock_eventInput = {
    update: XOR<deviceUpdateWithoutLock_eventInput, deviceUncheckedUpdateWithoutLock_eventInput>
    create: XOR<deviceCreateWithoutLock_eventInput, deviceUncheckedCreateWithoutLock_eventInput>
    where?: deviceWhereInput
  }

  export type deviceUpdateToOneWithWhereWithoutLock_eventInput = {
    where?: deviceWhereInput
    data: XOR<deviceUpdateWithoutLock_eventInput, deviceUncheckedUpdateWithoutLock_eventInput>
  }

  export type deviceUpdateWithoutLock_eventInput = {
    id?: StringFieldUpdateOperationsInput | string
    sn?: StringFieldUpdateOperationsInput | string
    sim_number?: NullableStringFieldUpdateOperationsInput | string | null
    installed_at?: DateTimeFieldUpdateOperationsInput | Date | string
    removed_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    created_by?: NullableStringFieldUpdateOperationsInput | string | null
    updated_by?: NullableStringFieldUpdateOperationsInput | string | null
    truck?: truckUpdateOneRequiredWithoutDeviceNestedInput
    device_status_event?: device_status_eventUpdateManyWithoutDeviceNestedInput
    device_truck_assignment?: device_truck_assignmentUpdateManyWithoutDeviceNestedInput
    gps_position?: gps_positionUpdateManyWithoutDeviceNestedInput
    hub_temperature_event?: hub_temperature_eventUpdateManyWithoutDeviceNestedInput
    sensor?: sensorUpdateManyWithoutDeviceNestedInput
    tire_pressure_event?: tire_pressure_eventUpdateManyWithoutDeviceNestedInput
  }

  export type deviceUncheckedUpdateWithoutLock_eventInput = {
    id?: StringFieldUpdateOperationsInput | string
    truck_id?: StringFieldUpdateOperationsInput | string
    sn?: StringFieldUpdateOperationsInput | string
    sim_number?: NullableStringFieldUpdateOperationsInput | string | null
    installed_at?: DateTimeFieldUpdateOperationsInput | Date | string
    removed_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    created_by?: NullableStringFieldUpdateOperationsInput | string | null
    updated_by?: NullableStringFieldUpdateOperationsInput | string | null
    device_status_event?: device_status_eventUncheckedUpdateManyWithoutDeviceNestedInput
    device_truck_assignment?: device_truck_assignmentUncheckedUpdateManyWithoutDeviceNestedInput
    gps_position?: gps_positionUncheckedUpdateManyWithoutDeviceNestedInput
    hub_temperature_event?: hub_temperature_eventUncheckedUpdateManyWithoutDeviceNestedInput
    sensor?: sensorUncheckedUpdateManyWithoutDeviceNestedInput
    tire_pressure_event?: tire_pressure_eventUncheckedUpdateManyWithoutDeviceNestedInput
  }

  export type truckUpsertWithoutLock_eventInput = {
    update: XOR<truckUpdateWithoutLock_eventInput, truckUncheckedUpdateWithoutLock_eventInput>
    create: XOR<truckCreateWithoutLock_eventInput, truckUncheckedCreateWithoutLock_eventInput>
    where?: truckWhereInput
  }

  export type truckUpdateToOneWithWhereWithoutLock_eventInput = {
    where?: truckWhereInput
    data: XOR<truckUpdateWithoutLock_eventInput, truckUncheckedUpdateWithoutLock_eventInput>
  }

  export type truckUpdateWithoutLock_eventInput = {
    id?: StringFieldUpdateOperationsInput | string
    plate_number?: StringFieldUpdateOperationsInput | string
    vin?: NullableStringFieldUpdateOperationsInput | string | null
    name?: NullableStringFieldUpdateOperationsInput | string | null
    model?: NullableStringFieldUpdateOperationsInput | string | null
    year?: NullableIntFieldUpdateOperationsInput | number | null
    tire_config?: NullableStringFieldUpdateOperationsInput | string | null
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    created_by?: NullableStringFieldUpdateOperationsInput | string | null
    updated_by?: NullableStringFieldUpdateOperationsInput | string | null
    alert_event?: alert_eventUpdateManyWithoutTruckNestedInput
    daily_route?: daily_routeUpdateManyWithoutTruckNestedInput
    device?: deviceUpdateManyWithoutTruckNestedInput
    device_status_event?: device_status_eventUpdateManyWithoutTruckNestedInput
    device_truck_assignment?: device_truck_assignmentUpdateManyWithoutTruckNestedInput
    fuel_level_event?: fuel_level_eventUpdateManyWithoutTruckNestedInput
    gps_position?: gps_positionUpdateManyWithoutTruckNestedInput
    hub_temperature_event?: hub_temperature_eventUpdateManyWithoutTruckNestedInput
    sensor_data_raw?: sensor_data_rawUpdateManyWithoutTruckNestedInput
    speed_event?: speed_eventUpdateManyWithoutTruckNestedInput
    tire_position_config?: tire_position_configUpdateManyWithoutTruckNestedInput
    tire_pressure_event?: tire_pressure_eventUpdateManyWithoutTruckNestedInput
    trip?: tripUpdateManyWithoutTruckNestedInput
    fleet_group?: fleet_groupUpdateOneWithoutTruckNestedInput
    truck_status_event?: truck_status_eventUpdateManyWithoutTruckNestedInput
  }

  export type truckUncheckedUpdateWithoutLock_eventInput = {
    id?: StringFieldUpdateOperationsInput | string
    plate_number?: StringFieldUpdateOperationsInput | string
    vin?: NullableStringFieldUpdateOperationsInput | string | null
    name?: NullableStringFieldUpdateOperationsInput | string | null
    model?: NullableStringFieldUpdateOperationsInput | string | null
    year?: NullableIntFieldUpdateOperationsInput | number | null
    tire_config?: NullableStringFieldUpdateOperationsInput | string | null
    fleet_group_id?: NullableStringFieldUpdateOperationsInput | string | null
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    created_by?: NullableStringFieldUpdateOperationsInput | string | null
    updated_by?: NullableStringFieldUpdateOperationsInput | string | null
    alert_event?: alert_eventUncheckedUpdateManyWithoutTruckNestedInput
    daily_route?: daily_routeUncheckedUpdateManyWithoutTruckNestedInput
    device?: deviceUncheckedUpdateManyWithoutTruckNestedInput
    device_status_event?: device_status_eventUncheckedUpdateManyWithoutTruckNestedInput
    device_truck_assignment?: device_truck_assignmentUncheckedUpdateManyWithoutTruckNestedInput
    fuel_level_event?: fuel_level_eventUncheckedUpdateManyWithoutTruckNestedInput
    gps_position?: gps_positionUncheckedUpdateManyWithoutTruckNestedInput
    hub_temperature_event?: hub_temperature_eventUncheckedUpdateManyWithoutTruckNestedInput
    sensor_data_raw?: sensor_data_rawUncheckedUpdateManyWithoutTruckNestedInput
    speed_event?: speed_eventUncheckedUpdateManyWithoutTruckNestedInput
    tire_position_config?: tire_position_configUncheckedUpdateManyWithoutTruckNestedInput
    tire_pressure_event?: tire_pressure_eventUncheckedUpdateManyWithoutTruckNestedInput
    trip?: tripUncheckedUpdateManyWithoutTruckNestedInput
    truck_status_event?: truck_status_eventUncheckedUpdateManyWithoutTruckNestedInput
  }

  export type deviceCreateWithoutSensorInput = {
    id?: string
    sn: string
    sim_number?: string | null
    installed_at?: Date | string
    removed_at?: Date | string | null
    created_by?: string | null
    updated_by?: string | null
    truck: truckCreateNestedOneWithoutDeviceInput
    device_status_event?: device_status_eventCreateNestedManyWithoutDeviceInput
    device_truck_assignment?: device_truck_assignmentCreateNestedManyWithoutDeviceInput
    gps_position?: gps_positionCreateNestedManyWithoutDeviceInput
    hub_temperature_event?: hub_temperature_eventCreateNestedManyWithoutDeviceInput
    lock_event?: lock_eventCreateNestedManyWithoutDeviceInput
    tire_pressure_event?: tire_pressure_eventCreateNestedManyWithoutDeviceInput
  }

  export type deviceUncheckedCreateWithoutSensorInput = {
    id?: string
    truck_id: string
    sn: string
    sim_number?: string | null
    installed_at?: Date | string
    removed_at?: Date | string | null
    created_by?: string | null
    updated_by?: string | null
    device_status_event?: device_status_eventUncheckedCreateNestedManyWithoutDeviceInput
    device_truck_assignment?: device_truck_assignmentUncheckedCreateNestedManyWithoutDeviceInput
    gps_position?: gps_positionUncheckedCreateNestedManyWithoutDeviceInput
    hub_temperature_event?: hub_temperature_eventUncheckedCreateNestedManyWithoutDeviceInput
    lock_event?: lock_eventUncheckedCreateNestedManyWithoutDeviceInput
    tire_pressure_event?: tire_pressure_eventUncheckedCreateNestedManyWithoutDeviceInput
  }

  export type deviceCreateOrConnectWithoutSensorInput = {
    where: deviceWhereUniqueInput
    create: XOR<deviceCreateWithoutSensorInput, deviceUncheckedCreateWithoutSensorInput>
  }

  export type deviceUpsertWithoutSensorInput = {
    update: XOR<deviceUpdateWithoutSensorInput, deviceUncheckedUpdateWithoutSensorInput>
    create: XOR<deviceCreateWithoutSensorInput, deviceUncheckedCreateWithoutSensorInput>
    where?: deviceWhereInput
  }

  export type deviceUpdateToOneWithWhereWithoutSensorInput = {
    where?: deviceWhereInput
    data: XOR<deviceUpdateWithoutSensorInput, deviceUncheckedUpdateWithoutSensorInput>
  }

  export type deviceUpdateWithoutSensorInput = {
    id?: StringFieldUpdateOperationsInput | string
    sn?: StringFieldUpdateOperationsInput | string
    sim_number?: NullableStringFieldUpdateOperationsInput | string | null
    installed_at?: DateTimeFieldUpdateOperationsInput | Date | string
    removed_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    created_by?: NullableStringFieldUpdateOperationsInput | string | null
    updated_by?: NullableStringFieldUpdateOperationsInput | string | null
    truck?: truckUpdateOneRequiredWithoutDeviceNestedInput
    device_status_event?: device_status_eventUpdateManyWithoutDeviceNestedInput
    device_truck_assignment?: device_truck_assignmentUpdateManyWithoutDeviceNestedInput
    gps_position?: gps_positionUpdateManyWithoutDeviceNestedInput
    hub_temperature_event?: hub_temperature_eventUpdateManyWithoutDeviceNestedInput
    lock_event?: lock_eventUpdateManyWithoutDeviceNestedInput
    tire_pressure_event?: tire_pressure_eventUpdateManyWithoutDeviceNestedInput
  }

  export type deviceUncheckedUpdateWithoutSensorInput = {
    id?: StringFieldUpdateOperationsInput | string
    truck_id?: StringFieldUpdateOperationsInput | string
    sn?: StringFieldUpdateOperationsInput | string
    sim_number?: NullableStringFieldUpdateOperationsInput | string | null
    installed_at?: DateTimeFieldUpdateOperationsInput | Date | string
    removed_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    created_by?: NullableStringFieldUpdateOperationsInput | string | null
    updated_by?: NullableStringFieldUpdateOperationsInput | string | null
    device_status_event?: device_status_eventUncheckedUpdateManyWithoutDeviceNestedInput
    device_truck_assignment?: device_truck_assignmentUncheckedUpdateManyWithoutDeviceNestedInput
    gps_position?: gps_positionUncheckedUpdateManyWithoutDeviceNestedInput
    hub_temperature_event?: hub_temperature_eventUncheckedUpdateManyWithoutDeviceNestedInput
    lock_event?: lock_eventUncheckedUpdateManyWithoutDeviceNestedInput
    tire_pressure_event?: tire_pressure_eventUncheckedUpdateManyWithoutDeviceNestedInput
  }

  export type truckCreateWithoutSensor_data_rawInput = {
    id?: string
    plate_number: string
    vin?: string | null
    name?: string | null
    model?: string | null
    year?: number | null
    tire_config?: string | null
    created_at?: Date | string
    created_by?: string | null
    updated_by?: string | null
    alert_event?: alert_eventCreateNestedManyWithoutTruckInput
    daily_route?: daily_routeCreateNestedManyWithoutTruckInput
    device?: deviceCreateNestedManyWithoutTruckInput
    device_status_event?: device_status_eventCreateNestedManyWithoutTruckInput
    device_truck_assignment?: device_truck_assignmentCreateNestedManyWithoutTruckInput
    fuel_level_event?: fuel_level_eventCreateNestedManyWithoutTruckInput
    gps_position?: gps_positionCreateNestedManyWithoutTruckInput
    hub_temperature_event?: hub_temperature_eventCreateNestedManyWithoutTruckInput
    lock_event?: lock_eventCreateNestedManyWithoutTruckInput
    speed_event?: speed_eventCreateNestedManyWithoutTruckInput
    tire_position_config?: tire_position_configCreateNestedManyWithoutTruckInput
    tire_pressure_event?: tire_pressure_eventCreateNestedManyWithoutTruckInput
    trip?: tripCreateNestedManyWithoutTruckInput
    fleet_group?: fleet_groupCreateNestedOneWithoutTruckInput
    truck_status_event?: truck_status_eventCreateNestedManyWithoutTruckInput
  }

  export type truckUncheckedCreateWithoutSensor_data_rawInput = {
    id?: string
    plate_number: string
    vin?: string | null
    name?: string | null
    model?: string | null
    year?: number | null
    tire_config?: string | null
    fleet_group_id?: string | null
    created_at?: Date | string
    created_by?: string | null
    updated_by?: string | null
    alert_event?: alert_eventUncheckedCreateNestedManyWithoutTruckInput
    daily_route?: daily_routeUncheckedCreateNestedManyWithoutTruckInput
    device?: deviceUncheckedCreateNestedManyWithoutTruckInput
    device_status_event?: device_status_eventUncheckedCreateNestedManyWithoutTruckInput
    device_truck_assignment?: device_truck_assignmentUncheckedCreateNestedManyWithoutTruckInput
    fuel_level_event?: fuel_level_eventUncheckedCreateNestedManyWithoutTruckInput
    gps_position?: gps_positionUncheckedCreateNestedManyWithoutTruckInput
    hub_temperature_event?: hub_temperature_eventUncheckedCreateNestedManyWithoutTruckInput
    lock_event?: lock_eventUncheckedCreateNestedManyWithoutTruckInput
    speed_event?: speed_eventUncheckedCreateNestedManyWithoutTruckInput
    tire_position_config?: tire_position_configUncheckedCreateNestedManyWithoutTruckInput
    tire_pressure_event?: tire_pressure_eventUncheckedCreateNestedManyWithoutTruckInput
    trip?: tripUncheckedCreateNestedManyWithoutTruckInput
    truck_status_event?: truck_status_eventUncheckedCreateNestedManyWithoutTruckInput
  }

  export type truckCreateOrConnectWithoutSensor_data_rawInput = {
    where: truckWhereUniqueInput
    create: XOR<truckCreateWithoutSensor_data_rawInput, truckUncheckedCreateWithoutSensor_data_rawInput>
  }

  export type sensor_processing_queueCreateWithoutSensor_data_rawInput = {
    id?: string
    priority?: number | null
    attempts?: number | null
    max_attempts?: number | null
    error_message?: string | null
    created_at?: Date | string | null
    processed_at?: Date | string | null
  }

  export type sensor_processing_queueUncheckedCreateWithoutSensor_data_rawInput = {
    id?: string
    priority?: number | null
    attempts?: number | null
    max_attempts?: number | null
    error_message?: string | null
    created_at?: Date | string | null
    processed_at?: Date | string | null
  }

  export type sensor_processing_queueCreateOrConnectWithoutSensor_data_rawInput = {
    where: sensor_processing_queueWhereUniqueInput
    create: XOR<sensor_processing_queueCreateWithoutSensor_data_rawInput, sensor_processing_queueUncheckedCreateWithoutSensor_data_rawInput>
  }

  export type sensor_processing_queueCreateManySensor_data_rawInputEnvelope = {
    data: sensor_processing_queueCreateManySensor_data_rawInput | sensor_processing_queueCreateManySensor_data_rawInput[]
    skipDuplicates?: boolean
  }

  export type truckUpsertWithoutSensor_data_rawInput = {
    update: XOR<truckUpdateWithoutSensor_data_rawInput, truckUncheckedUpdateWithoutSensor_data_rawInput>
    create: XOR<truckCreateWithoutSensor_data_rawInput, truckUncheckedCreateWithoutSensor_data_rawInput>
    where?: truckWhereInput
  }

  export type truckUpdateToOneWithWhereWithoutSensor_data_rawInput = {
    where?: truckWhereInput
    data: XOR<truckUpdateWithoutSensor_data_rawInput, truckUncheckedUpdateWithoutSensor_data_rawInput>
  }

  export type truckUpdateWithoutSensor_data_rawInput = {
    id?: StringFieldUpdateOperationsInput | string
    plate_number?: StringFieldUpdateOperationsInput | string
    vin?: NullableStringFieldUpdateOperationsInput | string | null
    name?: NullableStringFieldUpdateOperationsInput | string | null
    model?: NullableStringFieldUpdateOperationsInput | string | null
    year?: NullableIntFieldUpdateOperationsInput | number | null
    tire_config?: NullableStringFieldUpdateOperationsInput | string | null
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    created_by?: NullableStringFieldUpdateOperationsInput | string | null
    updated_by?: NullableStringFieldUpdateOperationsInput | string | null
    alert_event?: alert_eventUpdateManyWithoutTruckNestedInput
    daily_route?: daily_routeUpdateManyWithoutTruckNestedInput
    device?: deviceUpdateManyWithoutTruckNestedInput
    device_status_event?: device_status_eventUpdateManyWithoutTruckNestedInput
    device_truck_assignment?: device_truck_assignmentUpdateManyWithoutTruckNestedInput
    fuel_level_event?: fuel_level_eventUpdateManyWithoutTruckNestedInput
    gps_position?: gps_positionUpdateManyWithoutTruckNestedInput
    hub_temperature_event?: hub_temperature_eventUpdateManyWithoutTruckNestedInput
    lock_event?: lock_eventUpdateManyWithoutTruckNestedInput
    speed_event?: speed_eventUpdateManyWithoutTruckNestedInput
    tire_position_config?: tire_position_configUpdateManyWithoutTruckNestedInput
    tire_pressure_event?: tire_pressure_eventUpdateManyWithoutTruckNestedInput
    trip?: tripUpdateManyWithoutTruckNestedInput
    fleet_group?: fleet_groupUpdateOneWithoutTruckNestedInput
    truck_status_event?: truck_status_eventUpdateManyWithoutTruckNestedInput
  }

  export type truckUncheckedUpdateWithoutSensor_data_rawInput = {
    id?: StringFieldUpdateOperationsInput | string
    plate_number?: StringFieldUpdateOperationsInput | string
    vin?: NullableStringFieldUpdateOperationsInput | string | null
    name?: NullableStringFieldUpdateOperationsInput | string | null
    model?: NullableStringFieldUpdateOperationsInput | string | null
    year?: NullableIntFieldUpdateOperationsInput | number | null
    tire_config?: NullableStringFieldUpdateOperationsInput | string | null
    fleet_group_id?: NullableStringFieldUpdateOperationsInput | string | null
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    created_by?: NullableStringFieldUpdateOperationsInput | string | null
    updated_by?: NullableStringFieldUpdateOperationsInput | string | null
    alert_event?: alert_eventUncheckedUpdateManyWithoutTruckNestedInput
    daily_route?: daily_routeUncheckedUpdateManyWithoutTruckNestedInput
    device?: deviceUncheckedUpdateManyWithoutTruckNestedInput
    device_status_event?: device_status_eventUncheckedUpdateManyWithoutTruckNestedInput
    device_truck_assignment?: device_truck_assignmentUncheckedUpdateManyWithoutTruckNestedInput
    fuel_level_event?: fuel_level_eventUncheckedUpdateManyWithoutTruckNestedInput
    gps_position?: gps_positionUncheckedUpdateManyWithoutTruckNestedInput
    hub_temperature_event?: hub_temperature_eventUncheckedUpdateManyWithoutTruckNestedInput
    lock_event?: lock_eventUncheckedUpdateManyWithoutTruckNestedInput
    speed_event?: speed_eventUncheckedUpdateManyWithoutTruckNestedInput
    tire_position_config?: tire_position_configUncheckedUpdateManyWithoutTruckNestedInput
    tire_pressure_event?: tire_pressure_eventUncheckedUpdateManyWithoutTruckNestedInput
    trip?: tripUncheckedUpdateManyWithoutTruckNestedInput
    truck_status_event?: truck_status_eventUncheckedUpdateManyWithoutTruckNestedInput
  }

  export type sensor_processing_queueUpsertWithWhereUniqueWithoutSensor_data_rawInput = {
    where: sensor_processing_queueWhereUniqueInput
    update: XOR<sensor_processing_queueUpdateWithoutSensor_data_rawInput, sensor_processing_queueUncheckedUpdateWithoutSensor_data_rawInput>
    create: XOR<sensor_processing_queueCreateWithoutSensor_data_rawInput, sensor_processing_queueUncheckedCreateWithoutSensor_data_rawInput>
  }

  export type sensor_processing_queueUpdateWithWhereUniqueWithoutSensor_data_rawInput = {
    where: sensor_processing_queueWhereUniqueInput
    data: XOR<sensor_processing_queueUpdateWithoutSensor_data_rawInput, sensor_processing_queueUncheckedUpdateWithoutSensor_data_rawInput>
  }

  export type sensor_processing_queueUpdateManyWithWhereWithoutSensor_data_rawInput = {
    where: sensor_processing_queueScalarWhereInput
    data: XOR<sensor_processing_queueUpdateManyMutationInput, sensor_processing_queueUncheckedUpdateManyWithoutSensor_data_rawInput>
  }

  export type sensor_processing_queueScalarWhereInput = {
    AND?: sensor_processing_queueScalarWhereInput | sensor_processing_queueScalarWhereInput[]
    OR?: sensor_processing_queueScalarWhereInput[]
    NOT?: sensor_processing_queueScalarWhereInput | sensor_processing_queueScalarWhereInput[]
    id?: UuidFilter<"sensor_processing_queue"> | string
    raw_data_id?: UuidNullableFilter<"sensor_processing_queue"> | string | null
    priority?: IntNullableFilter<"sensor_processing_queue"> | number | null
    attempts?: IntNullableFilter<"sensor_processing_queue"> | number | null
    max_attempts?: IntNullableFilter<"sensor_processing_queue"> | number | null
    error_message?: StringNullableFilter<"sensor_processing_queue"> | string | null
    created_at?: DateTimeNullableFilter<"sensor_processing_queue"> | Date | string | null
    processed_at?: DateTimeNullableFilter<"sensor_processing_queue"> | Date | string | null
  }

  export type sensor_data_rawCreateWithoutSensor_processing_queueInput = {
    id?: string
    device_sn: string
    cmd_type: string
    tire_no?: number | null
    raw_json: JsonNullValueInput | InputJsonValue
    processed?: boolean | null
    received_at?: Date | string
    processed_at?: Date | string | null
    truck?: truckCreateNestedOneWithoutSensor_data_rawInput
  }

  export type sensor_data_rawUncheckedCreateWithoutSensor_processing_queueInput = {
    id?: string
    device_sn: string
    cmd_type: string
    truck_id?: string | null
    tire_no?: number | null
    raw_json: JsonNullValueInput | InputJsonValue
    processed?: boolean | null
    received_at?: Date | string
    processed_at?: Date | string | null
  }

  export type sensor_data_rawCreateOrConnectWithoutSensor_processing_queueInput = {
    where: sensor_data_rawWhereUniqueInput
    create: XOR<sensor_data_rawCreateWithoutSensor_processing_queueInput, sensor_data_rawUncheckedCreateWithoutSensor_processing_queueInput>
  }

  export type sensor_data_rawUpsertWithoutSensor_processing_queueInput = {
    update: XOR<sensor_data_rawUpdateWithoutSensor_processing_queueInput, sensor_data_rawUncheckedUpdateWithoutSensor_processing_queueInput>
    create: XOR<sensor_data_rawCreateWithoutSensor_processing_queueInput, sensor_data_rawUncheckedCreateWithoutSensor_processing_queueInput>
    where?: sensor_data_rawWhereInput
  }

  export type sensor_data_rawUpdateToOneWithWhereWithoutSensor_processing_queueInput = {
    where?: sensor_data_rawWhereInput
    data: XOR<sensor_data_rawUpdateWithoutSensor_processing_queueInput, sensor_data_rawUncheckedUpdateWithoutSensor_processing_queueInput>
  }

  export type sensor_data_rawUpdateWithoutSensor_processing_queueInput = {
    id?: StringFieldUpdateOperationsInput | string
    device_sn?: StringFieldUpdateOperationsInput | string
    cmd_type?: StringFieldUpdateOperationsInput | string
    tire_no?: NullableIntFieldUpdateOperationsInput | number | null
    raw_json?: JsonNullValueInput | InputJsonValue
    processed?: NullableBoolFieldUpdateOperationsInput | boolean | null
    received_at?: DateTimeFieldUpdateOperationsInput | Date | string
    processed_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    truck?: truckUpdateOneWithoutSensor_data_rawNestedInput
  }

  export type sensor_data_rawUncheckedUpdateWithoutSensor_processing_queueInput = {
    id?: StringFieldUpdateOperationsInput | string
    device_sn?: StringFieldUpdateOperationsInput | string
    cmd_type?: StringFieldUpdateOperationsInput | string
    truck_id?: NullableStringFieldUpdateOperationsInput | string | null
    tire_no?: NullableIntFieldUpdateOperationsInput | number | null
    raw_json?: JsonNullValueInput | InputJsonValue
    processed?: NullableBoolFieldUpdateOperationsInput | boolean | null
    received_at?: DateTimeFieldUpdateOperationsInput | Date | string
    processed_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type truckCreateWithoutSpeed_eventInput = {
    id?: string
    plate_number: string
    vin?: string | null
    name?: string | null
    model?: string | null
    year?: number | null
    tire_config?: string | null
    created_at?: Date | string
    created_by?: string | null
    updated_by?: string | null
    alert_event?: alert_eventCreateNestedManyWithoutTruckInput
    daily_route?: daily_routeCreateNestedManyWithoutTruckInput
    device?: deviceCreateNestedManyWithoutTruckInput
    device_status_event?: device_status_eventCreateNestedManyWithoutTruckInput
    device_truck_assignment?: device_truck_assignmentCreateNestedManyWithoutTruckInput
    fuel_level_event?: fuel_level_eventCreateNestedManyWithoutTruckInput
    gps_position?: gps_positionCreateNestedManyWithoutTruckInput
    hub_temperature_event?: hub_temperature_eventCreateNestedManyWithoutTruckInput
    lock_event?: lock_eventCreateNestedManyWithoutTruckInput
    sensor_data_raw?: sensor_data_rawCreateNestedManyWithoutTruckInput
    tire_position_config?: tire_position_configCreateNestedManyWithoutTruckInput
    tire_pressure_event?: tire_pressure_eventCreateNestedManyWithoutTruckInput
    trip?: tripCreateNestedManyWithoutTruckInput
    fleet_group?: fleet_groupCreateNestedOneWithoutTruckInput
    truck_status_event?: truck_status_eventCreateNestedManyWithoutTruckInput
  }

  export type truckUncheckedCreateWithoutSpeed_eventInput = {
    id?: string
    plate_number: string
    vin?: string | null
    name?: string | null
    model?: string | null
    year?: number | null
    tire_config?: string | null
    fleet_group_id?: string | null
    created_at?: Date | string
    created_by?: string | null
    updated_by?: string | null
    alert_event?: alert_eventUncheckedCreateNestedManyWithoutTruckInput
    daily_route?: daily_routeUncheckedCreateNestedManyWithoutTruckInput
    device?: deviceUncheckedCreateNestedManyWithoutTruckInput
    device_status_event?: device_status_eventUncheckedCreateNestedManyWithoutTruckInput
    device_truck_assignment?: device_truck_assignmentUncheckedCreateNestedManyWithoutTruckInput
    fuel_level_event?: fuel_level_eventUncheckedCreateNestedManyWithoutTruckInput
    gps_position?: gps_positionUncheckedCreateNestedManyWithoutTruckInput
    hub_temperature_event?: hub_temperature_eventUncheckedCreateNestedManyWithoutTruckInput
    lock_event?: lock_eventUncheckedCreateNestedManyWithoutTruckInput
    sensor_data_raw?: sensor_data_rawUncheckedCreateNestedManyWithoutTruckInput
    tire_position_config?: tire_position_configUncheckedCreateNestedManyWithoutTruckInput
    tire_pressure_event?: tire_pressure_eventUncheckedCreateNestedManyWithoutTruckInput
    trip?: tripUncheckedCreateNestedManyWithoutTruckInput
    truck_status_event?: truck_status_eventUncheckedCreateNestedManyWithoutTruckInput
  }

  export type truckCreateOrConnectWithoutSpeed_eventInput = {
    where: truckWhereUniqueInput
    create: XOR<truckCreateWithoutSpeed_eventInput, truckUncheckedCreateWithoutSpeed_eventInput>
  }

  export type truckUpsertWithoutSpeed_eventInput = {
    update: XOR<truckUpdateWithoutSpeed_eventInput, truckUncheckedUpdateWithoutSpeed_eventInput>
    create: XOR<truckCreateWithoutSpeed_eventInput, truckUncheckedCreateWithoutSpeed_eventInput>
    where?: truckWhereInput
  }

  export type truckUpdateToOneWithWhereWithoutSpeed_eventInput = {
    where?: truckWhereInput
    data: XOR<truckUpdateWithoutSpeed_eventInput, truckUncheckedUpdateWithoutSpeed_eventInput>
  }

  export type truckUpdateWithoutSpeed_eventInput = {
    id?: StringFieldUpdateOperationsInput | string
    plate_number?: StringFieldUpdateOperationsInput | string
    vin?: NullableStringFieldUpdateOperationsInput | string | null
    name?: NullableStringFieldUpdateOperationsInput | string | null
    model?: NullableStringFieldUpdateOperationsInput | string | null
    year?: NullableIntFieldUpdateOperationsInput | number | null
    tire_config?: NullableStringFieldUpdateOperationsInput | string | null
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    created_by?: NullableStringFieldUpdateOperationsInput | string | null
    updated_by?: NullableStringFieldUpdateOperationsInput | string | null
    alert_event?: alert_eventUpdateManyWithoutTruckNestedInput
    daily_route?: daily_routeUpdateManyWithoutTruckNestedInput
    device?: deviceUpdateManyWithoutTruckNestedInput
    device_status_event?: device_status_eventUpdateManyWithoutTruckNestedInput
    device_truck_assignment?: device_truck_assignmentUpdateManyWithoutTruckNestedInput
    fuel_level_event?: fuel_level_eventUpdateManyWithoutTruckNestedInput
    gps_position?: gps_positionUpdateManyWithoutTruckNestedInput
    hub_temperature_event?: hub_temperature_eventUpdateManyWithoutTruckNestedInput
    lock_event?: lock_eventUpdateManyWithoutTruckNestedInput
    sensor_data_raw?: sensor_data_rawUpdateManyWithoutTruckNestedInput
    tire_position_config?: tire_position_configUpdateManyWithoutTruckNestedInput
    tire_pressure_event?: tire_pressure_eventUpdateManyWithoutTruckNestedInput
    trip?: tripUpdateManyWithoutTruckNestedInput
    fleet_group?: fleet_groupUpdateOneWithoutTruckNestedInput
    truck_status_event?: truck_status_eventUpdateManyWithoutTruckNestedInput
  }

  export type truckUncheckedUpdateWithoutSpeed_eventInput = {
    id?: StringFieldUpdateOperationsInput | string
    plate_number?: StringFieldUpdateOperationsInput | string
    vin?: NullableStringFieldUpdateOperationsInput | string | null
    name?: NullableStringFieldUpdateOperationsInput | string | null
    model?: NullableStringFieldUpdateOperationsInput | string | null
    year?: NullableIntFieldUpdateOperationsInput | number | null
    tire_config?: NullableStringFieldUpdateOperationsInput | string | null
    fleet_group_id?: NullableStringFieldUpdateOperationsInput | string | null
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    created_by?: NullableStringFieldUpdateOperationsInput | string | null
    updated_by?: NullableStringFieldUpdateOperationsInput | string | null
    alert_event?: alert_eventUncheckedUpdateManyWithoutTruckNestedInput
    daily_route?: daily_routeUncheckedUpdateManyWithoutTruckNestedInput
    device?: deviceUncheckedUpdateManyWithoutTruckNestedInput
    device_status_event?: device_status_eventUncheckedUpdateManyWithoutTruckNestedInput
    device_truck_assignment?: device_truck_assignmentUncheckedUpdateManyWithoutTruckNestedInput
    fuel_level_event?: fuel_level_eventUncheckedUpdateManyWithoutTruckNestedInput
    gps_position?: gps_positionUncheckedUpdateManyWithoutTruckNestedInput
    hub_temperature_event?: hub_temperature_eventUncheckedUpdateManyWithoutTruckNestedInput
    lock_event?: lock_eventUncheckedUpdateManyWithoutTruckNestedInput
    sensor_data_raw?: sensor_data_rawUncheckedUpdateManyWithoutTruckNestedInput
    tire_position_config?: tire_position_configUncheckedUpdateManyWithoutTruckNestedInput
    tire_pressure_event?: tire_pressure_eventUncheckedUpdateManyWithoutTruckNestedInput
    trip?: tripUncheckedUpdateManyWithoutTruckNestedInput
    truck_status_event?: truck_status_eventUncheckedUpdateManyWithoutTruckNestedInput
  }

  export type truckCreateWithoutTire_position_configInput = {
    id?: string
    plate_number: string
    vin?: string | null
    name?: string | null
    model?: string | null
    year?: number | null
    tire_config?: string | null
    created_at?: Date | string
    created_by?: string | null
    updated_by?: string | null
    alert_event?: alert_eventCreateNestedManyWithoutTruckInput
    daily_route?: daily_routeCreateNestedManyWithoutTruckInput
    device?: deviceCreateNestedManyWithoutTruckInput
    device_status_event?: device_status_eventCreateNestedManyWithoutTruckInput
    device_truck_assignment?: device_truck_assignmentCreateNestedManyWithoutTruckInput
    fuel_level_event?: fuel_level_eventCreateNestedManyWithoutTruckInput
    gps_position?: gps_positionCreateNestedManyWithoutTruckInput
    hub_temperature_event?: hub_temperature_eventCreateNestedManyWithoutTruckInput
    lock_event?: lock_eventCreateNestedManyWithoutTruckInput
    sensor_data_raw?: sensor_data_rawCreateNestedManyWithoutTruckInput
    speed_event?: speed_eventCreateNestedManyWithoutTruckInput
    tire_pressure_event?: tire_pressure_eventCreateNestedManyWithoutTruckInput
    trip?: tripCreateNestedManyWithoutTruckInput
    fleet_group?: fleet_groupCreateNestedOneWithoutTruckInput
    truck_status_event?: truck_status_eventCreateNestedManyWithoutTruckInput
  }

  export type truckUncheckedCreateWithoutTire_position_configInput = {
    id?: string
    plate_number: string
    vin?: string | null
    name?: string | null
    model?: string | null
    year?: number | null
    tire_config?: string | null
    fleet_group_id?: string | null
    created_at?: Date | string
    created_by?: string | null
    updated_by?: string | null
    alert_event?: alert_eventUncheckedCreateNestedManyWithoutTruckInput
    daily_route?: daily_routeUncheckedCreateNestedManyWithoutTruckInput
    device?: deviceUncheckedCreateNestedManyWithoutTruckInput
    device_status_event?: device_status_eventUncheckedCreateNestedManyWithoutTruckInput
    device_truck_assignment?: device_truck_assignmentUncheckedCreateNestedManyWithoutTruckInput
    fuel_level_event?: fuel_level_eventUncheckedCreateNestedManyWithoutTruckInput
    gps_position?: gps_positionUncheckedCreateNestedManyWithoutTruckInput
    hub_temperature_event?: hub_temperature_eventUncheckedCreateNestedManyWithoutTruckInput
    lock_event?: lock_eventUncheckedCreateNestedManyWithoutTruckInput
    sensor_data_raw?: sensor_data_rawUncheckedCreateNestedManyWithoutTruckInput
    speed_event?: speed_eventUncheckedCreateNestedManyWithoutTruckInput
    tire_pressure_event?: tire_pressure_eventUncheckedCreateNestedManyWithoutTruckInput
    trip?: tripUncheckedCreateNestedManyWithoutTruckInput
    truck_status_event?: truck_status_eventUncheckedCreateNestedManyWithoutTruckInput
  }

  export type truckCreateOrConnectWithoutTire_position_configInput = {
    where: truckWhereUniqueInput
    create: XOR<truckCreateWithoutTire_position_configInput, truckUncheckedCreateWithoutTire_position_configInput>
  }

  export type truckUpsertWithoutTire_position_configInput = {
    update: XOR<truckUpdateWithoutTire_position_configInput, truckUncheckedUpdateWithoutTire_position_configInput>
    create: XOR<truckCreateWithoutTire_position_configInput, truckUncheckedCreateWithoutTire_position_configInput>
    where?: truckWhereInput
  }

  export type truckUpdateToOneWithWhereWithoutTire_position_configInput = {
    where?: truckWhereInput
    data: XOR<truckUpdateWithoutTire_position_configInput, truckUncheckedUpdateWithoutTire_position_configInput>
  }

  export type truckUpdateWithoutTire_position_configInput = {
    id?: StringFieldUpdateOperationsInput | string
    plate_number?: StringFieldUpdateOperationsInput | string
    vin?: NullableStringFieldUpdateOperationsInput | string | null
    name?: NullableStringFieldUpdateOperationsInput | string | null
    model?: NullableStringFieldUpdateOperationsInput | string | null
    year?: NullableIntFieldUpdateOperationsInput | number | null
    tire_config?: NullableStringFieldUpdateOperationsInput | string | null
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    created_by?: NullableStringFieldUpdateOperationsInput | string | null
    updated_by?: NullableStringFieldUpdateOperationsInput | string | null
    alert_event?: alert_eventUpdateManyWithoutTruckNestedInput
    daily_route?: daily_routeUpdateManyWithoutTruckNestedInput
    device?: deviceUpdateManyWithoutTruckNestedInput
    device_status_event?: device_status_eventUpdateManyWithoutTruckNestedInput
    device_truck_assignment?: device_truck_assignmentUpdateManyWithoutTruckNestedInput
    fuel_level_event?: fuel_level_eventUpdateManyWithoutTruckNestedInput
    gps_position?: gps_positionUpdateManyWithoutTruckNestedInput
    hub_temperature_event?: hub_temperature_eventUpdateManyWithoutTruckNestedInput
    lock_event?: lock_eventUpdateManyWithoutTruckNestedInput
    sensor_data_raw?: sensor_data_rawUpdateManyWithoutTruckNestedInput
    speed_event?: speed_eventUpdateManyWithoutTruckNestedInput
    tire_pressure_event?: tire_pressure_eventUpdateManyWithoutTruckNestedInput
    trip?: tripUpdateManyWithoutTruckNestedInput
    fleet_group?: fleet_groupUpdateOneWithoutTruckNestedInput
    truck_status_event?: truck_status_eventUpdateManyWithoutTruckNestedInput
  }

  export type truckUncheckedUpdateWithoutTire_position_configInput = {
    id?: StringFieldUpdateOperationsInput | string
    plate_number?: StringFieldUpdateOperationsInput | string
    vin?: NullableStringFieldUpdateOperationsInput | string | null
    name?: NullableStringFieldUpdateOperationsInput | string | null
    model?: NullableStringFieldUpdateOperationsInput | string | null
    year?: NullableIntFieldUpdateOperationsInput | number | null
    tire_config?: NullableStringFieldUpdateOperationsInput | string | null
    fleet_group_id?: NullableStringFieldUpdateOperationsInput | string | null
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    created_by?: NullableStringFieldUpdateOperationsInput | string | null
    updated_by?: NullableStringFieldUpdateOperationsInput | string | null
    alert_event?: alert_eventUncheckedUpdateManyWithoutTruckNestedInput
    daily_route?: daily_routeUncheckedUpdateManyWithoutTruckNestedInput
    device?: deviceUncheckedUpdateManyWithoutTruckNestedInput
    device_status_event?: device_status_eventUncheckedUpdateManyWithoutTruckNestedInput
    device_truck_assignment?: device_truck_assignmentUncheckedUpdateManyWithoutTruckNestedInput
    fuel_level_event?: fuel_level_eventUncheckedUpdateManyWithoutTruckNestedInput
    gps_position?: gps_positionUncheckedUpdateManyWithoutTruckNestedInput
    hub_temperature_event?: hub_temperature_eventUncheckedUpdateManyWithoutTruckNestedInput
    lock_event?: lock_eventUncheckedUpdateManyWithoutTruckNestedInput
    sensor_data_raw?: sensor_data_rawUncheckedUpdateManyWithoutTruckNestedInput
    speed_event?: speed_eventUncheckedUpdateManyWithoutTruckNestedInput
    tire_pressure_event?: tire_pressure_eventUncheckedUpdateManyWithoutTruckNestedInput
    trip?: tripUncheckedUpdateManyWithoutTruckNestedInput
    truck_status_event?: truck_status_eventUncheckedUpdateManyWithoutTruckNestedInput
  }

  export type deviceCreateWithoutTire_pressure_eventInput = {
    id?: string
    sn: string
    sim_number?: string | null
    installed_at?: Date | string
    removed_at?: Date | string | null
    created_by?: string | null
    updated_by?: string | null
    truck: truckCreateNestedOneWithoutDeviceInput
    device_status_event?: device_status_eventCreateNestedManyWithoutDeviceInput
    device_truck_assignment?: device_truck_assignmentCreateNestedManyWithoutDeviceInput
    gps_position?: gps_positionCreateNestedManyWithoutDeviceInput
    hub_temperature_event?: hub_temperature_eventCreateNestedManyWithoutDeviceInput
    lock_event?: lock_eventCreateNestedManyWithoutDeviceInput
    sensor?: sensorCreateNestedManyWithoutDeviceInput
  }

  export type deviceUncheckedCreateWithoutTire_pressure_eventInput = {
    id?: string
    truck_id: string
    sn: string
    sim_number?: string | null
    installed_at?: Date | string
    removed_at?: Date | string | null
    created_by?: string | null
    updated_by?: string | null
    device_status_event?: device_status_eventUncheckedCreateNestedManyWithoutDeviceInput
    device_truck_assignment?: device_truck_assignmentUncheckedCreateNestedManyWithoutDeviceInput
    gps_position?: gps_positionUncheckedCreateNestedManyWithoutDeviceInput
    hub_temperature_event?: hub_temperature_eventUncheckedCreateNestedManyWithoutDeviceInput
    lock_event?: lock_eventUncheckedCreateNestedManyWithoutDeviceInput
    sensor?: sensorUncheckedCreateNestedManyWithoutDeviceInput
  }

  export type deviceCreateOrConnectWithoutTire_pressure_eventInput = {
    where: deviceWhereUniqueInput
    create: XOR<deviceCreateWithoutTire_pressure_eventInput, deviceUncheckedCreateWithoutTire_pressure_eventInput>
  }

  export type truckCreateWithoutTire_pressure_eventInput = {
    id?: string
    plate_number: string
    vin?: string | null
    name?: string | null
    model?: string | null
    year?: number | null
    tire_config?: string | null
    created_at?: Date | string
    created_by?: string | null
    updated_by?: string | null
    alert_event?: alert_eventCreateNestedManyWithoutTruckInput
    daily_route?: daily_routeCreateNestedManyWithoutTruckInput
    device?: deviceCreateNestedManyWithoutTruckInput
    device_status_event?: device_status_eventCreateNestedManyWithoutTruckInput
    device_truck_assignment?: device_truck_assignmentCreateNestedManyWithoutTruckInput
    fuel_level_event?: fuel_level_eventCreateNestedManyWithoutTruckInput
    gps_position?: gps_positionCreateNestedManyWithoutTruckInput
    hub_temperature_event?: hub_temperature_eventCreateNestedManyWithoutTruckInput
    lock_event?: lock_eventCreateNestedManyWithoutTruckInput
    sensor_data_raw?: sensor_data_rawCreateNestedManyWithoutTruckInput
    speed_event?: speed_eventCreateNestedManyWithoutTruckInput
    tire_position_config?: tire_position_configCreateNestedManyWithoutTruckInput
    trip?: tripCreateNestedManyWithoutTruckInput
    fleet_group?: fleet_groupCreateNestedOneWithoutTruckInput
    truck_status_event?: truck_status_eventCreateNestedManyWithoutTruckInput
  }

  export type truckUncheckedCreateWithoutTire_pressure_eventInput = {
    id?: string
    plate_number: string
    vin?: string | null
    name?: string | null
    model?: string | null
    year?: number | null
    tire_config?: string | null
    fleet_group_id?: string | null
    created_at?: Date | string
    created_by?: string | null
    updated_by?: string | null
    alert_event?: alert_eventUncheckedCreateNestedManyWithoutTruckInput
    daily_route?: daily_routeUncheckedCreateNestedManyWithoutTruckInput
    device?: deviceUncheckedCreateNestedManyWithoutTruckInput
    device_status_event?: device_status_eventUncheckedCreateNestedManyWithoutTruckInput
    device_truck_assignment?: device_truck_assignmentUncheckedCreateNestedManyWithoutTruckInput
    fuel_level_event?: fuel_level_eventUncheckedCreateNestedManyWithoutTruckInput
    gps_position?: gps_positionUncheckedCreateNestedManyWithoutTruckInput
    hub_temperature_event?: hub_temperature_eventUncheckedCreateNestedManyWithoutTruckInput
    lock_event?: lock_eventUncheckedCreateNestedManyWithoutTruckInput
    sensor_data_raw?: sensor_data_rawUncheckedCreateNestedManyWithoutTruckInput
    speed_event?: speed_eventUncheckedCreateNestedManyWithoutTruckInput
    tire_position_config?: tire_position_configUncheckedCreateNestedManyWithoutTruckInput
    trip?: tripUncheckedCreateNestedManyWithoutTruckInput
    truck_status_event?: truck_status_eventUncheckedCreateNestedManyWithoutTruckInput
  }

  export type truckCreateOrConnectWithoutTire_pressure_eventInput = {
    where: truckWhereUniqueInput
    create: XOR<truckCreateWithoutTire_pressure_eventInput, truckUncheckedCreateWithoutTire_pressure_eventInput>
  }

  export type deviceUpsertWithoutTire_pressure_eventInput = {
    update: XOR<deviceUpdateWithoutTire_pressure_eventInput, deviceUncheckedUpdateWithoutTire_pressure_eventInput>
    create: XOR<deviceCreateWithoutTire_pressure_eventInput, deviceUncheckedCreateWithoutTire_pressure_eventInput>
    where?: deviceWhereInput
  }

  export type deviceUpdateToOneWithWhereWithoutTire_pressure_eventInput = {
    where?: deviceWhereInput
    data: XOR<deviceUpdateWithoutTire_pressure_eventInput, deviceUncheckedUpdateWithoutTire_pressure_eventInput>
  }

  export type deviceUpdateWithoutTire_pressure_eventInput = {
    id?: StringFieldUpdateOperationsInput | string
    sn?: StringFieldUpdateOperationsInput | string
    sim_number?: NullableStringFieldUpdateOperationsInput | string | null
    installed_at?: DateTimeFieldUpdateOperationsInput | Date | string
    removed_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    created_by?: NullableStringFieldUpdateOperationsInput | string | null
    updated_by?: NullableStringFieldUpdateOperationsInput | string | null
    truck?: truckUpdateOneRequiredWithoutDeviceNestedInput
    device_status_event?: device_status_eventUpdateManyWithoutDeviceNestedInput
    device_truck_assignment?: device_truck_assignmentUpdateManyWithoutDeviceNestedInput
    gps_position?: gps_positionUpdateManyWithoutDeviceNestedInput
    hub_temperature_event?: hub_temperature_eventUpdateManyWithoutDeviceNestedInput
    lock_event?: lock_eventUpdateManyWithoutDeviceNestedInput
    sensor?: sensorUpdateManyWithoutDeviceNestedInput
  }

  export type deviceUncheckedUpdateWithoutTire_pressure_eventInput = {
    id?: StringFieldUpdateOperationsInput | string
    truck_id?: StringFieldUpdateOperationsInput | string
    sn?: StringFieldUpdateOperationsInput | string
    sim_number?: NullableStringFieldUpdateOperationsInput | string | null
    installed_at?: DateTimeFieldUpdateOperationsInput | Date | string
    removed_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    created_by?: NullableStringFieldUpdateOperationsInput | string | null
    updated_by?: NullableStringFieldUpdateOperationsInput | string | null
    device_status_event?: device_status_eventUncheckedUpdateManyWithoutDeviceNestedInput
    device_truck_assignment?: device_truck_assignmentUncheckedUpdateManyWithoutDeviceNestedInput
    gps_position?: gps_positionUncheckedUpdateManyWithoutDeviceNestedInput
    hub_temperature_event?: hub_temperature_eventUncheckedUpdateManyWithoutDeviceNestedInput
    lock_event?: lock_eventUncheckedUpdateManyWithoutDeviceNestedInput
    sensor?: sensorUncheckedUpdateManyWithoutDeviceNestedInput
  }

  export type truckUpsertWithoutTire_pressure_eventInput = {
    update: XOR<truckUpdateWithoutTire_pressure_eventInput, truckUncheckedUpdateWithoutTire_pressure_eventInput>
    create: XOR<truckCreateWithoutTire_pressure_eventInput, truckUncheckedCreateWithoutTire_pressure_eventInput>
    where?: truckWhereInput
  }

  export type truckUpdateToOneWithWhereWithoutTire_pressure_eventInput = {
    where?: truckWhereInput
    data: XOR<truckUpdateWithoutTire_pressure_eventInput, truckUncheckedUpdateWithoutTire_pressure_eventInput>
  }

  export type truckUpdateWithoutTire_pressure_eventInput = {
    id?: StringFieldUpdateOperationsInput | string
    plate_number?: StringFieldUpdateOperationsInput | string
    vin?: NullableStringFieldUpdateOperationsInput | string | null
    name?: NullableStringFieldUpdateOperationsInput | string | null
    model?: NullableStringFieldUpdateOperationsInput | string | null
    year?: NullableIntFieldUpdateOperationsInput | number | null
    tire_config?: NullableStringFieldUpdateOperationsInput | string | null
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    created_by?: NullableStringFieldUpdateOperationsInput | string | null
    updated_by?: NullableStringFieldUpdateOperationsInput | string | null
    alert_event?: alert_eventUpdateManyWithoutTruckNestedInput
    daily_route?: daily_routeUpdateManyWithoutTruckNestedInput
    device?: deviceUpdateManyWithoutTruckNestedInput
    device_status_event?: device_status_eventUpdateManyWithoutTruckNestedInput
    device_truck_assignment?: device_truck_assignmentUpdateManyWithoutTruckNestedInput
    fuel_level_event?: fuel_level_eventUpdateManyWithoutTruckNestedInput
    gps_position?: gps_positionUpdateManyWithoutTruckNestedInput
    hub_temperature_event?: hub_temperature_eventUpdateManyWithoutTruckNestedInput
    lock_event?: lock_eventUpdateManyWithoutTruckNestedInput
    sensor_data_raw?: sensor_data_rawUpdateManyWithoutTruckNestedInput
    speed_event?: speed_eventUpdateManyWithoutTruckNestedInput
    tire_position_config?: tire_position_configUpdateManyWithoutTruckNestedInput
    trip?: tripUpdateManyWithoutTruckNestedInput
    fleet_group?: fleet_groupUpdateOneWithoutTruckNestedInput
    truck_status_event?: truck_status_eventUpdateManyWithoutTruckNestedInput
  }

  export type truckUncheckedUpdateWithoutTire_pressure_eventInput = {
    id?: StringFieldUpdateOperationsInput | string
    plate_number?: StringFieldUpdateOperationsInput | string
    vin?: NullableStringFieldUpdateOperationsInput | string | null
    name?: NullableStringFieldUpdateOperationsInput | string | null
    model?: NullableStringFieldUpdateOperationsInput | string | null
    year?: NullableIntFieldUpdateOperationsInput | number | null
    tire_config?: NullableStringFieldUpdateOperationsInput | string | null
    fleet_group_id?: NullableStringFieldUpdateOperationsInput | string | null
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    created_by?: NullableStringFieldUpdateOperationsInput | string | null
    updated_by?: NullableStringFieldUpdateOperationsInput | string | null
    alert_event?: alert_eventUncheckedUpdateManyWithoutTruckNestedInput
    daily_route?: daily_routeUncheckedUpdateManyWithoutTruckNestedInput
    device?: deviceUncheckedUpdateManyWithoutTruckNestedInput
    device_status_event?: device_status_eventUncheckedUpdateManyWithoutTruckNestedInput
    device_truck_assignment?: device_truck_assignmentUncheckedUpdateManyWithoutTruckNestedInput
    fuel_level_event?: fuel_level_eventUncheckedUpdateManyWithoutTruckNestedInput
    gps_position?: gps_positionUncheckedUpdateManyWithoutTruckNestedInput
    hub_temperature_event?: hub_temperature_eventUncheckedUpdateManyWithoutTruckNestedInput
    lock_event?: lock_eventUncheckedUpdateManyWithoutTruckNestedInput
    sensor_data_raw?: sensor_data_rawUncheckedUpdateManyWithoutTruckNestedInput
    speed_event?: speed_eventUncheckedUpdateManyWithoutTruckNestedInput
    tire_position_config?: tire_position_configUncheckedUpdateManyWithoutTruckNestedInput
    trip?: tripUncheckedUpdateManyWithoutTruckNestedInput
    truck_status_event?: truck_status_eventUncheckedUpdateManyWithoutTruckNestedInput
  }

  export type truckCreateWithoutTripInput = {
    id?: string
    plate_number: string
    vin?: string | null
    name?: string | null
    model?: string | null
    year?: number | null
    tire_config?: string | null
    created_at?: Date | string
    created_by?: string | null
    updated_by?: string | null
    alert_event?: alert_eventCreateNestedManyWithoutTruckInput
    daily_route?: daily_routeCreateNestedManyWithoutTruckInput
    device?: deviceCreateNestedManyWithoutTruckInput
    device_status_event?: device_status_eventCreateNestedManyWithoutTruckInput
    device_truck_assignment?: device_truck_assignmentCreateNestedManyWithoutTruckInput
    fuel_level_event?: fuel_level_eventCreateNestedManyWithoutTruckInput
    gps_position?: gps_positionCreateNestedManyWithoutTruckInput
    hub_temperature_event?: hub_temperature_eventCreateNestedManyWithoutTruckInput
    lock_event?: lock_eventCreateNestedManyWithoutTruckInput
    sensor_data_raw?: sensor_data_rawCreateNestedManyWithoutTruckInput
    speed_event?: speed_eventCreateNestedManyWithoutTruckInput
    tire_position_config?: tire_position_configCreateNestedManyWithoutTruckInput
    tire_pressure_event?: tire_pressure_eventCreateNestedManyWithoutTruckInput
    fleet_group?: fleet_groupCreateNestedOneWithoutTruckInput
    truck_status_event?: truck_status_eventCreateNestedManyWithoutTruckInput
  }

  export type truckUncheckedCreateWithoutTripInput = {
    id?: string
    plate_number: string
    vin?: string | null
    name?: string | null
    model?: string | null
    year?: number | null
    tire_config?: string | null
    fleet_group_id?: string | null
    created_at?: Date | string
    created_by?: string | null
    updated_by?: string | null
    alert_event?: alert_eventUncheckedCreateNestedManyWithoutTruckInput
    daily_route?: daily_routeUncheckedCreateNestedManyWithoutTruckInput
    device?: deviceUncheckedCreateNestedManyWithoutTruckInput
    device_status_event?: device_status_eventUncheckedCreateNestedManyWithoutTruckInput
    device_truck_assignment?: device_truck_assignmentUncheckedCreateNestedManyWithoutTruckInput
    fuel_level_event?: fuel_level_eventUncheckedCreateNestedManyWithoutTruckInput
    gps_position?: gps_positionUncheckedCreateNestedManyWithoutTruckInput
    hub_temperature_event?: hub_temperature_eventUncheckedCreateNestedManyWithoutTruckInput
    lock_event?: lock_eventUncheckedCreateNestedManyWithoutTruckInput
    sensor_data_raw?: sensor_data_rawUncheckedCreateNestedManyWithoutTruckInput
    speed_event?: speed_eventUncheckedCreateNestedManyWithoutTruckInput
    tire_position_config?: tire_position_configUncheckedCreateNestedManyWithoutTruckInput
    tire_pressure_event?: tire_pressure_eventUncheckedCreateNestedManyWithoutTruckInput
    truck_status_event?: truck_status_eventUncheckedCreateNestedManyWithoutTruckInput
  }

  export type truckCreateOrConnectWithoutTripInput = {
    where: truckWhereUniqueInput
    create: XOR<truckCreateWithoutTripInput, truckUncheckedCreateWithoutTripInput>
  }

  export type truckUpsertWithoutTripInput = {
    update: XOR<truckUpdateWithoutTripInput, truckUncheckedUpdateWithoutTripInput>
    create: XOR<truckCreateWithoutTripInput, truckUncheckedCreateWithoutTripInput>
    where?: truckWhereInput
  }

  export type truckUpdateToOneWithWhereWithoutTripInput = {
    where?: truckWhereInput
    data: XOR<truckUpdateWithoutTripInput, truckUncheckedUpdateWithoutTripInput>
  }

  export type truckUpdateWithoutTripInput = {
    id?: StringFieldUpdateOperationsInput | string
    plate_number?: StringFieldUpdateOperationsInput | string
    vin?: NullableStringFieldUpdateOperationsInput | string | null
    name?: NullableStringFieldUpdateOperationsInput | string | null
    model?: NullableStringFieldUpdateOperationsInput | string | null
    year?: NullableIntFieldUpdateOperationsInput | number | null
    tire_config?: NullableStringFieldUpdateOperationsInput | string | null
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    created_by?: NullableStringFieldUpdateOperationsInput | string | null
    updated_by?: NullableStringFieldUpdateOperationsInput | string | null
    alert_event?: alert_eventUpdateManyWithoutTruckNestedInput
    daily_route?: daily_routeUpdateManyWithoutTruckNestedInput
    device?: deviceUpdateManyWithoutTruckNestedInput
    device_status_event?: device_status_eventUpdateManyWithoutTruckNestedInput
    device_truck_assignment?: device_truck_assignmentUpdateManyWithoutTruckNestedInput
    fuel_level_event?: fuel_level_eventUpdateManyWithoutTruckNestedInput
    gps_position?: gps_positionUpdateManyWithoutTruckNestedInput
    hub_temperature_event?: hub_temperature_eventUpdateManyWithoutTruckNestedInput
    lock_event?: lock_eventUpdateManyWithoutTruckNestedInput
    sensor_data_raw?: sensor_data_rawUpdateManyWithoutTruckNestedInput
    speed_event?: speed_eventUpdateManyWithoutTruckNestedInput
    tire_position_config?: tire_position_configUpdateManyWithoutTruckNestedInput
    tire_pressure_event?: tire_pressure_eventUpdateManyWithoutTruckNestedInput
    fleet_group?: fleet_groupUpdateOneWithoutTruckNestedInput
    truck_status_event?: truck_status_eventUpdateManyWithoutTruckNestedInput
  }

  export type truckUncheckedUpdateWithoutTripInput = {
    id?: StringFieldUpdateOperationsInput | string
    plate_number?: StringFieldUpdateOperationsInput | string
    vin?: NullableStringFieldUpdateOperationsInput | string | null
    name?: NullableStringFieldUpdateOperationsInput | string | null
    model?: NullableStringFieldUpdateOperationsInput | string | null
    year?: NullableIntFieldUpdateOperationsInput | number | null
    tire_config?: NullableStringFieldUpdateOperationsInput | string | null
    fleet_group_id?: NullableStringFieldUpdateOperationsInput | string | null
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    created_by?: NullableStringFieldUpdateOperationsInput | string | null
    updated_by?: NullableStringFieldUpdateOperationsInput | string | null
    alert_event?: alert_eventUncheckedUpdateManyWithoutTruckNestedInput
    daily_route?: daily_routeUncheckedUpdateManyWithoutTruckNestedInput
    device?: deviceUncheckedUpdateManyWithoutTruckNestedInput
    device_status_event?: device_status_eventUncheckedUpdateManyWithoutTruckNestedInput
    device_truck_assignment?: device_truck_assignmentUncheckedUpdateManyWithoutTruckNestedInput
    fuel_level_event?: fuel_level_eventUncheckedUpdateManyWithoutTruckNestedInput
    gps_position?: gps_positionUncheckedUpdateManyWithoutTruckNestedInput
    hub_temperature_event?: hub_temperature_eventUncheckedUpdateManyWithoutTruckNestedInput
    lock_event?: lock_eventUncheckedUpdateManyWithoutTruckNestedInput
    sensor_data_raw?: sensor_data_rawUncheckedUpdateManyWithoutTruckNestedInput
    speed_event?: speed_eventUncheckedUpdateManyWithoutTruckNestedInput
    tire_position_config?: tire_position_configUncheckedUpdateManyWithoutTruckNestedInput
    tire_pressure_event?: tire_pressure_eventUncheckedUpdateManyWithoutTruckNestedInput
    truck_status_event?: truck_status_eventUncheckedUpdateManyWithoutTruckNestedInput
  }

  export type alert_eventCreateWithoutTruckInput = {
    id?: string
    type: $Enums.alert_type
    severity?: number | null
    detail?: NullableJsonNullValueInput | InputJsonValue
    occurred_at?: Date | string
    acknowledged?: boolean
    created_by?: string | null
  }

  export type alert_eventUncheckedCreateWithoutTruckInput = {
    id?: string
    type: $Enums.alert_type
    severity?: number | null
    detail?: NullableJsonNullValueInput | InputJsonValue
    occurred_at?: Date | string
    acknowledged?: boolean
    created_by?: string | null
  }

  export type alert_eventCreateOrConnectWithoutTruckInput = {
    where: alert_eventWhereUniqueInput
    create: XOR<alert_eventCreateWithoutTruckInput, alert_eventUncheckedCreateWithoutTruckInput>
  }

  export type alert_eventCreateManyTruckInputEnvelope = {
    data: alert_eventCreateManyTruckInput | alert_eventCreateManyTruckInput[]
    skipDuplicates?: boolean
  }

  export type deviceCreateWithoutTruckInput = {
    id?: string
    sn: string
    sim_number?: string | null
    installed_at?: Date | string
    removed_at?: Date | string | null
    created_by?: string | null
    updated_by?: string | null
    device_status_event?: device_status_eventCreateNestedManyWithoutDeviceInput
    device_truck_assignment?: device_truck_assignmentCreateNestedManyWithoutDeviceInput
    gps_position?: gps_positionCreateNestedManyWithoutDeviceInput
    hub_temperature_event?: hub_temperature_eventCreateNestedManyWithoutDeviceInput
    lock_event?: lock_eventCreateNestedManyWithoutDeviceInput
    sensor?: sensorCreateNestedManyWithoutDeviceInput
    tire_pressure_event?: tire_pressure_eventCreateNestedManyWithoutDeviceInput
  }

  export type deviceUncheckedCreateWithoutTruckInput = {
    id?: string
    sn: string
    sim_number?: string | null
    installed_at?: Date | string
    removed_at?: Date | string | null
    created_by?: string | null
    updated_by?: string | null
    device_status_event?: device_status_eventUncheckedCreateNestedManyWithoutDeviceInput
    device_truck_assignment?: device_truck_assignmentUncheckedCreateNestedManyWithoutDeviceInput
    gps_position?: gps_positionUncheckedCreateNestedManyWithoutDeviceInput
    hub_temperature_event?: hub_temperature_eventUncheckedCreateNestedManyWithoutDeviceInput
    lock_event?: lock_eventUncheckedCreateNestedManyWithoutDeviceInput
    sensor?: sensorUncheckedCreateNestedManyWithoutDeviceInput
    tire_pressure_event?: tire_pressure_eventUncheckedCreateNestedManyWithoutDeviceInput
  }

  export type deviceCreateOrConnectWithoutTruckInput = {
    where: deviceWhereUniqueInput
    create: XOR<deviceCreateWithoutTruckInput, deviceUncheckedCreateWithoutTruckInput>
  }

  export type deviceCreateManyTruckInputEnvelope = {
    data: deviceCreateManyTruckInput | deviceCreateManyTruckInput[]
    skipDuplicates?: boolean
  }

  export type device_status_eventCreateWithoutTruckInput = {
    id?: string
    host_bat?: number | null
    repeater1_bat?: number | null
    repeater2_bat?: number | null
    lock_state?: number | null
    reported_at?: Date | string
    created_by?: string | null
    device: deviceCreateNestedOneWithoutDevice_status_eventInput
  }

  export type device_status_eventUncheckedCreateWithoutTruckInput = {
    id?: string
    device_id: string
    host_bat?: number | null
    repeater1_bat?: number | null
    repeater2_bat?: number | null
    lock_state?: number | null
    reported_at?: Date | string
    created_by?: string | null
  }

  export type device_status_eventCreateOrConnectWithoutTruckInput = {
    where: device_status_eventWhereUniqueInput
    create: XOR<device_status_eventCreateWithoutTruckInput, device_status_eventUncheckedCreateWithoutTruckInput>
  }

  export type device_status_eventCreateManyTruckInputEnvelope = {
    data: device_status_eventCreateManyTruckInput | device_status_eventCreateManyTruckInput[]
    skipDuplicates?: boolean
  }

  export type device_truck_assignmentCreateWithoutTruckInput = {
    id?: string
    assigned_at?: Date | string
    removed_at?: Date | string | null
    is_active?: boolean | null
    users_device_truck_assignment_assigned_byTousers?: usersCreateNestedOneWithoutDevice_truck_assignment_device_truck_assignment_assigned_byTousersInput
    device?: deviceCreateNestedOneWithoutDevice_truck_assignmentInput
    users_device_truck_assignment_removed_byTousers?: usersCreateNestedOneWithoutDevice_truck_assignment_device_truck_assignment_removed_byTousersInput
  }

  export type device_truck_assignmentUncheckedCreateWithoutTruckInput = {
    id?: string
    device_id?: string | null
    assigned_at?: Date | string
    assigned_by?: string | null
    removed_at?: Date | string | null
    removed_by?: string | null
    is_active?: boolean | null
  }

  export type device_truck_assignmentCreateOrConnectWithoutTruckInput = {
    where: device_truck_assignmentWhereUniqueInput
    create: XOR<device_truck_assignmentCreateWithoutTruckInput, device_truck_assignmentUncheckedCreateWithoutTruckInput>
  }

  export type device_truck_assignmentCreateManyTruckInputEnvelope = {
    data: device_truck_assignmentCreateManyTruckInput | device_truck_assignmentCreateManyTruckInput[]
    skipDuplicates?: boolean
  }

  export type fuel_level_eventCreateWithoutTruckInput = {
    id?: string
    fuel_percent?: number | null
    changed_at: Date | string
    source?: string | null
    created_by?: string | null
  }

  export type fuel_level_eventUncheckedCreateWithoutTruckInput = {
    id?: string
    fuel_percent?: number | null
    changed_at: Date | string
    source?: string | null
    created_by?: string | null
  }

  export type fuel_level_eventCreateOrConnectWithoutTruckInput = {
    where: fuel_level_eventWhereUniqueInput
    create: XOR<fuel_level_eventCreateWithoutTruckInput, fuel_level_eventUncheckedCreateWithoutTruckInput>
  }

  export type fuel_level_eventCreateManyTruckInputEnvelope = {
    data: fuel_level_eventCreateManyTruckInput | fuel_level_eventCreateManyTruckInput[]
    skipDuplicates?: boolean
  }

  export type hub_temperature_eventCreateWithoutTruckInput = {
    id?: string
    hub_no?: number | null
    temp_celsius?: number | null
    ex_type?: string | null
    battery_level?: number | null
    changed_at?: Date | string
    created_by?: string | null
    device: deviceCreateNestedOneWithoutHub_temperature_eventInput
  }

  export type hub_temperature_eventUncheckedCreateWithoutTruckInput = {
    id?: string
    device_id: string
    hub_no?: number | null
    temp_celsius?: number | null
    ex_type?: string | null
    battery_level?: number | null
    changed_at?: Date | string
    created_by?: string | null
  }

  export type hub_temperature_eventCreateOrConnectWithoutTruckInput = {
    where: hub_temperature_eventWhereUniqueInput
    create: XOR<hub_temperature_eventCreateWithoutTruckInput, hub_temperature_eventUncheckedCreateWithoutTruckInput>
  }

  export type hub_temperature_eventCreateManyTruckInputEnvelope = {
    data: hub_temperature_eventCreateManyTruckInput | hub_temperature_eventCreateManyTruckInput[]
    skipDuplicates?: boolean
  }

  export type lock_eventCreateWithoutTruckInput = {
    id?: string
    is_lock?: number | null
    reported_at?: Date | string
    created_by?: string | null
    device: deviceCreateNestedOneWithoutLock_eventInput
  }

  export type lock_eventUncheckedCreateWithoutTruckInput = {
    id?: string
    device_id: string
    is_lock?: number | null
    reported_at?: Date | string
    created_by?: string | null
  }

  export type lock_eventCreateOrConnectWithoutTruckInput = {
    where: lock_eventWhereUniqueInput
    create: XOR<lock_eventCreateWithoutTruckInput, lock_eventUncheckedCreateWithoutTruckInput>
  }

  export type lock_eventCreateManyTruckInputEnvelope = {
    data: lock_eventCreateManyTruckInput | lock_eventCreateManyTruckInput[]
    skipDuplicates?: boolean
  }

  export type sensor_data_rawCreateWithoutTruckInput = {
    id?: string
    device_sn: string
    cmd_type: string
    tire_no?: number | null
    raw_json: JsonNullValueInput | InputJsonValue
    processed?: boolean | null
    received_at?: Date | string
    processed_at?: Date | string | null
    sensor_processing_queue?: sensor_processing_queueCreateNestedManyWithoutSensor_data_rawInput
  }

  export type sensor_data_rawUncheckedCreateWithoutTruckInput = {
    id?: string
    device_sn: string
    cmd_type: string
    tire_no?: number | null
    raw_json: JsonNullValueInput | InputJsonValue
    processed?: boolean | null
    received_at?: Date | string
    processed_at?: Date | string | null
    sensor_processing_queue?: sensor_processing_queueUncheckedCreateNestedManyWithoutSensor_data_rawInput
  }

  export type sensor_data_rawCreateOrConnectWithoutTruckInput = {
    where: sensor_data_rawWhereUniqueInput
    create: XOR<sensor_data_rawCreateWithoutTruckInput, sensor_data_rawUncheckedCreateWithoutTruckInput>
  }

  export type sensor_data_rawCreateManyTruckInputEnvelope = {
    data: sensor_data_rawCreateManyTruckInput | sensor_data_rawCreateManyTruckInput[]
    skipDuplicates?: boolean
  }

  export type speed_eventCreateWithoutTruckInput = {
    id?: string
    speed_kph?: number | null
    changed_at: Date | string
    source?: string | null
    created_by?: string | null
  }

  export type speed_eventUncheckedCreateWithoutTruckInput = {
    id?: string
    speed_kph?: number | null
    changed_at: Date | string
    source?: string | null
    created_by?: string | null
  }

  export type speed_eventCreateOrConnectWithoutTruckInput = {
    where: speed_eventWhereUniqueInput
    create: XOR<speed_eventCreateWithoutTruckInput, speed_eventUncheckedCreateWithoutTruckInput>
  }

  export type speed_eventCreateManyTruckInputEnvelope = {
    data: speed_eventCreateManyTruckInput | speed_eventCreateManyTruckInput[]
    skipDuplicates?: boolean
  }

  export type tire_position_configCreateWithoutTruckInput = {
    id?: string
    tire_no: number
    position_name?: string | null
    wheel_type?: string | null
    is_active?: boolean | null
    created_at?: Date | string | null
  }

  export type tire_position_configUncheckedCreateWithoutTruckInput = {
    id?: string
    tire_no: number
    position_name?: string | null
    wheel_type?: string | null
    is_active?: boolean | null
    created_at?: Date | string | null
  }

  export type tire_position_configCreateOrConnectWithoutTruckInput = {
    where: tire_position_configWhereUniqueInput
    create: XOR<tire_position_configCreateWithoutTruckInput, tire_position_configUncheckedCreateWithoutTruckInput>
  }

  export type tire_position_configCreateManyTruckInputEnvelope = {
    data: tire_position_configCreateManyTruckInput | tire_position_configCreateManyTruckInput[]
    skipDuplicates?: boolean
  }

  export type tire_pressure_eventCreateWithoutTruckInput = {
    id?: string
    tire_no: number
    pressure_kpa?: number | null
    temp_celsius?: number | null
    ex_type?: string | null
    battery_level?: number | null
    changed_at?: Date | string
    created_by?: string | null
    device: deviceCreateNestedOneWithoutTire_pressure_eventInput
  }

  export type tire_pressure_eventUncheckedCreateWithoutTruckInput = {
    id?: string
    device_id: string
    tire_no: number
    pressure_kpa?: number | null
    temp_celsius?: number | null
    ex_type?: string | null
    battery_level?: number | null
    changed_at?: Date | string
    created_by?: string | null
  }

  export type tire_pressure_eventCreateOrConnectWithoutTruckInput = {
    where: tire_pressure_eventWhereUniqueInput
    create: XOR<tire_pressure_eventCreateWithoutTruckInput, tire_pressure_eventUncheckedCreateWithoutTruckInput>
  }

  export type tire_pressure_eventCreateManyTruckInputEnvelope = {
    data: tire_pressure_eventCreateManyTruckInput | tire_pressure_eventCreateManyTruckInput[]
    skipDuplicates?: boolean
  }

  export type tripCreateWithoutTruckInput = {
    id?: string
    start_ts: Date | string
    end_ts?: Date | string | null
  }

  export type tripUncheckedCreateWithoutTruckInput = {
    id?: string
    start_ts: Date | string
    end_ts?: Date | string | null
  }

  export type tripCreateOrConnectWithoutTruckInput = {
    where: tripWhereUniqueInput
    create: XOR<tripCreateWithoutTruckInput, tripUncheckedCreateWithoutTruckInput>
  }

  export type tripCreateManyTruckInputEnvelope = {
    data: tripCreateManyTruckInput | tripCreateManyTruckInput[]
    skipDuplicates?: boolean
  }

  export type fleet_groupCreateWithoutTruckInput = {
    id?: string
    name: string
    site?: string | null
    description?: string | null
    created_at?: Date | string | null
    created_by?: string | null
    updated_by?: string | null
  }

  export type fleet_groupUncheckedCreateWithoutTruckInput = {
    id?: string
    name: string
    site?: string | null
    description?: string | null
    created_at?: Date | string | null
    created_by?: string | null
    updated_by?: string | null
  }

  export type fleet_groupCreateOrConnectWithoutTruckInput = {
    where: fleet_groupWhereUniqueInput
    create: XOR<fleet_groupCreateWithoutTruckInput, fleet_groupUncheckedCreateWithoutTruckInput>
  }

  export type truck_status_eventCreateWithoutTruckInput = {
    id?: string
    status: $Enums.truck_status
    note?: string | null
    changed_at?: Date | string
    created_by?: string | null
  }

  export type truck_status_eventUncheckedCreateWithoutTruckInput = {
    id?: string
    status: $Enums.truck_status
    note?: string | null
    changed_at?: Date | string
    created_by?: string | null
  }

  export type truck_status_eventCreateOrConnectWithoutTruckInput = {
    where: truck_status_eventWhereUniqueInput
    create: XOR<truck_status_eventCreateWithoutTruckInput, truck_status_eventUncheckedCreateWithoutTruckInput>
  }

  export type truck_status_eventCreateManyTruckInputEnvelope = {
    data: truck_status_eventCreateManyTruckInput | truck_status_eventCreateManyTruckInput[]
    skipDuplicates?: boolean
  }

  export type alert_eventUpsertWithWhereUniqueWithoutTruckInput = {
    where: alert_eventWhereUniqueInput
    update: XOR<alert_eventUpdateWithoutTruckInput, alert_eventUncheckedUpdateWithoutTruckInput>
    create: XOR<alert_eventCreateWithoutTruckInput, alert_eventUncheckedCreateWithoutTruckInput>
  }

  export type alert_eventUpdateWithWhereUniqueWithoutTruckInput = {
    where: alert_eventWhereUniqueInput
    data: XOR<alert_eventUpdateWithoutTruckInput, alert_eventUncheckedUpdateWithoutTruckInput>
  }

  export type alert_eventUpdateManyWithWhereWithoutTruckInput = {
    where: alert_eventScalarWhereInput
    data: XOR<alert_eventUpdateManyMutationInput, alert_eventUncheckedUpdateManyWithoutTruckInput>
  }

  export type alert_eventScalarWhereInput = {
    AND?: alert_eventScalarWhereInput | alert_eventScalarWhereInput[]
    OR?: alert_eventScalarWhereInput[]
    NOT?: alert_eventScalarWhereInput | alert_eventScalarWhereInput[]
    id?: UuidFilter<"alert_event"> | string
    truck_id?: UuidFilter<"alert_event"> | string
    type?: Enumalert_typeFilter<"alert_event"> | $Enums.alert_type
    severity?: IntNullableFilter<"alert_event"> | number | null
    detail?: JsonNullableFilter<"alert_event">
    occurred_at?: DateTimeFilter<"alert_event"> | Date | string
    acknowledged?: BoolFilter<"alert_event"> | boolean
    created_by?: UuidNullableFilter<"alert_event"> | string | null
  }

  export type daily_routeUpdateWithWhereUniqueWithoutTruckInput = {
    where: daily_routeWhereUniqueInput
    data: XOR<daily_routeUpdateWithoutTruckInput, daily_routeUncheckedUpdateWithoutTruckInput>
  }

  export type daily_routeUpdateManyWithWhereWithoutTruckInput = {
    where: daily_routeScalarWhereInput
    data: XOR<daily_routeUpdateManyMutationInput, daily_routeUncheckedUpdateManyWithoutTruckInput>
  }

  export type daily_routeScalarWhereInput = {
    AND?: daily_routeScalarWhereInput | daily_routeScalarWhereInput[]
    OR?: daily_routeScalarWhereInput[]
    NOT?: daily_routeScalarWhereInput | daily_routeScalarWhereInput[]
    id?: UuidFilter<"daily_route"> | string
    truck_id?: UuidFilter<"daily_route"> | string
    route_date?: DateTimeFilter<"daily_route"> | Date | string
    point_count?: IntFilter<"daily_route"> | number
    generated_at?: DateTimeFilter<"daily_route"> | Date | string
    created_by?: UuidNullableFilter<"daily_route"> | string | null
  }

  export type deviceUpsertWithWhereUniqueWithoutTruckInput = {
    where: deviceWhereUniqueInput
    update: XOR<deviceUpdateWithoutTruckInput, deviceUncheckedUpdateWithoutTruckInput>
    create: XOR<deviceCreateWithoutTruckInput, deviceUncheckedCreateWithoutTruckInput>
  }

  export type deviceUpdateWithWhereUniqueWithoutTruckInput = {
    where: deviceWhereUniqueInput
    data: XOR<deviceUpdateWithoutTruckInput, deviceUncheckedUpdateWithoutTruckInput>
  }

  export type deviceUpdateManyWithWhereWithoutTruckInput = {
    where: deviceScalarWhereInput
    data: XOR<deviceUpdateManyMutationInput, deviceUncheckedUpdateManyWithoutTruckInput>
  }

  export type deviceScalarWhereInput = {
    AND?: deviceScalarWhereInput | deviceScalarWhereInput[]
    OR?: deviceScalarWhereInput[]
    NOT?: deviceScalarWhereInput | deviceScalarWhereInput[]
    id?: UuidFilter<"device"> | string
    truck_id?: UuidFilter<"device"> | string
    sn?: StringFilter<"device"> | string
    sim_number?: StringNullableFilter<"device"> | string | null
    installed_at?: DateTimeFilter<"device"> | Date | string
    removed_at?: DateTimeNullableFilter<"device"> | Date | string | null
    created_by?: UuidNullableFilter<"device"> | string | null
    updated_by?: UuidNullableFilter<"device"> | string | null
  }

  export type device_status_eventUpsertWithWhereUniqueWithoutTruckInput = {
    where: device_status_eventWhereUniqueInput
    update: XOR<device_status_eventUpdateWithoutTruckInput, device_status_eventUncheckedUpdateWithoutTruckInput>
    create: XOR<device_status_eventCreateWithoutTruckInput, device_status_eventUncheckedCreateWithoutTruckInput>
  }

  export type device_status_eventUpdateWithWhereUniqueWithoutTruckInput = {
    where: device_status_eventWhereUniqueInput
    data: XOR<device_status_eventUpdateWithoutTruckInput, device_status_eventUncheckedUpdateWithoutTruckInput>
  }

  export type device_status_eventUpdateManyWithWhereWithoutTruckInput = {
    where: device_status_eventScalarWhereInput
    data: XOR<device_status_eventUpdateManyMutationInput, device_status_eventUncheckedUpdateManyWithoutTruckInput>
  }

  export type device_truck_assignmentUpsertWithWhereUniqueWithoutTruckInput = {
    where: device_truck_assignmentWhereUniqueInput
    update: XOR<device_truck_assignmentUpdateWithoutTruckInput, device_truck_assignmentUncheckedUpdateWithoutTruckInput>
    create: XOR<device_truck_assignmentCreateWithoutTruckInput, device_truck_assignmentUncheckedCreateWithoutTruckInput>
  }

  export type device_truck_assignmentUpdateWithWhereUniqueWithoutTruckInput = {
    where: device_truck_assignmentWhereUniqueInput
    data: XOR<device_truck_assignmentUpdateWithoutTruckInput, device_truck_assignmentUncheckedUpdateWithoutTruckInput>
  }

  export type device_truck_assignmentUpdateManyWithWhereWithoutTruckInput = {
    where: device_truck_assignmentScalarWhereInput
    data: XOR<device_truck_assignmentUpdateManyMutationInput, device_truck_assignmentUncheckedUpdateManyWithoutTruckInput>
  }

  export type fuel_level_eventUpsertWithWhereUniqueWithoutTruckInput = {
    where: fuel_level_eventWhereUniqueInput
    update: XOR<fuel_level_eventUpdateWithoutTruckInput, fuel_level_eventUncheckedUpdateWithoutTruckInput>
    create: XOR<fuel_level_eventCreateWithoutTruckInput, fuel_level_eventUncheckedCreateWithoutTruckInput>
  }

  export type fuel_level_eventUpdateWithWhereUniqueWithoutTruckInput = {
    where: fuel_level_eventWhereUniqueInput
    data: XOR<fuel_level_eventUpdateWithoutTruckInput, fuel_level_eventUncheckedUpdateWithoutTruckInput>
  }

  export type fuel_level_eventUpdateManyWithWhereWithoutTruckInput = {
    where: fuel_level_eventScalarWhereInput
    data: XOR<fuel_level_eventUpdateManyMutationInput, fuel_level_eventUncheckedUpdateManyWithoutTruckInput>
  }

  export type fuel_level_eventScalarWhereInput = {
    AND?: fuel_level_eventScalarWhereInput | fuel_level_eventScalarWhereInput[]
    OR?: fuel_level_eventScalarWhereInput[]
    NOT?: fuel_level_eventScalarWhereInput | fuel_level_eventScalarWhereInput[]
    id?: UuidFilter<"fuel_level_event"> | string
    truck_id?: UuidFilter<"fuel_level_event"> | string
    fuel_percent?: FloatNullableFilter<"fuel_level_event"> | number | null
    changed_at?: DateTimeFilter<"fuel_level_event"> | Date | string
    source?: StringNullableFilter<"fuel_level_event"> | string | null
    created_by?: UuidNullableFilter<"fuel_level_event"> | string | null
  }

  export type gps_positionUpdateWithWhereUniqueWithoutTruckInput = {
    where: gps_positionWhereUniqueInput
    data: XOR<gps_positionUpdateWithoutTruckInput, gps_positionUncheckedUpdateWithoutTruckInput>
  }

  export type gps_positionUpdateManyWithWhereWithoutTruckInput = {
    where: gps_positionScalarWhereInput
    data: XOR<gps_positionUpdateManyMutationInput, gps_positionUncheckedUpdateManyWithoutTruckInput>
  }

  export type hub_temperature_eventUpsertWithWhereUniqueWithoutTruckInput = {
    where: hub_temperature_eventWhereUniqueInput
    update: XOR<hub_temperature_eventUpdateWithoutTruckInput, hub_temperature_eventUncheckedUpdateWithoutTruckInput>
    create: XOR<hub_temperature_eventCreateWithoutTruckInput, hub_temperature_eventUncheckedCreateWithoutTruckInput>
  }

  export type hub_temperature_eventUpdateWithWhereUniqueWithoutTruckInput = {
    where: hub_temperature_eventWhereUniqueInput
    data: XOR<hub_temperature_eventUpdateWithoutTruckInput, hub_temperature_eventUncheckedUpdateWithoutTruckInput>
  }

  export type hub_temperature_eventUpdateManyWithWhereWithoutTruckInput = {
    where: hub_temperature_eventScalarWhereInput
    data: XOR<hub_temperature_eventUpdateManyMutationInput, hub_temperature_eventUncheckedUpdateManyWithoutTruckInput>
  }

  export type lock_eventUpsertWithWhereUniqueWithoutTruckInput = {
    where: lock_eventWhereUniqueInput
    update: XOR<lock_eventUpdateWithoutTruckInput, lock_eventUncheckedUpdateWithoutTruckInput>
    create: XOR<lock_eventCreateWithoutTruckInput, lock_eventUncheckedCreateWithoutTruckInput>
  }

  export type lock_eventUpdateWithWhereUniqueWithoutTruckInput = {
    where: lock_eventWhereUniqueInput
    data: XOR<lock_eventUpdateWithoutTruckInput, lock_eventUncheckedUpdateWithoutTruckInput>
  }

  export type lock_eventUpdateManyWithWhereWithoutTruckInput = {
    where: lock_eventScalarWhereInput
    data: XOR<lock_eventUpdateManyMutationInput, lock_eventUncheckedUpdateManyWithoutTruckInput>
  }

  export type sensor_data_rawUpsertWithWhereUniqueWithoutTruckInput = {
    where: sensor_data_rawWhereUniqueInput
    update: XOR<sensor_data_rawUpdateWithoutTruckInput, sensor_data_rawUncheckedUpdateWithoutTruckInput>
    create: XOR<sensor_data_rawCreateWithoutTruckInput, sensor_data_rawUncheckedCreateWithoutTruckInput>
  }

  export type sensor_data_rawUpdateWithWhereUniqueWithoutTruckInput = {
    where: sensor_data_rawWhereUniqueInput
    data: XOR<sensor_data_rawUpdateWithoutTruckInput, sensor_data_rawUncheckedUpdateWithoutTruckInput>
  }

  export type sensor_data_rawUpdateManyWithWhereWithoutTruckInput = {
    where: sensor_data_rawScalarWhereInput
    data: XOR<sensor_data_rawUpdateManyMutationInput, sensor_data_rawUncheckedUpdateManyWithoutTruckInput>
  }

  export type sensor_data_rawScalarWhereInput = {
    AND?: sensor_data_rawScalarWhereInput | sensor_data_rawScalarWhereInput[]
    OR?: sensor_data_rawScalarWhereInput[]
    NOT?: sensor_data_rawScalarWhereInput | sensor_data_rawScalarWhereInput[]
    id?: UuidFilter<"sensor_data_raw"> | string
    device_sn?: StringFilter<"sensor_data_raw"> | string
    cmd_type?: StringFilter<"sensor_data_raw"> | string
    truck_id?: UuidNullableFilter<"sensor_data_raw"> | string | null
    tire_no?: IntNullableFilter<"sensor_data_raw"> | number | null
    raw_json?: JsonFilter<"sensor_data_raw">
    processed?: BoolNullableFilter<"sensor_data_raw"> | boolean | null
    received_at?: DateTimeFilter<"sensor_data_raw"> | Date | string
    processed_at?: DateTimeNullableFilter<"sensor_data_raw"> | Date | string | null
  }

  export type speed_eventUpsertWithWhereUniqueWithoutTruckInput = {
    where: speed_eventWhereUniqueInput
    update: XOR<speed_eventUpdateWithoutTruckInput, speed_eventUncheckedUpdateWithoutTruckInput>
    create: XOR<speed_eventCreateWithoutTruckInput, speed_eventUncheckedCreateWithoutTruckInput>
  }

  export type speed_eventUpdateWithWhereUniqueWithoutTruckInput = {
    where: speed_eventWhereUniqueInput
    data: XOR<speed_eventUpdateWithoutTruckInput, speed_eventUncheckedUpdateWithoutTruckInput>
  }

  export type speed_eventUpdateManyWithWhereWithoutTruckInput = {
    where: speed_eventScalarWhereInput
    data: XOR<speed_eventUpdateManyMutationInput, speed_eventUncheckedUpdateManyWithoutTruckInput>
  }

  export type speed_eventScalarWhereInput = {
    AND?: speed_eventScalarWhereInput | speed_eventScalarWhereInput[]
    OR?: speed_eventScalarWhereInput[]
    NOT?: speed_eventScalarWhereInput | speed_eventScalarWhereInput[]
    id?: UuidFilter<"speed_event"> | string
    truck_id?: UuidFilter<"speed_event"> | string
    speed_kph?: FloatNullableFilter<"speed_event"> | number | null
    changed_at?: DateTimeFilter<"speed_event"> | Date | string
    source?: StringNullableFilter<"speed_event"> | string | null
    created_by?: UuidNullableFilter<"speed_event"> | string | null
  }

  export type tire_position_configUpsertWithWhereUniqueWithoutTruckInput = {
    where: tire_position_configWhereUniqueInput
    update: XOR<tire_position_configUpdateWithoutTruckInput, tire_position_configUncheckedUpdateWithoutTruckInput>
    create: XOR<tire_position_configCreateWithoutTruckInput, tire_position_configUncheckedCreateWithoutTruckInput>
  }

  export type tire_position_configUpdateWithWhereUniqueWithoutTruckInput = {
    where: tire_position_configWhereUniqueInput
    data: XOR<tire_position_configUpdateWithoutTruckInput, tire_position_configUncheckedUpdateWithoutTruckInput>
  }

  export type tire_position_configUpdateManyWithWhereWithoutTruckInput = {
    where: tire_position_configScalarWhereInput
    data: XOR<tire_position_configUpdateManyMutationInput, tire_position_configUncheckedUpdateManyWithoutTruckInput>
  }

  export type tire_position_configScalarWhereInput = {
    AND?: tire_position_configScalarWhereInput | tire_position_configScalarWhereInput[]
    OR?: tire_position_configScalarWhereInput[]
    NOT?: tire_position_configScalarWhereInput | tire_position_configScalarWhereInput[]
    id?: UuidFilter<"tire_position_config"> | string
    truck_id?: UuidNullableFilter<"tire_position_config"> | string | null
    tire_no?: IntFilter<"tire_position_config"> | number
    position_name?: StringNullableFilter<"tire_position_config"> | string | null
    wheel_type?: StringNullableFilter<"tire_position_config"> | string | null
    is_active?: BoolNullableFilter<"tire_position_config"> | boolean | null
    created_at?: DateTimeNullableFilter<"tire_position_config"> | Date | string | null
  }

  export type tire_pressure_eventUpsertWithWhereUniqueWithoutTruckInput = {
    where: tire_pressure_eventWhereUniqueInput
    update: XOR<tire_pressure_eventUpdateWithoutTruckInput, tire_pressure_eventUncheckedUpdateWithoutTruckInput>
    create: XOR<tire_pressure_eventCreateWithoutTruckInput, tire_pressure_eventUncheckedCreateWithoutTruckInput>
  }

  export type tire_pressure_eventUpdateWithWhereUniqueWithoutTruckInput = {
    where: tire_pressure_eventWhereUniqueInput
    data: XOR<tire_pressure_eventUpdateWithoutTruckInput, tire_pressure_eventUncheckedUpdateWithoutTruckInput>
  }

  export type tire_pressure_eventUpdateManyWithWhereWithoutTruckInput = {
    where: tire_pressure_eventScalarWhereInput
    data: XOR<tire_pressure_eventUpdateManyMutationInput, tire_pressure_eventUncheckedUpdateManyWithoutTruckInput>
  }

  export type tripUpsertWithWhereUniqueWithoutTruckInput = {
    where: tripWhereUniqueInput
    update: XOR<tripUpdateWithoutTruckInput, tripUncheckedUpdateWithoutTruckInput>
    create: XOR<tripCreateWithoutTruckInput, tripUncheckedCreateWithoutTruckInput>
  }

  export type tripUpdateWithWhereUniqueWithoutTruckInput = {
    where: tripWhereUniqueInput
    data: XOR<tripUpdateWithoutTruckInput, tripUncheckedUpdateWithoutTruckInput>
  }

  export type tripUpdateManyWithWhereWithoutTruckInput = {
    where: tripScalarWhereInput
    data: XOR<tripUpdateManyMutationInput, tripUncheckedUpdateManyWithoutTruckInput>
  }

  export type tripScalarWhereInput = {
    AND?: tripScalarWhereInput | tripScalarWhereInput[]
    OR?: tripScalarWhereInput[]
    NOT?: tripScalarWhereInput | tripScalarWhereInput[]
    id?: UuidFilter<"trip"> | string
    truck_id?: UuidFilter<"trip"> | string
    start_ts?: DateTimeFilter<"trip"> | Date | string
    end_ts?: DateTimeNullableFilter<"trip"> | Date | string | null
  }

  export type fleet_groupUpsertWithoutTruckInput = {
    update: XOR<fleet_groupUpdateWithoutTruckInput, fleet_groupUncheckedUpdateWithoutTruckInput>
    create: XOR<fleet_groupCreateWithoutTruckInput, fleet_groupUncheckedCreateWithoutTruckInput>
    where?: fleet_groupWhereInput
  }

  export type fleet_groupUpdateToOneWithWhereWithoutTruckInput = {
    where?: fleet_groupWhereInput
    data: XOR<fleet_groupUpdateWithoutTruckInput, fleet_groupUncheckedUpdateWithoutTruckInput>
  }

  export type fleet_groupUpdateWithoutTruckInput = {
    id?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    site?: NullableStringFieldUpdateOperationsInput | string | null
    description?: NullableStringFieldUpdateOperationsInput | string | null
    created_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    created_by?: NullableStringFieldUpdateOperationsInput | string | null
    updated_by?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type fleet_groupUncheckedUpdateWithoutTruckInput = {
    id?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    site?: NullableStringFieldUpdateOperationsInput | string | null
    description?: NullableStringFieldUpdateOperationsInput | string | null
    created_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    created_by?: NullableStringFieldUpdateOperationsInput | string | null
    updated_by?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type truck_status_eventUpsertWithWhereUniqueWithoutTruckInput = {
    where: truck_status_eventWhereUniqueInput
    update: XOR<truck_status_eventUpdateWithoutTruckInput, truck_status_eventUncheckedUpdateWithoutTruckInput>
    create: XOR<truck_status_eventCreateWithoutTruckInput, truck_status_eventUncheckedCreateWithoutTruckInput>
  }

  export type truck_status_eventUpdateWithWhereUniqueWithoutTruckInput = {
    where: truck_status_eventWhereUniqueInput
    data: XOR<truck_status_eventUpdateWithoutTruckInput, truck_status_eventUncheckedUpdateWithoutTruckInput>
  }

  export type truck_status_eventUpdateManyWithWhereWithoutTruckInput = {
    where: truck_status_eventScalarWhereInput
    data: XOR<truck_status_eventUpdateManyMutationInput, truck_status_eventUncheckedUpdateManyWithoutTruckInput>
  }

  export type truck_status_eventScalarWhereInput = {
    AND?: truck_status_eventScalarWhereInput | truck_status_eventScalarWhereInput[]
    OR?: truck_status_eventScalarWhereInput[]
    NOT?: truck_status_eventScalarWhereInput | truck_status_eventScalarWhereInput[]
    id?: UuidFilter<"truck_status_event"> | string
    truck_id?: UuidFilter<"truck_status_event"> | string
    status?: Enumtruck_statusFilter<"truck_status_event"> | $Enums.truck_status
    note?: StringNullableFilter<"truck_status_event"> | string | null
    changed_at?: DateTimeFilter<"truck_status_event"> | Date | string
    created_by?: UuidNullableFilter<"truck_status_event"> | string | null
  }

  export type truckCreateWithoutTruck_status_eventInput = {
    id?: string
    plate_number: string
    vin?: string | null
    name?: string | null
    model?: string | null
    year?: number | null
    tire_config?: string | null
    created_at?: Date | string
    created_by?: string | null
    updated_by?: string | null
    alert_event?: alert_eventCreateNestedManyWithoutTruckInput
    daily_route?: daily_routeCreateNestedManyWithoutTruckInput
    device?: deviceCreateNestedManyWithoutTruckInput
    device_status_event?: device_status_eventCreateNestedManyWithoutTruckInput
    device_truck_assignment?: device_truck_assignmentCreateNestedManyWithoutTruckInput
    fuel_level_event?: fuel_level_eventCreateNestedManyWithoutTruckInput
    gps_position?: gps_positionCreateNestedManyWithoutTruckInput
    hub_temperature_event?: hub_temperature_eventCreateNestedManyWithoutTruckInput
    lock_event?: lock_eventCreateNestedManyWithoutTruckInput
    sensor_data_raw?: sensor_data_rawCreateNestedManyWithoutTruckInput
    speed_event?: speed_eventCreateNestedManyWithoutTruckInput
    tire_position_config?: tire_position_configCreateNestedManyWithoutTruckInput
    tire_pressure_event?: tire_pressure_eventCreateNestedManyWithoutTruckInput
    trip?: tripCreateNestedManyWithoutTruckInput
    fleet_group?: fleet_groupCreateNestedOneWithoutTruckInput
  }

  export type truckUncheckedCreateWithoutTruck_status_eventInput = {
    id?: string
    plate_number: string
    vin?: string | null
    name?: string | null
    model?: string | null
    year?: number | null
    tire_config?: string | null
    fleet_group_id?: string | null
    created_at?: Date | string
    created_by?: string | null
    updated_by?: string | null
    alert_event?: alert_eventUncheckedCreateNestedManyWithoutTruckInput
    daily_route?: daily_routeUncheckedCreateNestedManyWithoutTruckInput
    device?: deviceUncheckedCreateNestedManyWithoutTruckInput
    device_status_event?: device_status_eventUncheckedCreateNestedManyWithoutTruckInput
    device_truck_assignment?: device_truck_assignmentUncheckedCreateNestedManyWithoutTruckInput
    fuel_level_event?: fuel_level_eventUncheckedCreateNestedManyWithoutTruckInput
    gps_position?: gps_positionUncheckedCreateNestedManyWithoutTruckInput
    hub_temperature_event?: hub_temperature_eventUncheckedCreateNestedManyWithoutTruckInput
    lock_event?: lock_eventUncheckedCreateNestedManyWithoutTruckInput
    sensor_data_raw?: sensor_data_rawUncheckedCreateNestedManyWithoutTruckInput
    speed_event?: speed_eventUncheckedCreateNestedManyWithoutTruckInput
    tire_position_config?: tire_position_configUncheckedCreateNestedManyWithoutTruckInput
    tire_pressure_event?: tire_pressure_eventUncheckedCreateNestedManyWithoutTruckInput
    trip?: tripUncheckedCreateNestedManyWithoutTruckInput
  }

  export type truckCreateOrConnectWithoutTruck_status_eventInput = {
    where: truckWhereUniqueInput
    create: XOR<truckCreateWithoutTruck_status_eventInput, truckUncheckedCreateWithoutTruck_status_eventInput>
  }

  export type truckUpsertWithoutTruck_status_eventInput = {
    update: XOR<truckUpdateWithoutTruck_status_eventInput, truckUncheckedUpdateWithoutTruck_status_eventInput>
    create: XOR<truckCreateWithoutTruck_status_eventInput, truckUncheckedCreateWithoutTruck_status_eventInput>
    where?: truckWhereInput
  }

  export type truckUpdateToOneWithWhereWithoutTruck_status_eventInput = {
    where?: truckWhereInput
    data: XOR<truckUpdateWithoutTruck_status_eventInput, truckUncheckedUpdateWithoutTruck_status_eventInput>
  }

  export type truckUpdateWithoutTruck_status_eventInput = {
    id?: StringFieldUpdateOperationsInput | string
    plate_number?: StringFieldUpdateOperationsInput | string
    vin?: NullableStringFieldUpdateOperationsInput | string | null
    name?: NullableStringFieldUpdateOperationsInput | string | null
    model?: NullableStringFieldUpdateOperationsInput | string | null
    year?: NullableIntFieldUpdateOperationsInput | number | null
    tire_config?: NullableStringFieldUpdateOperationsInput | string | null
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    created_by?: NullableStringFieldUpdateOperationsInput | string | null
    updated_by?: NullableStringFieldUpdateOperationsInput | string | null
    alert_event?: alert_eventUpdateManyWithoutTruckNestedInput
    daily_route?: daily_routeUpdateManyWithoutTruckNestedInput
    device?: deviceUpdateManyWithoutTruckNestedInput
    device_status_event?: device_status_eventUpdateManyWithoutTruckNestedInput
    device_truck_assignment?: device_truck_assignmentUpdateManyWithoutTruckNestedInput
    fuel_level_event?: fuel_level_eventUpdateManyWithoutTruckNestedInput
    gps_position?: gps_positionUpdateManyWithoutTruckNestedInput
    hub_temperature_event?: hub_temperature_eventUpdateManyWithoutTruckNestedInput
    lock_event?: lock_eventUpdateManyWithoutTruckNestedInput
    sensor_data_raw?: sensor_data_rawUpdateManyWithoutTruckNestedInput
    speed_event?: speed_eventUpdateManyWithoutTruckNestedInput
    tire_position_config?: tire_position_configUpdateManyWithoutTruckNestedInput
    tire_pressure_event?: tire_pressure_eventUpdateManyWithoutTruckNestedInput
    trip?: tripUpdateManyWithoutTruckNestedInput
    fleet_group?: fleet_groupUpdateOneWithoutTruckNestedInput
  }

  export type truckUncheckedUpdateWithoutTruck_status_eventInput = {
    id?: StringFieldUpdateOperationsInput | string
    plate_number?: StringFieldUpdateOperationsInput | string
    vin?: NullableStringFieldUpdateOperationsInput | string | null
    name?: NullableStringFieldUpdateOperationsInput | string | null
    model?: NullableStringFieldUpdateOperationsInput | string | null
    year?: NullableIntFieldUpdateOperationsInput | number | null
    tire_config?: NullableStringFieldUpdateOperationsInput | string | null
    fleet_group_id?: NullableStringFieldUpdateOperationsInput | string | null
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    created_by?: NullableStringFieldUpdateOperationsInput | string | null
    updated_by?: NullableStringFieldUpdateOperationsInput | string | null
    alert_event?: alert_eventUncheckedUpdateManyWithoutTruckNestedInput
    daily_route?: daily_routeUncheckedUpdateManyWithoutTruckNestedInput
    device?: deviceUncheckedUpdateManyWithoutTruckNestedInput
    device_status_event?: device_status_eventUncheckedUpdateManyWithoutTruckNestedInput
    device_truck_assignment?: device_truck_assignmentUncheckedUpdateManyWithoutTruckNestedInput
    fuel_level_event?: fuel_level_eventUncheckedUpdateManyWithoutTruckNestedInput
    gps_position?: gps_positionUncheckedUpdateManyWithoutTruckNestedInput
    hub_temperature_event?: hub_temperature_eventUncheckedUpdateManyWithoutTruckNestedInput
    lock_event?: lock_eventUncheckedUpdateManyWithoutTruckNestedInput
    sensor_data_raw?: sensor_data_rawUncheckedUpdateManyWithoutTruckNestedInput
    speed_event?: speed_eventUncheckedUpdateManyWithoutTruckNestedInput
    tire_position_config?: tire_position_configUncheckedUpdateManyWithoutTruckNestedInput
    tire_pressure_event?: tire_pressure_eventUncheckedUpdateManyWithoutTruckNestedInput
    trip?: tripUncheckedUpdateManyWithoutTruckNestedInput
  }

  export type device_truck_assignmentCreateWithoutUsers_device_truck_assignment_assigned_byTousersInput = {
    id?: string
    assigned_at?: Date | string
    removed_at?: Date | string | null
    is_active?: boolean | null
    device?: deviceCreateNestedOneWithoutDevice_truck_assignmentInput
    users_device_truck_assignment_removed_byTousers?: usersCreateNestedOneWithoutDevice_truck_assignment_device_truck_assignment_removed_byTousersInput
    truck?: truckCreateNestedOneWithoutDevice_truck_assignmentInput
  }

  export type device_truck_assignmentUncheckedCreateWithoutUsers_device_truck_assignment_assigned_byTousersInput = {
    id?: string
    device_id?: string | null
    truck_id?: string | null
    assigned_at?: Date | string
    removed_at?: Date | string | null
    removed_by?: string | null
    is_active?: boolean | null
  }

  export type device_truck_assignmentCreateOrConnectWithoutUsers_device_truck_assignment_assigned_byTousersInput = {
    where: device_truck_assignmentWhereUniqueInput
    create: XOR<device_truck_assignmentCreateWithoutUsers_device_truck_assignment_assigned_byTousersInput, device_truck_assignmentUncheckedCreateWithoutUsers_device_truck_assignment_assigned_byTousersInput>
  }

  export type device_truck_assignmentCreateManyUsers_device_truck_assignment_assigned_byTousersInputEnvelope = {
    data: device_truck_assignmentCreateManyUsers_device_truck_assignment_assigned_byTousersInput | device_truck_assignmentCreateManyUsers_device_truck_assignment_assigned_byTousersInput[]
    skipDuplicates?: boolean
  }

  export type device_truck_assignmentCreateWithoutUsers_device_truck_assignment_removed_byTousersInput = {
    id?: string
    assigned_at?: Date | string
    removed_at?: Date | string | null
    is_active?: boolean | null
    users_device_truck_assignment_assigned_byTousers?: usersCreateNestedOneWithoutDevice_truck_assignment_device_truck_assignment_assigned_byTousersInput
    device?: deviceCreateNestedOneWithoutDevice_truck_assignmentInput
    truck?: truckCreateNestedOneWithoutDevice_truck_assignmentInput
  }

  export type device_truck_assignmentUncheckedCreateWithoutUsers_device_truck_assignment_removed_byTousersInput = {
    id?: string
    device_id?: string | null
    truck_id?: string | null
    assigned_at?: Date | string
    assigned_by?: string | null
    removed_at?: Date | string | null
    is_active?: boolean | null
  }

  export type device_truck_assignmentCreateOrConnectWithoutUsers_device_truck_assignment_removed_byTousersInput = {
    where: device_truck_assignmentWhereUniqueInput
    create: XOR<device_truck_assignmentCreateWithoutUsers_device_truck_assignment_removed_byTousersInput, device_truck_assignmentUncheckedCreateWithoutUsers_device_truck_assignment_removed_byTousersInput>
  }

  export type device_truck_assignmentCreateManyUsers_device_truck_assignment_removed_byTousersInputEnvelope = {
    data: device_truck_assignmentCreateManyUsers_device_truck_assignment_removed_byTousersInput | device_truck_assignmentCreateManyUsers_device_truck_assignment_removed_byTousersInput[]
    skipDuplicates?: boolean
  }

  export type device_truck_assignmentUpsertWithWhereUniqueWithoutUsers_device_truck_assignment_assigned_byTousersInput = {
    where: device_truck_assignmentWhereUniqueInput
    update: XOR<device_truck_assignmentUpdateWithoutUsers_device_truck_assignment_assigned_byTousersInput, device_truck_assignmentUncheckedUpdateWithoutUsers_device_truck_assignment_assigned_byTousersInput>
    create: XOR<device_truck_assignmentCreateWithoutUsers_device_truck_assignment_assigned_byTousersInput, device_truck_assignmentUncheckedCreateWithoutUsers_device_truck_assignment_assigned_byTousersInput>
  }

  export type device_truck_assignmentUpdateWithWhereUniqueWithoutUsers_device_truck_assignment_assigned_byTousersInput = {
    where: device_truck_assignmentWhereUniqueInput
    data: XOR<device_truck_assignmentUpdateWithoutUsers_device_truck_assignment_assigned_byTousersInput, device_truck_assignmentUncheckedUpdateWithoutUsers_device_truck_assignment_assigned_byTousersInput>
  }

  export type device_truck_assignmentUpdateManyWithWhereWithoutUsers_device_truck_assignment_assigned_byTousersInput = {
    where: device_truck_assignmentScalarWhereInput
    data: XOR<device_truck_assignmentUpdateManyMutationInput, device_truck_assignmentUncheckedUpdateManyWithoutUsers_device_truck_assignment_assigned_byTousersInput>
  }

  export type device_truck_assignmentUpsertWithWhereUniqueWithoutUsers_device_truck_assignment_removed_byTousersInput = {
    where: device_truck_assignmentWhereUniqueInput
    update: XOR<device_truck_assignmentUpdateWithoutUsers_device_truck_assignment_removed_byTousersInput, device_truck_assignmentUncheckedUpdateWithoutUsers_device_truck_assignment_removed_byTousersInput>
    create: XOR<device_truck_assignmentCreateWithoutUsers_device_truck_assignment_removed_byTousersInput, device_truck_assignmentUncheckedCreateWithoutUsers_device_truck_assignment_removed_byTousersInput>
  }

  export type device_truck_assignmentUpdateWithWhereUniqueWithoutUsers_device_truck_assignment_removed_byTousersInput = {
    where: device_truck_assignmentWhereUniqueInput
    data: XOR<device_truck_assignmentUpdateWithoutUsers_device_truck_assignment_removed_byTousersInput, device_truck_assignmentUncheckedUpdateWithoutUsers_device_truck_assignment_removed_byTousersInput>
  }

  export type device_truck_assignmentUpdateManyWithWhereWithoutUsers_device_truck_assignment_removed_byTousersInput = {
    where: device_truck_assignmentScalarWhereInput
    data: XOR<device_truck_assignmentUpdateManyMutationInput, device_truck_assignmentUncheckedUpdateManyWithoutUsers_device_truck_assignment_removed_byTousersInput>
  }

  export type device_status_eventCreateManyDeviceInput = {
    id?: string
    truck_id: string
    host_bat?: number | null
    repeater1_bat?: number | null
    repeater2_bat?: number | null
    lock_state?: number | null
    reported_at?: Date | string
    created_by?: string | null
  }

  export type device_truck_assignmentCreateManyDeviceInput = {
    id?: string
    truck_id?: string | null
    assigned_at?: Date | string
    assigned_by?: string | null
    removed_at?: Date | string | null
    removed_by?: string | null
    is_active?: boolean | null
  }

  export type hub_temperature_eventCreateManyDeviceInput = {
    id?: string
    truck_id: string
    hub_no?: number | null
    temp_celsius?: number | null
    ex_type?: string | null
    battery_level?: number | null
    changed_at?: Date | string
    created_by?: string | null
  }

  export type lock_eventCreateManyDeviceInput = {
    id?: string
    truck_id: string
    is_lock?: number | null
    reported_at?: Date | string
    created_by?: string | null
  }

  export type sensorCreateManyDeviceInput = {
    id?: string
    type?: string | null
    position_no: number
    sn?: string | null
    installed_at?: Date | string | null
    removed_at?: Date | string | null
    created_by?: string | null
    updated_by?: string | null
  }

  export type tire_pressure_eventCreateManyDeviceInput = {
    id?: string
    truck_id: string
    tire_no: number
    pressure_kpa?: number | null
    temp_celsius?: number | null
    ex_type?: string | null
    battery_level?: number | null
    changed_at?: Date | string
    created_by?: string | null
  }

  export type device_status_eventUpdateWithoutDeviceInput = {
    id?: StringFieldUpdateOperationsInput | string
    host_bat?: NullableIntFieldUpdateOperationsInput | number | null
    repeater1_bat?: NullableIntFieldUpdateOperationsInput | number | null
    repeater2_bat?: NullableIntFieldUpdateOperationsInput | number | null
    lock_state?: NullableIntFieldUpdateOperationsInput | number | null
    reported_at?: DateTimeFieldUpdateOperationsInput | Date | string
    created_by?: NullableStringFieldUpdateOperationsInput | string | null
    truck?: truckUpdateOneRequiredWithoutDevice_status_eventNestedInput
  }

  export type device_status_eventUncheckedUpdateWithoutDeviceInput = {
    id?: StringFieldUpdateOperationsInput | string
    truck_id?: StringFieldUpdateOperationsInput | string
    host_bat?: NullableIntFieldUpdateOperationsInput | number | null
    repeater1_bat?: NullableIntFieldUpdateOperationsInput | number | null
    repeater2_bat?: NullableIntFieldUpdateOperationsInput | number | null
    lock_state?: NullableIntFieldUpdateOperationsInput | number | null
    reported_at?: DateTimeFieldUpdateOperationsInput | Date | string
    created_by?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type device_status_eventUncheckedUpdateManyWithoutDeviceInput = {
    id?: StringFieldUpdateOperationsInput | string
    truck_id?: StringFieldUpdateOperationsInput | string
    host_bat?: NullableIntFieldUpdateOperationsInput | number | null
    repeater1_bat?: NullableIntFieldUpdateOperationsInput | number | null
    repeater2_bat?: NullableIntFieldUpdateOperationsInput | number | null
    lock_state?: NullableIntFieldUpdateOperationsInput | number | null
    reported_at?: DateTimeFieldUpdateOperationsInput | Date | string
    created_by?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type device_truck_assignmentUpdateWithoutDeviceInput = {
    id?: StringFieldUpdateOperationsInput | string
    assigned_at?: DateTimeFieldUpdateOperationsInput | Date | string
    removed_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    is_active?: NullableBoolFieldUpdateOperationsInput | boolean | null
    users_device_truck_assignment_assigned_byTousers?: usersUpdateOneWithoutDevice_truck_assignment_device_truck_assignment_assigned_byTousersNestedInput
    users_device_truck_assignment_removed_byTousers?: usersUpdateOneWithoutDevice_truck_assignment_device_truck_assignment_removed_byTousersNestedInput
    truck?: truckUpdateOneWithoutDevice_truck_assignmentNestedInput
  }

  export type device_truck_assignmentUncheckedUpdateWithoutDeviceInput = {
    id?: StringFieldUpdateOperationsInput | string
    truck_id?: NullableStringFieldUpdateOperationsInput | string | null
    assigned_at?: DateTimeFieldUpdateOperationsInput | Date | string
    assigned_by?: NullableStringFieldUpdateOperationsInput | string | null
    removed_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    removed_by?: NullableStringFieldUpdateOperationsInput | string | null
    is_active?: NullableBoolFieldUpdateOperationsInput | boolean | null
  }

  export type device_truck_assignmentUncheckedUpdateManyWithoutDeviceInput = {
    id?: StringFieldUpdateOperationsInput | string
    truck_id?: NullableStringFieldUpdateOperationsInput | string | null
    assigned_at?: DateTimeFieldUpdateOperationsInput | Date | string
    assigned_by?: NullableStringFieldUpdateOperationsInput | string | null
    removed_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    removed_by?: NullableStringFieldUpdateOperationsInput | string | null
    is_active?: NullableBoolFieldUpdateOperationsInput | boolean | null
  }

  export type gps_positionUpdateWithoutDeviceInput = {
    id?: BigIntFieldUpdateOperationsInput | bigint | number
    ts?: DateTimeFieldUpdateOperationsInput | Date | string
    speed_kph?: NullableFloatFieldUpdateOperationsInput | number | null
    heading_deg?: NullableFloatFieldUpdateOperationsInput | number | null
    hdop?: NullableFloatFieldUpdateOperationsInput | number | null
    source?: NullableStringFieldUpdateOperationsInput | string | null
    truck?: truckUpdateOneRequiredWithoutGps_positionNestedInput
  }

  export type gps_positionUncheckedUpdateWithoutDeviceInput = {
    id?: BigIntFieldUpdateOperationsInput | bigint | number
    truck_id?: StringFieldUpdateOperationsInput | string
    ts?: DateTimeFieldUpdateOperationsInput | Date | string
    speed_kph?: NullableFloatFieldUpdateOperationsInput | number | null
    heading_deg?: NullableFloatFieldUpdateOperationsInput | number | null
    hdop?: NullableFloatFieldUpdateOperationsInput | number | null
    source?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type gps_positionUncheckedUpdateManyWithoutDeviceInput = {
    id?: BigIntFieldUpdateOperationsInput | bigint | number
    truck_id?: StringFieldUpdateOperationsInput | string
    ts?: DateTimeFieldUpdateOperationsInput | Date | string
    speed_kph?: NullableFloatFieldUpdateOperationsInput | number | null
    heading_deg?: NullableFloatFieldUpdateOperationsInput | number | null
    hdop?: NullableFloatFieldUpdateOperationsInput | number | null
    source?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type hub_temperature_eventUpdateWithoutDeviceInput = {
    id?: StringFieldUpdateOperationsInput | string
    hub_no?: NullableIntFieldUpdateOperationsInput | number | null
    temp_celsius?: NullableFloatFieldUpdateOperationsInput | number | null
    ex_type?: NullableStringFieldUpdateOperationsInput | string | null
    battery_level?: NullableIntFieldUpdateOperationsInput | number | null
    changed_at?: DateTimeFieldUpdateOperationsInput | Date | string
    created_by?: NullableStringFieldUpdateOperationsInput | string | null
    truck?: truckUpdateOneRequiredWithoutHub_temperature_eventNestedInput
  }

  export type hub_temperature_eventUncheckedUpdateWithoutDeviceInput = {
    id?: StringFieldUpdateOperationsInput | string
    truck_id?: StringFieldUpdateOperationsInput | string
    hub_no?: NullableIntFieldUpdateOperationsInput | number | null
    temp_celsius?: NullableFloatFieldUpdateOperationsInput | number | null
    ex_type?: NullableStringFieldUpdateOperationsInput | string | null
    battery_level?: NullableIntFieldUpdateOperationsInput | number | null
    changed_at?: DateTimeFieldUpdateOperationsInput | Date | string
    created_by?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type hub_temperature_eventUncheckedUpdateManyWithoutDeviceInput = {
    id?: StringFieldUpdateOperationsInput | string
    truck_id?: StringFieldUpdateOperationsInput | string
    hub_no?: NullableIntFieldUpdateOperationsInput | number | null
    temp_celsius?: NullableFloatFieldUpdateOperationsInput | number | null
    ex_type?: NullableStringFieldUpdateOperationsInput | string | null
    battery_level?: NullableIntFieldUpdateOperationsInput | number | null
    changed_at?: DateTimeFieldUpdateOperationsInput | Date | string
    created_by?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type lock_eventUpdateWithoutDeviceInput = {
    id?: StringFieldUpdateOperationsInput | string
    is_lock?: NullableIntFieldUpdateOperationsInput | number | null
    reported_at?: DateTimeFieldUpdateOperationsInput | Date | string
    created_by?: NullableStringFieldUpdateOperationsInput | string | null
    truck?: truckUpdateOneRequiredWithoutLock_eventNestedInput
  }

  export type lock_eventUncheckedUpdateWithoutDeviceInput = {
    id?: StringFieldUpdateOperationsInput | string
    truck_id?: StringFieldUpdateOperationsInput | string
    is_lock?: NullableIntFieldUpdateOperationsInput | number | null
    reported_at?: DateTimeFieldUpdateOperationsInput | Date | string
    created_by?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type lock_eventUncheckedUpdateManyWithoutDeviceInput = {
    id?: StringFieldUpdateOperationsInput | string
    truck_id?: StringFieldUpdateOperationsInput | string
    is_lock?: NullableIntFieldUpdateOperationsInput | number | null
    reported_at?: DateTimeFieldUpdateOperationsInput | Date | string
    created_by?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type sensorUpdateWithoutDeviceInput = {
    id?: StringFieldUpdateOperationsInput | string
    type?: NullableStringFieldUpdateOperationsInput | string | null
    position_no?: IntFieldUpdateOperationsInput | number
    sn?: NullableStringFieldUpdateOperationsInput | string | null
    installed_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    removed_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    created_by?: NullableStringFieldUpdateOperationsInput | string | null
    updated_by?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type sensorUncheckedUpdateWithoutDeviceInput = {
    id?: StringFieldUpdateOperationsInput | string
    type?: NullableStringFieldUpdateOperationsInput | string | null
    position_no?: IntFieldUpdateOperationsInput | number
    sn?: NullableStringFieldUpdateOperationsInput | string | null
    installed_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    removed_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    created_by?: NullableStringFieldUpdateOperationsInput | string | null
    updated_by?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type sensorUncheckedUpdateManyWithoutDeviceInput = {
    id?: StringFieldUpdateOperationsInput | string
    type?: NullableStringFieldUpdateOperationsInput | string | null
    position_no?: IntFieldUpdateOperationsInput | number
    sn?: NullableStringFieldUpdateOperationsInput | string | null
    installed_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    removed_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    created_by?: NullableStringFieldUpdateOperationsInput | string | null
    updated_by?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type tire_pressure_eventUpdateWithoutDeviceInput = {
    id?: StringFieldUpdateOperationsInput | string
    tire_no?: IntFieldUpdateOperationsInput | number
    pressure_kpa?: NullableFloatFieldUpdateOperationsInput | number | null
    temp_celsius?: NullableFloatFieldUpdateOperationsInput | number | null
    ex_type?: NullableStringFieldUpdateOperationsInput | string | null
    battery_level?: NullableIntFieldUpdateOperationsInput | number | null
    changed_at?: DateTimeFieldUpdateOperationsInput | Date | string
    created_by?: NullableStringFieldUpdateOperationsInput | string | null
    truck?: truckUpdateOneRequiredWithoutTire_pressure_eventNestedInput
  }

  export type tire_pressure_eventUncheckedUpdateWithoutDeviceInput = {
    id?: StringFieldUpdateOperationsInput | string
    truck_id?: StringFieldUpdateOperationsInput | string
    tire_no?: IntFieldUpdateOperationsInput | number
    pressure_kpa?: NullableFloatFieldUpdateOperationsInput | number | null
    temp_celsius?: NullableFloatFieldUpdateOperationsInput | number | null
    ex_type?: NullableStringFieldUpdateOperationsInput | string | null
    battery_level?: NullableIntFieldUpdateOperationsInput | number | null
    changed_at?: DateTimeFieldUpdateOperationsInput | Date | string
    created_by?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type tire_pressure_eventUncheckedUpdateManyWithoutDeviceInput = {
    id?: StringFieldUpdateOperationsInput | string
    truck_id?: StringFieldUpdateOperationsInput | string
    tire_no?: IntFieldUpdateOperationsInput | number
    pressure_kpa?: NullableFloatFieldUpdateOperationsInput | number | null
    temp_celsius?: NullableFloatFieldUpdateOperationsInput | number | null
    ex_type?: NullableStringFieldUpdateOperationsInput | string | null
    battery_level?: NullableIntFieldUpdateOperationsInput | number | null
    changed_at?: DateTimeFieldUpdateOperationsInput | Date | string
    created_by?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type truckCreateManyFleet_groupInput = {
    id?: string
    plate_number: string
    vin?: string | null
    name?: string | null
    model?: string | null
    year?: number | null
    tire_config?: string | null
    created_at?: Date | string
    created_by?: string | null
    updated_by?: string | null
  }

  export type truckUpdateWithoutFleet_groupInput = {
    id?: StringFieldUpdateOperationsInput | string
    plate_number?: StringFieldUpdateOperationsInput | string
    vin?: NullableStringFieldUpdateOperationsInput | string | null
    name?: NullableStringFieldUpdateOperationsInput | string | null
    model?: NullableStringFieldUpdateOperationsInput | string | null
    year?: NullableIntFieldUpdateOperationsInput | number | null
    tire_config?: NullableStringFieldUpdateOperationsInput | string | null
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    created_by?: NullableStringFieldUpdateOperationsInput | string | null
    updated_by?: NullableStringFieldUpdateOperationsInput | string | null
    alert_event?: alert_eventUpdateManyWithoutTruckNestedInput
    daily_route?: daily_routeUpdateManyWithoutTruckNestedInput
    device?: deviceUpdateManyWithoutTruckNestedInput
    device_status_event?: device_status_eventUpdateManyWithoutTruckNestedInput
    device_truck_assignment?: device_truck_assignmentUpdateManyWithoutTruckNestedInput
    fuel_level_event?: fuel_level_eventUpdateManyWithoutTruckNestedInput
    gps_position?: gps_positionUpdateManyWithoutTruckNestedInput
    hub_temperature_event?: hub_temperature_eventUpdateManyWithoutTruckNestedInput
    lock_event?: lock_eventUpdateManyWithoutTruckNestedInput
    sensor_data_raw?: sensor_data_rawUpdateManyWithoutTruckNestedInput
    speed_event?: speed_eventUpdateManyWithoutTruckNestedInput
    tire_position_config?: tire_position_configUpdateManyWithoutTruckNestedInput
    tire_pressure_event?: tire_pressure_eventUpdateManyWithoutTruckNestedInput
    trip?: tripUpdateManyWithoutTruckNestedInput
    truck_status_event?: truck_status_eventUpdateManyWithoutTruckNestedInput
  }

  export type truckUncheckedUpdateWithoutFleet_groupInput = {
    id?: StringFieldUpdateOperationsInput | string
    plate_number?: StringFieldUpdateOperationsInput | string
    vin?: NullableStringFieldUpdateOperationsInput | string | null
    name?: NullableStringFieldUpdateOperationsInput | string | null
    model?: NullableStringFieldUpdateOperationsInput | string | null
    year?: NullableIntFieldUpdateOperationsInput | number | null
    tire_config?: NullableStringFieldUpdateOperationsInput | string | null
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    created_by?: NullableStringFieldUpdateOperationsInput | string | null
    updated_by?: NullableStringFieldUpdateOperationsInput | string | null
    alert_event?: alert_eventUncheckedUpdateManyWithoutTruckNestedInput
    daily_route?: daily_routeUncheckedUpdateManyWithoutTruckNestedInput
    device?: deviceUncheckedUpdateManyWithoutTruckNestedInput
    device_status_event?: device_status_eventUncheckedUpdateManyWithoutTruckNestedInput
    device_truck_assignment?: device_truck_assignmentUncheckedUpdateManyWithoutTruckNestedInput
    fuel_level_event?: fuel_level_eventUncheckedUpdateManyWithoutTruckNestedInput
    gps_position?: gps_positionUncheckedUpdateManyWithoutTruckNestedInput
    hub_temperature_event?: hub_temperature_eventUncheckedUpdateManyWithoutTruckNestedInput
    lock_event?: lock_eventUncheckedUpdateManyWithoutTruckNestedInput
    sensor_data_raw?: sensor_data_rawUncheckedUpdateManyWithoutTruckNestedInput
    speed_event?: speed_eventUncheckedUpdateManyWithoutTruckNestedInput
    tire_position_config?: tire_position_configUncheckedUpdateManyWithoutTruckNestedInput
    tire_pressure_event?: tire_pressure_eventUncheckedUpdateManyWithoutTruckNestedInput
    trip?: tripUncheckedUpdateManyWithoutTruckNestedInput
    truck_status_event?: truck_status_eventUncheckedUpdateManyWithoutTruckNestedInput
  }

  export type truckUncheckedUpdateManyWithoutFleet_groupInput = {
    id?: StringFieldUpdateOperationsInput | string
    plate_number?: StringFieldUpdateOperationsInput | string
    vin?: NullableStringFieldUpdateOperationsInput | string | null
    name?: NullableStringFieldUpdateOperationsInput | string | null
    model?: NullableStringFieldUpdateOperationsInput | string | null
    year?: NullableIntFieldUpdateOperationsInput | number | null
    tire_config?: NullableStringFieldUpdateOperationsInput | string | null
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    created_by?: NullableStringFieldUpdateOperationsInput | string | null
    updated_by?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type sensor_processing_queueCreateManySensor_data_rawInput = {
    id?: string
    priority?: number | null
    attempts?: number | null
    max_attempts?: number | null
    error_message?: string | null
    created_at?: Date | string | null
    processed_at?: Date | string | null
  }

  export type sensor_processing_queueUpdateWithoutSensor_data_rawInput = {
    id?: StringFieldUpdateOperationsInput | string
    priority?: NullableIntFieldUpdateOperationsInput | number | null
    attempts?: NullableIntFieldUpdateOperationsInput | number | null
    max_attempts?: NullableIntFieldUpdateOperationsInput | number | null
    error_message?: NullableStringFieldUpdateOperationsInput | string | null
    created_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    processed_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type sensor_processing_queueUncheckedUpdateWithoutSensor_data_rawInput = {
    id?: StringFieldUpdateOperationsInput | string
    priority?: NullableIntFieldUpdateOperationsInput | number | null
    attempts?: NullableIntFieldUpdateOperationsInput | number | null
    max_attempts?: NullableIntFieldUpdateOperationsInput | number | null
    error_message?: NullableStringFieldUpdateOperationsInput | string | null
    created_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    processed_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type sensor_processing_queueUncheckedUpdateManyWithoutSensor_data_rawInput = {
    id?: StringFieldUpdateOperationsInput | string
    priority?: NullableIntFieldUpdateOperationsInput | number | null
    attempts?: NullableIntFieldUpdateOperationsInput | number | null
    max_attempts?: NullableIntFieldUpdateOperationsInput | number | null
    error_message?: NullableStringFieldUpdateOperationsInput | string | null
    created_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    processed_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type alert_eventCreateManyTruckInput = {
    id?: string
    type: $Enums.alert_type
    severity?: number | null
    detail?: NullableJsonNullValueInput | InputJsonValue
    occurred_at?: Date | string
    acknowledged?: boolean
    created_by?: string | null
  }

  export type deviceCreateManyTruckInput = {
    id?: string
    sn: string
    sim_number?: string | null
    installed_at?: Date | string
    removed_at?: Date | string | null
    created_by?: string | null
    updated_by?: string | null
  }

  export type device_status_eventCreateManyTruckInput = {
    id?: string
    device_id: string
    host_bat?: number | null
    repeater1_bat?: number | null
    repeater2_bat?: number | null
    lock_state?: number | null
    reported_at?: Date | string
    created_by?: string | null
  }

  export type device_truck_assignmentCreateManyTruckInput = {
    id?: string
    device_id?: string | null
    assigned_at?: Date | string
    assigned_by?: string | null
    removed_at?: Date | string | null
    removed_by?: string | null
    is_active?: boolean | null
  }

  export type fuel_level_eventCreateManyTruckInput = {
    id?: string
    fuel_percent?: number | null
    changed_at: Date | string
    source?: string | null
    created_by?: string | null
  }

  export type hub_temperature_eventCreateManyTruckInput = {
    id?: string
    device_id: string
    hub_no?: number | null
    temp_celsius?: number | null
    ex_type?: string | null
    battery_level?: number | null
    changed_at?: Date | string
    created_by?: string | null
  }

  export type lock_eventCreateManyTruckInput = {
    id?: string
    device_id: string
    is_lock?: number | null
    reported_at?: Date | string
    created_by?: string | null
  }

  export type sensor_data_rawCreateManyTruckInput = {
    id?: string
    device_sn: string
    cmd_type: string
    tire_no?: number | null
    raw_json: JsonNullValueInput | InputJsonValue
    processed?: boolean | null
    received_at?: Date | string
    processed_at?: Date | string | null
  }

  export type speed_eventCreateManyTruckInput = {
    id?: string
    speed_kph?: number | null
    changed_at: Date | string
    source?: string | null
    created_by?: string | null
  }

  export type tire_position_configCreateManyTruckInput = {
    id?: string
    tire_no: number
    position_name?: string | null
    wheel_type?: string | null
    is_active?: boolean | null
    created_at?: Date | string | null
  }

  export type tire_pressure_eventCreateManyTruckInput = {
    id?: string
    device_id: string
    tire_no: number
    pressure_kpa?: number | null
    temp_celsius?: number | null
    ex_type?: string | null
    battery_level?: number | null
    changed_at?: Date | string
    created_by?: string | null
  }

  export type tripCreateManyTruckInput = {
    id?: string
    start_ts: Date | string
    end_ts?: Date | string | null
  }

  export type truck_status_eventCreateManyTruckInput = {
    id?: string
    status: $Enums.truck_status
    note?: string | null
    changed_at?: Date | string
    created_by?: string | null
  }

  export type alert_eventUpdateWithoutTruckInput = {
    id?: StringFieldUpdateOperationsInput | string
    type?: Enumalert_typeFieldUpdateOperationsInput | $Enums.alert_type
    severity?: NullableIntFieldUpdateOperationsInput | number | null
    detail?: NullableJsonNullValueInput | InputJsonValue
    occurred_at?: DateTimeFieldUpdateOperationsInput | Date | string
    acknowledged?: BoolFieldUpdateOperationsInput | boolean
    created_by?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type alert_eventUncheckedUpdateWithoutTruckInput = {
    id?: StringFieldUpdateOperationsInput | string
    type?: Enumalert_typeFieldUpdateOperationsInput | $Enums.alert_type
    severity?: NullableIntFieldUpdateOperationsInput | number | null
    detail?: NullableJsonNullValueInput | InputJsonValue
    occurred_at?: DateTimeFieldUpdateOperationsInput | Date | string
    acknowledged?: BoolFieldUpdateOperationsInput | boolean
    created_by?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type alert_eventUncheckedUpdateManyWithoutTruckInput = {
    id?: StringFieldUpdateOperationsInput | string
    type?: Enumalert_typeFieldUpdateOperationsInput | $Enums.alert_type
    severity?: NullableIntFieldUpdateOperationsInput | number | null
    detail?: NullableJsonNullValueInput | InputJsonValue
    occurred_at?: DateTimeFieldUpdateOperationsInput | Date | string
    acknowledged?: BoolFieldUpdateOperationsInput | boolean
    created_by?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type daily_routeUpdateWithoutTruckInput = {
    id?: StringFieldUpdateOperationsInput | string
    route_date?: DateTimeFieldUpdateOperationsInput | Date | string
    point_count?: IntFieldUpdateOperationsInput | number
    generated_at?: DateTimeFieldUpdateOperationsInput | Date | string
    created_by?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type daily_routeUncheckedUpdateWithoutTruckInput = {
    id?: StringFieldUpdateOperationsInput | string
    route_date?: DateTimeFieldUpdateOperationsInput | Date | string
    point_count?: IntFieldUpdateOperationsInput | number
    generated_at?: DateTimeFieldUpdateOperationsInput | Date | string
    created_by?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type daily_routeUncheckedUpdateManyWithoutTruckInput = {
    id?: StringFieldUpdateOperationsInput | string
    route_date?: DateTimeFieldUpdateOperationsInput | Date | string
    point_count?: IntFieldUpdateOperationsInput | number
    generated_at?: DateTimeFieldUpdateOperationsInput | Date | string
    created_by?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type deviceUpdateWithoutTruckInput = {
    id?: StringFieldUpdateOperationsInput | string
    sn?: StringFieldUpdateOperationsInput | string
    sim_number?: NullableStringFieldUpdateOperationsInput | string | null
    installed_at?: DateTimeFieldUpdateOperationsInput | Date | string
    removed_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    created_by?: NullableStringFieldUpdateOperationsInput | string | null
    updated_by?: NullableStringFieldUpdateOperationsInput | string | null
    device_status_event?: device_status_eventUpdateManyWithoutDeviceNestedInput
    device_truck_assignment?: device_truck_assignmentUpdateManyWithoutDeviceNestedInput
    gps_position?: gps_positionUpdateManyWithoutDeviceNestedInput
    hub_temperature_event?: hub_temperature_eventUpdateManyWithoutDeviceNestedInput
    lock_event?: lock_eventUpdateManyWithoutDeviceNestedInput
    sensor?: sensorUpdateManyWithoutDeviceNestedInput
    tire_pressure_event?: tire_pressure_eventUpdateManyWithoutDeviceNestedInput
  }

  export type deviceUncheckedUpdateWithoutTruckInput = {
    id?: StringFieldUpdateOperationsInput | string
    sn?: StringFieldUpdateOperationsInput | string
    sim_number?: NullableStringFieldUpdateOperationsInput | string | null
    installed_at?: DateTimeFieldUpdateOperationsInput | Date | string
    removed_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    created_by?: NullableStringFieldUpdateOperationsInput | string | null
    updated_by?: NullableStringFieldUpdateOperationsInput | string | null
    device_status_event?: device_status_eventUncheckedUpdateManyWithoutDeviceNestedInput
    device_truck_assignment?: device_truck_assignmentUncheckedUpdateManyWithoutDeviceNestedInput
    gps_position?: gps_positionUncheckedUpdateManyWithoutDeviceNestedInput
    hub_temperature_event?: hub_temperature_eventUncheckedUpdateManyWithoutDeviceNestedInput
    lock_event?: lock_eventUncheckedUpdateManyWithoutDeviceNestedInput
    sensor?: sensorUncheckedUpdateManyWithoutDeviceNestedInput
    tire_pressure_event?: tire_pressure_eventUncheckedUpdateManyWithoutDeviceNestedInput
  }

  export type deviceUncheckedUpdateManyWithoutTruckInput = {
    id?: StringFieldUpdateOperationsInput | string
    sn?: StringFieldUpdateOperationsInput | string
    sim_number?: NullableStringFieldUpdateOperationsInput | string | null
    installed_at?: DateTimeFieldUpdateOperationsInput | Date | string
    removed_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    created_by?: NullableStringFieldUpdateOperationsInput | string | null
    updated_by?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type device_status_eventUpdateWithoutTruckInput = {
    id?: StringFieldUpdateOperationsInput | string
    host_bat?: NullableIntFieldUpdateOperationsInput | number | null
    repeater1_bat?: NullableIntFieldUpdateOperationsInput | number | null
    repeater2_bat?: NullableIntFieldUpdateOperationsInput | number | null
    lock_state?: NullableIntFieldUpdateOperationsInput | number | null
    reported_at?: DateTimeFieldUpdateOperationsInput | Date | string
    created_by?: NullableStringFieldUpdateOperationsInput | string | null
    device?: deviceUpdateOneRequiredWithoutDevice_status_eventNestedInput
  }

  export type device_status_eventUncheckedUpdateWithoutTruckInput = {
    id?: StringFieldUpdateOperationsInput | string
    device_id?: StringFieldUpdateOperationsInput | string
    host_bat?: NullableIntFieldUpdateOperationsInput | number | null
    repeater1_bat?: NullableIntFieldUpdateOperationsInput | number | null
    repeater2_bat?: NullableIntFieldUpdateOperationsInput | number | null
    lock_state?: NullableIntFieldUpdateOperationsInput | number | null
    reported_at?: DateTimeFieldUpdateOperationsInput | Date | string
    created_by?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type device_status_eventUncheckedUpdateManyWithoutTruckInput = {
    id?: StringFieldUpdateOperationsInput | string
    device_id?: StringFieldUpdateOperationsInput | string
    host_bat?: NullableIntFieldUpdateOperationsInput | number | null
    repeater1_bat?: NullableIntFieldUpdateOperationsInput | number | null
    repeater2_bat?: NullableIntFieldUpdateOperationsInput | number | null
    lock_state?: NullableIntFieldUpdateOperationsInput | number | null
    reported_at?: DateTimeFieldUpdateOperationsInput | Date | string
    created_by?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type device_truck_assignmentUpdateWithoutTruckInput = {
    id?: StringFieldUpdateOperationsInput | string
    assigned_at?: DateTimeFieldUpdateOperationsInput | Date | string
    removed_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    is_active?: NullableBoolFieldUpdateOperationsInput | boolean | null
    users_device_truck_assignment_assigned_byTousers?: usersUpdateOneWithoutDevice_truck_assignment_device_truck_assignment_assigned_byTousersNestedInput
    device?: deviceUpdateOneWithoutDevice_truck_assignmentNestedInput
    users_device_truck_assignment_removed_byTousers?: usersUpdateOneWithoutDevice_truck_assignment_device_truck_assignment_removed_byTousersNestedInput
  }

  export type device_truck_assignmentUncheckedUpdateWithoutTruckInput = {
    id?: StringFieldUpdateOperationsInput | string
    device_id?: NullableStringFieldUpdateOperationsInput | string | null
    assigned_at?: DateTimeFieldUpdateOperationsInput | Date | string
    assigned_by?: NullableStringFieldUpdateOperationsInput | string | null
    removed_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    removed_by?: NullableStringFieldUpdateOperationsInput | string | null
    is_active?: NullableBoolFieldUpdateOperationsInput | boolean | null
  }

  export type device_truck_assignmentUncheckedUpdateManyWithoutTruckInput = {
    id?: StringFieldUpdateOperationsInput | string
    device_id?: NullableStringFieldUpdateOperationsInput | string | null
    assigned_at?: DateTimeFieldUpdateOperationsInput | Date | string
    assigned_by?: NullableStringFieldUpdateOperationsInput | string | null
    removed_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    removed_by?: NullableStringFieldUpdateOperationsInput | string | null
    is_active?: NullableBoolFieldUpdateOperationsInput | boolean | null
  }

  export type fuel_level_eventUpdateWithoutTruckInput = {
    id?: StringFieldUpdateOperationsInput | string
    fuel_percent?: NullableFloatFieldUpdateOperationsInput | number | null
    changed_at?: DateTimeFieldUpdateOperationsInput | Date | string
    source?: NullableStringFieldUpdateOperationsInput | string | null
    created_by?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type fuel_level_eventUncheckedUpdateWithoutTruckInput = {
    id?: StringFieldUpdateOperationsInput | string
    fuel_percent?: NullableFloatFieldUpdateOperationsInput | number | null
    changed_at?: DateTimeFieldUpdateOperationsInput | Date | string
    source?: NullableStringFieldUpdateOperationsInput | string | null
    created_by?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type fuel_level_eventUncheckedUpdateManyWithoutTruckInput = {
    id?: StringFieldUpdateOperationsInput | string
    fuel_percent?: NullableFloatFieldUpdateOperationsInput | number | null
    changed_at?: DateTimeFieldUpdateOperationsInput | Date | string
    source?: NullableStringFieldUpdateOperationsInput | string | null
    created_by?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type gps_positionUpdateWithoutTruckInput = {
    id?: BigIntFieldUpdateOperationsInput | bigint | number
    ts?: DateTimeFieldUpdateOperationsInput | Date | string
    speed_kph?: NullableFloatFieldUpdateOperationsInput | number | null
    heading_deg?: NullableFloatFieldUpdateOperationsInput | number | null
    hdop?: NullableFloatFieldUpdateOperationsInput | number | null
    source?: NullableStringFieldUpdateOperationsInput | string | null
    device?: deviceUpdateOneWithoutGps_positionNestedInput
  }

  export type gps_positionUncheckedUpdateWithoutTruckInput = {
    id?: BigIntFieldUpdateOperationsInput | bigint | number
    device_id?: NullableStringFieldUpdateOperationsInput | string | null
    ts?: DateTimeFieldUpdateOperationsInput | Date | string
    speed_kph?: NullableFloatFieldUpdateOperationsInput | number | null
    heading_deg?: NullableFloatFieldUpdateOperationsInput | number | null
    hdop?: NullableFloatFieldUpdateOperationsInput | number | null
    source?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type gps_positionUncheckedUpdateManyWithoutTruckInput = {
    id?: BigIntFieldUpdateOperationsInput | bigint | number
    device_id?: NullableStringFieldUpdateOperationsInput | string | null
    ts?: DateTimeFieldUpdateOperationsInput | Date | string
    speed_kph?: NullableFloatFieldUpdateOperationsInput | number | null
    heading_deg?: NullableFloatFieldUpdateOperationsInput | number | null
    hdop?: NullableFloatFieldUpdateOperationsInput | number | null
    source?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type hub_temperature_eventUpdateWithoutTruckInput = {
    id?: StringFieldUpdateOperationsInput | string
    hub_no?: NullableIntFieldUpdateOperationsInput | number | null
    temp_celsius?: NullableFloatFieldUpdateOperationsInput | number | null
    ex_type?: NullableStringFieldUpdateOperationsInput | string | null
    battery_level?: NullableIntFieldUpdateOperationsInput | number | null
    changed_at?: DateTimeFieldUpdateOperationsInput | Date | string
    created_by?: NullableStringFieldUpdateOperationsInput | string | null
    device?: deviceUpdateOneRequiredWithoutHub_temperature_eventNestedInput
  }

  export type hub_temperature_eventUncheckedUpdateWithoutTruckInput = {
    id?: StringFieldUpdateOperationsInput | string
    device_id?: StringFieldUpdateOperationsInput | string
    hub_no?: NullableIntFieldUpdateOperationsInput | number | null
    temp_celsius?: NullableFloatFieldUpdateOperationsInput | number | null
    ex_type?: NullableStringFieldUpdateOperationsInput | string | null
    battery_level?: NullableIntFieldUpdateOperationsInput | number | null
    changed_at?: DateTimeFieldUpdateOperationsInput | Date | string
    created_by?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type hub_temperature_eventUncheckedUpdateManyWithoutTruckInput = {
    id?: StringFieldUpdateOperationsInput | string
    device_id?: StringFieldUpdateOperationsInput | string
    hub_no?: NullableIntFieldUpdateOperationsInput | number | null
    temp_celsius?: NullableFloatFieldUpdateOperationsInput | number | null
    ex_type?: NullableStringFieldUpdateOperationsInput | string | null
    battery_level?: NullableIntFieldUpdateOperationsInput | number | null
    changed_at?: DateTimeFieldUpdateOperationsInput | Date | string
    created_by?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type lock_eventUpdateWithoutTruckInput = {
    id?: StringFieldUpdateOperationsInput | string
    is_lock?: NullableIntFieldUpdateOperationsInput | number | null
    reported_at?: DateTimeFieldUpdateOperationsInput | Date | string
    created_by?: NullableStringFieldUpdateOperationsInput | string | null
    device?: deviceUpdateOneRequiredWithoutLock_eventNestedInput
  }

  export type lock_eventUncheckedUpdateWithoutTruckInput = {
    id?: StringFieldUpdateOperationsInput | string
    device_id?: StringFieldUpdateOperationsInput | string
    is_lock?: NullableIntFieldUpdateOperationsInput | number | null
    reported_at?: DateTimeFieldUpdateOperationsInput | Date | string
    created_by?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type lock_eventUncheckedUpdateManyWithoutTruckInput = {
    id?: StringFieldUpdateOperationsInput | string
    device_id?: StringFieldUpdateOperationsInput | string
    is_lock?: NullableIntFieldUpdateOperationsInput | number | null
    reported_at?: DateTimeFieldUpdateOperationsInput | Date | string
    created_by?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type sensor_data_rawUpdateWithoutTruckInput = {
    id?: StringFieldUpdateOperationsInput | string
    device_sn?: StringFieldUpdateOperationsInput | string
    cmd_type?: StringFieldUpdateOperationsInput | string
    tire_no?: NullableIntFieldUpdateOperationsInput | number | null
    raw_json?: JsonNullValueInput | InputJsonValue
    processed?: NullableBoolFieldUpdateOperationsInput | boolean | null
    received_at?: DateTimeFieldUpdateOperationsInput | Date | string
    processed_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    sensor_processing_queue?: sensor_processing_queueUpdateManyWithoutSensor_data_rawNestedInput
  }

  export type sensor_data_rawUncheckedUpdateWithoutTruckInput = {
    id?: StringFieldUpdateOperationsInput | string
    device_sn?: StringFieldUpdateOperationsInput | string
    cmd_type?: StringFieldUpdateOperationsInput | string
    tire_no?: NullableIntFieldUpdateOperationsInput | number | null
    raw_json?: JsonNullValueInput | InputJsonValue
    processed?: NullableBoolFieldUpdateOperationsInput | boolean | null
    received_at?: DateTimeFieldUpdateOperationsInput | Date | string
    processed_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    sensor_processing_queue?: sensor_processing_queueUncheckedUpdateManyWithoutSensor_data_rawNestedInput
  }

  export type sensor_data_rawUncheckedUpdateManyWithoutTruckInput = {
    id?: StringFieldUpdateOperationsInput | string
    device_sn?: StringFieldUpdateOperationsInput | string
    cmd_type?: StringFieldUpdateOperationsInput | string
    tire_no?: NullableIntFieldUpdateOperationsInput | number | null
    raw_json?: JsonNullValueInput | InputJsonValue
    processed?: NullableBoolFieldUpdateOperationsInput | boolean | null
    received_at?: DateTimeFieldUpdateOperationsInput | Date | string
    processed_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type speed_eventUpdateWithoutTruckInput = {
    id?: StringFieldUpdateOperationsInput | string
    speed_kph?: NullableFloatFieldUpdateOperationsInput | number | null
    changed_at?: DateTimeFieldUpdateOperationsInput | Date | string
    source?: NullableStringFieldUpdateOperationsInput | string | null
    created_by?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type speed_eventUncheckedUpdateWithoutTruckInput = {
    id?: StringFieldUpdateOperationsInput | string
    speed_kph?: NullableFloatFieldUpdateOperationsInput | number | null
    changed_at?: DateTimeFieldUpdateOperationsInput | Date | string
    source?: NullableStringFieldUpdateOperationsInput | string | null
    created_by?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type speed_eventUncheckedUpdateManyWithoutTruckInput = {
    id?: StringFieldUpdateOperationsInput | string
    speed_kph?: NullableFloatFieldUpdateOperationsInput | number | null
    changed_at?: DateTimeFieldUpdateOperationsInput | Date | string
    source?: NullableStringFieldUpdateOperationsInput | string | null
    created_by?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type tire_position_configUpdateWithoutTruckInput = {
    id?: StringFieldUpdateOperationsInput | string
    tire_no?: IntFieldUpdateOperationsInput | number
    position_name?: NullableStringFieldUpdateOperationsInput | string | null
    wheel_type?: NullableStringFieldUpdateOperationsInput | string | null
    is_active?: NullableBoolFieldUpdateOperationsInput | boolean | null
    created_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type tire_position_configUncheckedUpdateWithoutTruckInput = {
    id?: StringFieldUpdateOperationsInput | string
    tire_no?: IntFieldUpdateOperationsInput | number
    position_name?: NullableStringFieldUpdateOperationsInput | string | null
    wheel_type?: NullableStringFieldUpdateOperationsInput | string | null
    is_active?: NullableBoolFieldUpdateOperationsInput | boolean | null
    created_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type tire_position_configUncheckedUpdateManyWithoutTruckInput = {
    id?: StringFieldUpdateOperationsInput | string
    tire_no?: IntFieldUpdateOperationsInput | number
    position_name?: NullableStringFieldUpdateOperationsInput | string | null
    wheel_type?: NullableStringFieldUpdateOperationsInput | string | null
    is_active?: NullableBoolFieldUpdateOperationsInput | boolean | null
    created_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type tire_pressure_eventUpdateWithoutTruckInput = {
    id?: StringFieldUpdateOperationsInput | string
    tire_no?: IntFieldUpdateOperationsInput | number
    pressure_kpa?: NullableFloatFieldUpdateOperationsInput | number | null
    temp_celsius?: NullableFloatFieldUpdateOperationsInput | number | null
    ex_type?: NullableStringFieldUpdateOperationsInput | string | null
    battery_level?: NullableIntFieldUpdateOperationsInput | number | null
    changed_at?: DateTimeFieldUpdateOperationsInput | Date | string
    created_by?: NullableStringFieldUpdateOperationsInput | string | null
    device?: deviceUpdateOneRequiredWithoutTire_pressure_eventNestedInput
  }

  export type tire_pressure_eventUncheckedUpdateWithoutTruckInput = {
    id?: StringFieldUpdateOperationsInput | string
    device_id?: StringFieldUpdateOperationsInput | string
    tire_no?: IntFieldUpdateOperationsInput | number
    pressure_kpa?: NullableFloatFieldUpdateOperationsInput | number | null
    temp_celsius?: NullableFloatFieldUpdateOperationsInput | number | null
    ex_type?: NullableStringFieldUpdateOperationsInput | string | null
    battery_level?: NullableIntFieldUpdateOperationsInput | number | null
    changed_at?: DateTimeFieldUpdateOperationsInput | Date | string
    created_by?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type tire_pressure_eventUncheckedUpdateManyWithoutTruckInput = {
    id?: StringFieldUpdateOperationsInput | string
    device_id?: StringFieldUpdateOperationsInput | string
    tire_no?: IntFieldUpdateOperationsInput | number
    pressure_kpa?: NullableFloatFieldUpdateOperationsInput | number | null
    temp_celsius?: NullableFloatFieldUpdateOperationsInput | number | null
    ex_type?: NullableStringFieldUpdateOperationsInput | string | null
    battery_level?: NullableIntFieldUpdateOperationsInput | number | null
    changed_at?: DateTimeFieldUpdateOperationsInput | Date | string
    created_by?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type tripUpdateWithoutTruckInput = {
    id?: StringFieldUpdateOperationsInput | string
    start_ts?: DateTimeFieldUpdateOperationsInput | Date | string
    end_ts?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type tripUncheckedUpdateWithoutTruckInput = {
    id?: StringFieldUpdateOperationsInput | string
    start_ts?: DateTimeFieldUpdateOperationsInput | Date | string
    end_ts?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type tripUncheckedUpdateManyWithoutTruckInput = {
    id?: StringFieldUpdateOperationsInput | string
    start_ts?: DateTimeFieldUpdateOperationsInput | Date | string
    end_ts?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type truck_status_eventUpdateWithoutTruckInput = {
    id?: StringFieldUpdateOperationsInput | string
    status?: Enumtruck_statusFieldUpdateOperationsInput | $Enums.truck_status
    note?: NullableStringFieldUpdateOperationsInput | string | null
    changed_at?: DateTimeFieldUpdateOperationsInput | Date | string
    created_by?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type truck_status_eventUncheckedUpdateWithoutTruckInput = {
    id?: StringFieldUpdateOperationsInput | string
    status?: Enumtruck_statusFieldUpdateOperationsInput | $Enums.truck_status
    note?: NullableStringFieldUpdateOperationsInput | string | null
    changed_at?: DateTimeFieldUpdateOperationsInput | Date | string
    created_by?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type truck_status_eventUncheckedUpdateManyWithoutTruckInput = {
    id?: StringFieldUpdateOperationsInput | string
    status?: Enumtruck_statusFieldUpdateOperationsInput | $Enums.truck_status
    note?: NullableStringFieldUpdateOperationsInput | string | null
    changed_at?: DateTimeFieldUpdateOperationsInput | Date | string
    created_by?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type device_truck_assignmentCreateManyUsers_device_truck_assignment_assigned_byTousersInput = {
    id?: string
    device_id?: string | null
    truck_id?: string | null
    assigned_at?: Date | string
    removed_at?: Date | string | null
    removed_by?: string | null
    is_active?: boolean | null
  }

  export type device_truck_assignmentCreateManyUsers_device_truck_assignment_removed_byTousersInput = {
    id?: string
    device_id?: string | null
    truck_id?: string | null
    assigned_at?: Date | string
    assigned_by?: string | null
    removed_at?: Date | string | null
    is_active?: boolean | null
  }

  export type device_truck_assignmentUpdateWithoutUsers_device_truck_assignment_assigned_byTousersInput = {
    id?: StringFieldUpdateOperationsInput | string
    assigned_at?: DateTimeFieldUpdateOperationsInput | Date | string
    removed_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    is_active?: NullableBoolFieldUpdateOperationsInput | boolean | null
    device?: deviceUpdateOneWithoutDevice_truck_assignmentNestedInput
    users_device_truck_assignment_removed_byTousers?: usersUpdateOneWithoutDevice_truck_assignment_device_truck_assignment_removed_byTousersNestedInput
    truck?: truckUpdateOneWithoutDevice_truck_assignmentNestedInput
  }

  export type device_truck_assignmentUncheckedUpdateWithoutUsers_device_truck_assignment_assigned_byTousersInput = {
    id?: StringFieldUpdateOperationsInput | string
    device_id?: NullableStringFieldUpdateOperationsInput | string | null
    truck_id?: NullableStringFieldUpdateOperationsInput | string | null
    assigned_at?: DateTimeFieldUpdateOperationsInput | Date | string
    removed_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    removed_by?: NullableStringFieldUpdateOperationsInput | string | null
    is_active?: NullableBoolFieldUpdateOperationsInput | boolean | null
  }

  export type device_truck_assignmentUncheckedUpdateManyWithoutUsers_device_truck_assignment_assigned_byTousersInput = {
    id?: StringFieldUpdateOperationsInput | string
    device_id?: NullableStringFieldUpdateOperationsInput | string | null
    truck_id?: NullableStringFieldUpdateOperationsInput | string | null
    assigned_at?: DateTimeFieldUpdateOperationsInput | Date | string
    removed_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    removed_by?: NullableStringFieldUpdateOperationsInput | string | null
    is_active?: NullableBoolFieldUpdateOperationsInput | boolean | null
  }

  export type device_truck_assignmentUpdateWithoutUsers_device_truck_assignment_removed_byTousersInput = {
    id?: StringFieldUpdateOperationsInput | string
    assigned_at?: DateTimeFieldUpdateOperationsInput | Date | string
    removed_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    is_active?: NullableBoolFieldUpdateOperationsInput | boolean | null
    users_device_truck_assignment_assigned_byTousers?: usersUpdateOneWithoutDevice_truck_assignment_device_truck_assignment_assigned_byTousersNestedInput
    device?: deviceUpdateOneWithoutDevice_truck_assignmentNestedInput
    truck?: truckUpdateOneWithoutDevice_truck_assignmentNestedInput
  }

  export type device_truck_assignmentUncheckedUpdateWithoutUsers_device_truck_assignment_removed_byTousersInput = {
    id?: StringFieldUpdateOperationsInput | string
    device_id?: NullableStringFieldUpdateOperationsInput | string | null
    truck_id?: NullableStringFieldUpdateOperationsInput | string | null
    assigned_at?: DateTimeFieldUpdateOperationsInput | Date | string
    assigned_by?: NullableStringFieldUpdateOperationsInput | string | null
    removed_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    is_active?: NullableBoolFieldUpdateOperationsInput | boolean | null
  }

  export type device_truck_assignmentUncheckedUpdateManyWithoutUsers_device_truck_assignment_removed_byTousersInput = {
    id?: StringFieldUpdateOperationsInput | string
    device_id?: NullableStringFieldUpdateOperationsInput | string | null
    truck_id?: NullableStringFieldUpdateOperationsInput | string | null
    assigned_at?: DateTimeFieldUpdateOperationsInput | Date | string
    assigned_by?: NullableStringFieldUpdateOperationsInput | string | null
    removed_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    is_active?: NullableBoolFieldUpdateOperationsInput | boolean | null
  }



  /**
   * Aliases for legacy arg types
   */
    /**
     * @deprecated Use DeviceCountOutputTypeDefaultArgs instead
     */
    export type DeviceCountOutputTypeArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = DeviceCountOutputTypeDefaultArgs<ExtArgs>
    /**
     * @deprecated Use Fleet_groupCountOutputTypeDefaultArgs instead
     */
    export type Fleet_groupCountOutputTypeArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = Fleet_groupCountOutputTypeDefaultArgs<ExtArgs>
    /**
     * @deprecated Use Sensor_data_rawCountOutputTypeDefaultArgs instead
     */
    export type Sensor_data_rawCountOutputTypeArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = Sensor_data_rawCountOutputTypeDefaultArgs<ExtArgs>
    /**
     * @deprecated Use TruckCountOutputTypeDefaultArgs instead
     */
    export type TruckCountOutputTypeArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = TruckCountOutputTypeDefaultArgs<ExtArgs>
    /**
     * @deprecated Use UsersCountOutputTypeDefaultArgs instead
     */
    export type UsersCountOutputTypeArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = UsersCountOutputTypeDefaultArgs<ExtArgs>
    /**
     * @deprecated Use alert_eventDefaultArgs instead
     */
    export type alert_eventArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = alert_eventDefaultArgs<ExtArgs>
    /**
     * @deprecated Use daily_routeDefaultArgs instead
     */
    export type daily_routeArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = daily_routeDefaultArgs<ExtArgs>
    /**
     * @deprecated Use deviceDefaultArgs instead
     */
    export type deviceArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = deviceDefaultArgs<ExtArgs>
    /**
     * @deprecated Use device_status_eventDefaultArgs instead
     */
    export type device_status_eventArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = device_status_eventDefaultArgs<ExtArgs>
    /**
     * @deprecated Use device_truck_assignmentDefaultArgs instead
     */
    export type device_truck_assignmentArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = device_truck_assignmentDefaultArgs<ExtArgs>
    /**
     * @deprecated Use fleet_groupDefaultArgs instead
     */
    export type fleet_groupArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = fleet_groupDefaultArgs<ExtArgs>
    /**
     * @deprecated Use fuel_level_eventDefaultArgs instead
     */
    export type fuel_level_eventArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = fuel_level_eventDefaultArgs<ExtArgs>
    /**
     * @deprecated Use geofenceDefaultArgs instead
     */
    export type geofenceArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = geofenceDefaultArgs<ExtArgs>
    /**
     * @deprecated Use gps_positionDefaultArgs instead
     */
    export type gps_positionArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = gps_positionDefaultArgs<ExtArgs>
    /**
     * @deprecated Use hub_temperature_eventDefaultArgs instead
     */
    export type hub_temperature_eventArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = hub_temperature_eventDefaultArgs<ExtArgs>
    /**
     * @deprecated Use lock_eventDefaultArgs instead
     */
    export type lock_eventArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = lock_eventDefaultArgs<ExtArgs>
    /**
     * @deprecated Use sensorDefaultArgs instead
     */
    export type sensorArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = sensorDefaultArgs<ExtArgs>
    /**
     * @deprecated Use sensor_data_rawDefaultArgs instead
     */
    export type sensor_data_rawArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = sensor_data_rawDefaultArgs<ExtArgs>
    /**
     * @deprecated Use sensor_processing_queueDefaultArgs instead
     */
    export type sensor_processing_queueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = sensor_processing_queueDefaultArgs<ExtArgs>
    /**
     * @deprecated Use spatial_ref_sysDefaultArgs instead
     */
    export type spatial_ref_sysArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = spatial_ref_sysDefaultArgs<ExtArgs>
    /**
     * @deprecated Use speed_eventDefaultArgs instead
     */
    export type speed_eventArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = speed_eventDefaultArgs<ExtArgs>
    /**
     * @deprecated Use tire_error_codeDefaultArgs instead
     */
    export type tire_error_codeArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = tire_error_codeDefaultArgs<ExtArgs>
    /**
     * @deprecated Use tire_position_configDefaultArgs instead
     */
    export type tire_position_configArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = tire_position_configDefaultArgs<ExtArgs>
    /**
     * @deprecated Use tire_pressure_eventDefaultArgs instead
     */
    export type tire_pressure_eventArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = tire_pressure_eventDefaultArgs<ExtArgs>
    /**
     * @deprecated Use tripDefaultArgs instead
     */
    export type tripArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = tripDefaultArgs<ExtArgs>
    /**
     * @deprecated Use truckDefaultArgs instead
     */
    export type truckArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = truckDefaultArgs<ExtArgs>
    /**
     * @deprecated Use truck_status_eventDefaultArgs instead
     */
    export type truck_status_eventArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = truck_status_eventDefaultArgs<ExtArgs>
    /**
     * @deprecated Use usersDefaultArgs instead
     */
    export type usersArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = usersDefaultArgs<ExtArgs>

  /**
   * Batch Payload for updateMany & deleteMany & createMany
   */

  export type BatchPayload = {
    count: number
  }

  /**
   * DMMF
   */
  export const dmmf: runtime.BaseDMMF
}